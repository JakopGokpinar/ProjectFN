[{"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/index.js":"1","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/NotFound.js":"2","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/LoginAndRegister/Login.js":"3","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/LoginAndRegister/Register.js":"4","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/ProductPage/ProductPage.js":"5","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/HomePage/Menu.js":"6","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/Navbar/Navbar.js":"7","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/reportWebVitals.js":"8","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/App.js":"9","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/ProductCard/ProductCard.js":"10","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/ProductStatusTag/ProductStatusTag.js":"11","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/utils/cropImage.js":"12","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/utils/dataURltoFile.js":"13","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/config/store-config.js":"14","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/SearchResult.js":"15","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/ProductCard/CardProperties.js":"16","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/FilterSearch/FilterBox.js":"17","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Chat/Chat.js":"18","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Favorites/Favorites.js":"19","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/MyAnnonces/MyAnnonces.js":"20","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Profile.js":"21","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js":"22","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/config/api.js":"23","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Profile/Profile.js":"24","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/userSlice.js":"25","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/userSliceActions.js":"26","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/Navbar/Searchbar.js":"27","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/FeedbackBanner.js":"28","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/uiSlice.js":"29","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/Filters.js":"30","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/FilterBadge.js":"31","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/Footer/Footer.js":"32","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/appDataSliceActions.js":"33","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/appDataSlice.js":"34"},{"size":572,"mtime":1681127210422,"results":"35","hashOfConfig":"36"},{"size":383,"mtime":1681127859462,"results":"37","hashOfConfig":"36"},{"size":3754,"mtime":1678387017023,"results":"38","hashOfConfig":"36"},{"size":5431,"mtime":1678295137524,"results":"39","hashOfConfig":"36"},{"size":11433,"mtime":1681129789818,"results":"40","hashOfConfig":"36"},{"size":3333,"mtime":1678641823084,"results":"41","hashOfConfig":"36"},{"size":3893,"mtime":1681130818100,"results":"42","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"36"},{"size":3099,"mtime":1681311891997,"results":"44","hashOfConfig":"36"},{"size":6271,"mtime":1681121845988,"results":"45","hashOfConfig":"36"},{"size":680,"mtime":1631679750914,"results":"46","hashOfConfig":"47"},{"size":1122,"mtime":1638766611128,"results":"48","hashOfConfig":"36"},{"size":363,"mtime":1638766763783,"results":"49","hashOfConfig":"36"},{"size":355,"mtime":1679226394596,"results":"50","hashOfConfig":"36"},{"size":7803,"mtime":1678733427003,"results":"51","hashOfConfig":"36"},{"size":1345,"mtime":1674837549706,"results":"52","hashOfConfig":"36"},{"size":641,"mtime":1654541373628,"results":"53","hashOfConfig":"54"},{"size":686,"mtime":1676585200860,"results":"55","hashOfConfig":"36"},{"size":2238,"mtime":1678733406820,"results":"56","hashOfConfig":"36"},{"size":1776,"mtime":1675010347360,"results":"57","hashOfConfig":"36"},{"size":1890,"mtime":1679754256922,"results":"58","hashOfConfig":"36"},{"size":24711,"mtime":1681297058806,"results":"59","hashOfConfig":"36"},{"size":249,"mtime":1672577086867,"results":"60","hashOfConfig":"36"},{"size":9371,"mtime":1678733883507,"results":"61","hashOfConfig":"36"},{"size":1334,"mtime":1678643040379,"results":"62","hashOfConfig":"36"},{"size":6609,"mtime":1681041018291,"results":"63","hashOfConfig":"36"},{"size":5759,"mtime":1681311918364,"results":"64","hashOfConfig":"36"},{"size":1588,"mtime":1681042609021,"results":"65","hashOfConfig":"36"},{"size":961,"mtime":1678551815703,"results":"66","hashOfConfig":"36"},{"size":10860,"mtime":1681312259363,"results":"67","hashOfConfig":"36"},{"size":1514,"mtime":1681310769552,"results":"68","hashOfConfig":"36"},{"size":2022,"mtime":1681133438875,"results":"69","hashOfConfig":"36"},{"size":1705,"mtime":1679693974027,"results":"70","hashOfConfig":"36"},{"size":552,"mtime":1679321394127,"results":"71","hashOfConfig":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"7ipl8n",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"15rv3wu",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"1536f3j",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/index.js",[],["149","150"],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/NotFound.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/LoginAndRegister/Login.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/LoginAndRegister/Register.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/ProductPage/ProductPage.js",["151"],"import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport { instanceAxs } from \"../../config/api.js\";\r\nimport './ProductPage.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { uiSliceActions } from \"../../features/uiSlice.js\";\r\nimport { addToFavorites, removeFromFavorites } from \"../../features/userSliceActions.js\";\r\n\r\nfunction ProductPage() {\r\n\r\n    let { annonceId } = useParams();\r\n\r\n    const user = useSelector(state => state.user.user);\r\n    const dispatch = useDispatch();\r\n    const [annonce, setAnnonce] = useState('');\r\n    const [seller, setSeller] = useState({username: '', userDate: '', profilepicture: ''})\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    const [showShareModal, setShowShareModal] = useState(false);\r\n\r\n    const findProduct = async () => {\r\n        await instanceAxs.get(`/product?id=${annonceId}`)\r\n            .then(respond => {\r\n                if (respond.status !== 200) {\r\n                    setLoading(false)\r\n                    return;\r\n                }\r\n                let owner = respond.data.seller;\r\n                let date = new Date(owner.userDate);\r\n\r\n                setAnnonce(respond.data.product);\r\n                setSeller({username: owner.username, userDate: date.getFullYear(), profilepicture: owner.userProfilePicture})\r\n                setLoading(false)\r\n            })   \r\n            .catch(err => {\r\n                console.log(err);\r\n            })   \r\n    }\r\n\r\n    const handleAddToFavorites = () => {\r\n        setShowSpinner(true)\r\n        setTimeout(() => {\r\n          dispatch(addToFavorites(annonceId))\r\n          setShowSpinner(false)\r\n        }, 1000)\r\n      }\r\n    \r\n      const handleRemoveFromFavorites = () => {\r\n        setShowSpinner(true)\r\n        setTimeout(() => {\r\n          dispatch(removeFromFavorites(annonceId))\r\n          setShowSpinner(false)\r\n        }, 1000)\r\n      }\r\n\r\n    const showTheModal = () => {\r\n        setShowShareModal(true)\r\n      }\r\n      const closeShareModal = () => {\r\n        setShowShareModal(false)\r\n      }\r\n    \r\n      const copyAnnonceLink = (event) => {\r\n        event.preventDefault();\r\n        let text = `http://localhost:3000/produkt/${annonceId}`;\r\n        navigator.clipboard.writeText(text)\r\n        dispatch(uiSliceActions.setFeedbackBanner({severity: 'success', msg: 'Annons lenken ble kopiert'}));\r\n        setShowShareModal(false)\r\n      }\r\n\r\n    useEffect(() => {\r\n        findProduct();\r\n        //eslint-disable-next-line\r\n    }, [isLoading])\r\n\r\n    useEffect(() => {\r\n        findProduct();\r\n    }, [user])\r\n\r\n    return(\r\n        <div style={{minHeight: '100vh', display: 'flex', flexDirection: 'column', flexGrow: 1}}>\r\n            { annonce !== '' ?\r\n                <Container className=\"productPage\">\r\n                    <Row className=\"product-page-row\">\r\n                        <Col className=\"product-content-col\">\r\n                            <div className=\"content-col-div\">\r\n\r\n                            <Breadcrumb className=\"mt-2\">\r\n                                  <Breadcrumb.Item active>Kategori</Breadcrumb.Item>\r\n                                  <Breadcrumb.Item href={`/search?category=${annonce.category}`}>{annonce.category}</Breadcrumb.Item>\r\n                                  <Breadcrumb.Item>{annonce.subCategory}</Breadcrumb.Item>\r\n                              </Breadcrumb>\r\n                                    <Carousel variant=\"dark\" className=\"annonce-carousel bg-light mb-4\" slide=\"false\">\r\n                                        {annonce.annonceImages.map((item, index) => {\r\n                                            return(\r\n                                                <Carousel.Item key={index}>\r\n                                                <img src={item.location} alt=\"item img\" className=\"annonce-image\"/>            \r\n                                                <Carousel.Caption className=\"annonce-image-caption\">\r\n                                                    <p className=\"annonce-image-caption__text mb-4\">{item.description}</p>\r\n                                                </Carousel.Caption>\r\n                                            </Carousel.Item>\r\n                                            )\r\n                                        })}\r\n                                    </Carousel>\r\n\r\n                                    <div className=\"price-and-controlbuttons mb-3\">\r\n                                        <div className=\"d-flex align-items-center me-3\">\r\n                                            <p className=\"me-2\" style={{fontSize: '20px'}}>{annonce.price} kr</p>\r\n                                            <p> - {annonce.pricePeriod}</p>  \r\n                                        </div>\r\n                                        {annonce.isFavorite ? \r\n                                            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Remove from Favorites</Tooltip>}>\r\n                                                <Button variant=\"danger\" onClick={handleRemoveFromFavorites}>\r\n                                                {showSpinner ? <Spinner size='sm'/> : <><i className=\"fa-solid fa-heart me-2\"/> Fjern fra Favoritter </>}\r\n                                                </Button>\r\n                                            </OverlayTrigger>\r\n                                        :\r\n                                            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Add to Favorites</Tooltip>}>\r\n                                                <Button variant=\"outline-danger\" onClick={handleAddToFavorites} size='sm'>\r\n                                                {showSpinner ? <Spinner size='sm'/> : <><i className=\"fa-solid fa-heart me-2\"/> Legg til Favoritter</>}\r\n                                                </Button>\r\n                                        </OverlayTrigger>\r\n                                        }\r\n\r\n                                        <Button variant=\"outline-secondary\" className=\"ms-3\" onClick={showTheModal} size=\"sm\">\r\n                                            <i className=\"fa-solid fa-arrow-up-from-bracket me-2\"/> Del\r\n                                        </Button>\r\n\r\n                                        <Modal show={showShareModal} onHide={closeShareModal}>\r\n                                            <Modal.Header closeButton>\r\n                                                <Modal.Title>Del annonsen</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body>\r\n                                                <p>Vil du dele denne annonsen?</p>\r\n                                                <Form.Control type=\"text\" className=\"mb-3\" value={`http://localhost:3000/produkt/${annonceId}`} disabled/>\r\n                                                <Button type='button' variant=\"outline-primary\" className=\"mb-2\" onClick={copyAnnonceLink}>\r\n                                                    Kopier Lenken\r\n                                                </Button>\r\n                                            </Modal.Body>\r\n                                        </Modal>\r\n                                    </div>\r\n\r\n                                    <p className=\"annonce-product-title mb-5\">BMW X5</p>\r\n\r\n                                    <div className=\"annonce-content-box\">\r\n                                        <p className=\"annonce-content-heading\">Description</p>\r\n                                        <TextareaAutosize className=\"annonce-product-desc\" value={annonce.description} disabled/>\r\n                                    </div>\r\n\r\n                                    <div className=\"annonce-content-box\">\r\n                                            <p className=\"annonce-content-heading mb-2\">Nokkelinfo</p>\r\n                                            <div className=\"annonce-special-props-div\">\r\n                                                <div className=\"special-props-box border\">\r\n                                                    <p className=\"special-prop-title\">Status</p>\r\n                                                    <p>{annonce.status && annonce.status}</p>\r\n                                                </div>\r\n                                                {annonce.specialProperties.map((item, index) => {\r\n                                                    return(\r\n                                                        <div key={index} className=\"special-props-box border\">\r\n                                                            <p className=\"special-prop-title\">{item.title}</p>\r\n                                                            <p>{item.value}</p>\r\n                                                        </div>\r\n                                                    )\r\n                                                })}\r\n                                            </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"annonce-content-box\">\r\n                                            <p className=\"annonce-content-heading mb-2\">Addresse</p>\r\n                                            <p>{annonce.postnumber}</p>\r\n                                            <p>{annonce.location}</p>\r\n                                    </div>\r\n\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg={4} className='productPage-seller-col'>\r\n                                <div className=\"seller-panel\">\r\n                                        <Avatar className=\"seller-avatar\" src={seller.profilepicture} alt='avatar'sx={{width: '128px', height: '128px'}}/>\r\n                                        <div className=\"seller-information\">\r\n                                            <p className=\"seller-username\">{seller.username}</p>\r\n                                            <p className=\"seller-subinfo mb-5\">Bruker siden {seller.userDate}</p>\r\n                                            <p className=\"seller-lastactive mt-4 mb-2\">Last active 23 min ago</p>\r\n                                            <Button variant=\"primary\"><i className=\"fa-solid fa-envelope me-2\"/> Send Melding</Button>\r\n                                        </div>\r\n                                </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                :\r\n                <h4 className=\"m-5\">Beklager, annonsen kunne ikke finnes</h4>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage;","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/HomePage/Menu.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/Navbar/Navbar.js",["152","153","154","155"],"import React, { useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logoutRequest } from \"../../features/userSliceActions\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Searchbar from \"./Searchbar\";\r\n\r\nconst Navigation = () => {\r\n  const [currentY, setCurrentY] = useState(0);\r\n  const [isRender, setIsRender] = useState(true);\r\n  // const [searchInput, setSearchInput] = useState('a');\r\n  const [show, setShow] = useState(false);\r\n\r\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn)\r\n  const user = useSelector(state => state.user.user);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  //########## FUNCTIONS ##########\r\n\r\n  const showDropdown = (e)=>{\r\n      setShow(!show);\r\n  }\r\n\r\n  const hideDropdown = e => {\r\n      setShow(false);\r\n  }\r\n\r\n/*   const checkCharacters = async () => {\r\n      let input = searchInput.trim().replace(/\\s/g, \"+\");\r\n      setSearchInput(input) \r\n  } */\r\n\r\n  const scroll = () => {\r\n    if (window.scrollY > currentY) {\r\n      setIsRender(false)\r\n    } else {\r\n      setIsRender(true)\r\n    }\r\n    setCurrentY( window.scrollY );\r\n  }\r\n\r\n  const logout = () => {\r\n    dispatch(logoutRequest())\r\n  }\r\n\r\n  const navigateToProfile = () => {\r\n    navigate('/profil')\r\n  }\r\n\r\n    window.addEventListener(\"scroll\", scroll);\r\n    return (\r\n      <div>\r\n        {isRender &&\r\n          <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\" className=\"navigation\">\r\n            <Container>\r\n                <Navbar.Brand href=\"/\" className=\"\">Finn</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />   \r\n                <Navbar.Collapse id=\"basic-navbar-nav\" style={{margin: 10}}>       \r\n\r\n                    <Searchbar></Searchbar>\r\n                    \r\n                    {isLoggedIn ? \r\n                        <Nav className=\"d-flex align-items-center flex-grow-1 justify-content-end navbar-username\">\r\n                            <Avatar className=\"navbar-avatar\" alt='pp' src={user.profilePicture} sx={{width: 32, height: 32, marginRight: 1}}></Avatar>\r\n                            <DropdownButton id=\"dropdown-basic-button\" title={user.username || user.email} variant=\"light\">\r\n                                <Dropdown.Item href=\"min-konto\">Min Konto</Dropdown.Item>\r\n                                <Dropdown.Divider/>\r\n                                <Dropdown.Item href=\"/nyannonse\">Ny Annonse</Dropdown.Item>\r\n                                <Dropdown.Item href=\"/profil\">Min Profil</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Meldinger</Dropdown.Item>\r\n                                <Dropdown.Item href=\"/mine-annonser\">Mine Annonser</Dropdown.Item>\r\n                                <Dropdown.Item href=\"/favoritter\">Favoritter</Dropdown.Item>\r\n                                <Dropdown.Divider/>\r\n                                <Dropdown.Item onClick={logout}>Logg Ut</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </Nav>\r\n                          :\r\n                          <Nav className=\"flex-grow-1 justify-content-end\">\r\n                              <Nav.Link href='/login'>Logg Inn</Nav.Link>\r\n                              <Nav.Link href='/register'>Register</Nav.Link>\r\n                          </Nav>\r\n                      }\r\n              </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n        }\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default Navigation; \r\n","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/reportWebVitals.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/App.js",["156"],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/ProductCard/ProductCard.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/ProductStatusTag/ProductStatusTag.js",[],["157","158"],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/utils/cropImage.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/utils/dataURltoFile.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/config/store-config.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/SearchResult.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/ProductCard/CardProperties.js",[],["159","160"],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/FilterSearch/FilterBox.js",[],["161","162"],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Chat/Chat.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Favorites/Favorites.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/MyAnnonces/MyAnnonces.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Profile.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js",["163","164","165","166","167","168","169"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./NewAnnonce.css\";\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport Modal from 'react-bootstrap/Modal';\nimport Carousel from 'react-bootstrap/Carousel';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Backdrop from '@mui/material/Backdrop';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport { instanceAxs } from \"../../config/api\";\nimport { useFindCommuneByPostnumber } from \"../../features/appDataSliceActions\";\nimport data from  '../../categories.json';\nimport { fetchUser } from \"../../features/userSliceActions\";\nimport { uiSliceActions } from \"../../features/uiSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewAnnonce = () => {\n  const loggedIn = useSelector(state => state.user.isLoggedIn);\n  const communeFinder = useFindCommuneByPostnumber();\n  \n  const dragItem = useRef();\n  const dragOverItem = useRef();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [rerender, setRerender] = useState(false) //dummy state to use force update on imageArray when image description added\n  const [isPublishing, setIsPublishing] = useState(false);\n  const [imageArray, setImageArray] = useState([]);\n  const [showBackdrop, setShowBackdrop] = useState(false);\n  const [specPropTitle, setSpecPropTitle] = useState('');\n  const [specPropVal, setSpecPropVal] = useState('');\n  const [specPropArray, setSpecPropArray] = useState([]); \n  const [postAddress, setPostAddress] = useState('Ugyldig postnummer');\n  const [postNumber, setPostNumber] = useState('')\n  const [selectedMainCat, setSelectedMainCat] = useState('')\n  const [annoncePropertyObject, setAnnoncePropertyObject] = useState({})\n\n  const dragStart = (e, position) => {\n    dragItem.current = position;\n  };\n  const dragEnter = (e, position) => {\n    dragOverItem.current = position;\n  };\n  const drop = (e) => {\n    const copyListItems = [...imageArray];\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setImageArray(copyListItems);\n  };\n\nconst handlePropertyChange = (e) => {\n  let itemKey = e.target.id;\n  let value = e.target.value;\n  if(itemKey === \"category\") {\n    value = JSON.parse(value)\n    setSelectedMainCat(value);\n    value = value.maincategory;\n  } else if(itemKey === 'status') {\n    var specArray = specPropArray;\n    var matchedObj = specArray.find(item => item.title === \"Status\") || {}\n    let index = specArray.indexOf(matchedObj);\n    matchedObj= {title: \"Status\", value}\n    specArray.splice(index, 1, matchedObj);\n    setSpecPropArray(specArray)\n  }\n  setAnnoncePropertyObject(prevState => ({\n    ...prevState, [itemKey]: value\n  }))\n}\n\nconst handleImageDelete = (e,imagename) => {\n  e.preventDefault()\n  let imgArr = imageArray;\n  imgArr = imgArr.filter(img => img.name !== imagename);\n  setImageArray(imgArr)\n}   \n\nconst handleImageDescription = (e,item) => {\n  var copyImageArray = imageArray;\n  var copyItem = item;\n\n  let index = copyImageArray.indexOf(item);\n\n  if(index !== -1) {\n    copyItem.description = e.target.value;\n    copyImageArray[index] = copyItem;\n    setImageArray(!rerender);\n    setRerender(!rerender)\n    setImageArray(copyImageArray);  \n  }\n}\n\nconst insertSpecialProp = () => {\n  let title = specPropTitle;\n  let value = specPropVal;\n  if(title === '' || value === '') return;\n\n  title = title.charAt(0).toUpperCase() + title.slice(1);\n  var specArray = specPropArray;\n  let matchedObj= specArray.find((item, index) => {\n    if(item.title === title) {\n      specArray[index] = {title, value};\n      return true;\n    }\n  });\n\n  if(matchedObj) {\n    setSpecPropArray(specArray)\n  } else {\n    let specObj = {title, value};\n    setSpecPropArray(prevState => [...prevState, specObj])\n  }\n  setShowBackdrop(false)\n}\nconst removeSpecialProp = (title) => {\n  var copyItems = specPropArray;\n  copyItems = copyItems.filter(item => item.title !== title);\n  setSpecPropArray(copyItems)\n}\n\nconst submitAnnonce = async (event) => {\n  event.preventDefault();\n  setIsPublishing(true)\n  const specialProps = [];\n  var annonceProperties = annoncePropertyObject;\n\n  specPropArray.map(item => {\n    if(item.title !== 'Status'){\n      specialProps.push(item)\n    }\n  })\n  annonceProperties[\"specialProperties\"] = specialProps\n\n  setTimeout(async () => {\n    const formData = await convertImagesToFormData();\n    await uploadImagesToServer(formData, annonceProperties, uploadAnnonceToServer);\n  }, 2000);\n}\n\n const onImageChange = async (event) => {\n  if(!event.target.files) return;   //target.files seçilen dosyaları döner\n\n  // Array.from() target.files'ı iterable bir array'e dönüştürür\n   Array.from(event.target.files).forEach(file => { \n      var reader = new FileReader();  //Yüklenen resmin datasını oku.\n      reader.readAsDataURL(file);\n      reader.addEventListener('load', () => { \n      setImageArray(prevState => \n        [...prevState, \n          {name: file.name, data: reader.result, description: '' }\n        ])\n      })\n    })\n};\n\n const convertImagesToFormData =  async () => {\n  var formData = new FormData();\n  const imgArr = imageArray\n  for (const image of imgArr) {   //await kullanımı için for...of döngüsü\n    const canvas = await getCroppedImage(image.data);\n    const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n    const convertedUrltoFile = dataURLtoFile(canvasDataUrl, image.name);\n\n    formData.append(\"annonceImages\", convertedUrltoFile);\n  }\n  return formData;\n }\n\n const uploadImagesToServer =  async (formData, annonceProps, cb) => {\n  await instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n      if (result.status === 200) {\n        let annonceId = result.data.annonceId;\n        let copyImages = imageArray;\n        let returnedImages = result.data.files;\n        let finalAnnonceImages = []\n\n        for(let i = 0; i<copyImages.length; i++) {\n          let item = copyImages[i];\n          returnedImages.map(el => {\n            if(el.originalname === item.name) {\n              item.location = el.location;\n              delete item.data;\n              delete item.name;\n              finalAnnonceImages.push(item)\n            }\n          })\n        }\n        cb(annonceProps, finalAnnonceImages, annonceId)\n      }\n    })\n    .catch( err => console.log(err) );\n }\n\n const uploadAnnonceToServer =  async (anProp, imageLoc, anId) => {\n  let annonce = {\n    annonceproperties: anProp, \n    imagelocations: imageLoc,\n    annonceid: anId\n  } \n\n  await instanceAxs.post('/newannonce/create', annonce).then(result => {\n    console.log(result)\n    if(result.status === 200) {\n      dispatch(uiSliceActions.setFeedbackBanner({severity: 'success', msg: 'Annonsen ble publisert'}));\n      setIsPublishing(false);\n      dispatch(fetchUser());\n      setTimeout(() => {\n        navigate('/')\n      }, 2000)\n    } else {\n      dispatch(uiSliceActions.setFeedbackBanner({severity: 'error', msg: 'Annonsen kunne ikke publiseres'}));\n      setIsPublishing(false);\n    }\n  })\n  .catch( err => console.log(err) );\n }\n\n useEffect(async () => { \n  var postnum = annoncePropertyObject[\"postnumber\"];\n  postnum = (postnum !== '' && postnum !== undefined) ? postnum : 0;  \n\n  fetch(`http://api.geonames.org/postalCodeLookupJSON?postalcode=${postnum}&country=no&username=goksoft`, \n  {method: 'GET'})\n  .then(response => response.json())\n  .then(data => {\n      var annonceObj = annoncePropertyObject;\n      const placeName = data.postalcodes[0];\n      const postalcode = placeName ? placeName.adminCode2 : 0;\n      const placeProperties = communeFinder(postalcode);\n\n      if(placeProperties) {\n        annonceObj[\"fylke\"] = placeProperties.fylkesNavn;\n        annonceObj[\"kommune\"] = placeProperties.kommuneNavn;\n        annonceObj[\"location\"] = placeName.placeName;\n        setAnnoncePropertyObject(annonceObj)\n        setPostNumber(postnum)\n      }\n      setPostAddress(placeName ? placeName.placeName : 'Ugyldig postnummer');\n  })\n}, [annoncePropertyObject[\"postnumber\"]])\n\n\n\n    return (\n      <div className=\"newannonce-container\">\n            {!loggedIn ? \n                <Modal show={true}>\n                    <Modal.Header>\n                        <Modal.Title>Du må logge inn</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>Du må logge inn for å lage ut annonse</p>\n                        <a href=\"/login\">\n                            <Button variant=\"danger\">Logg inn</Button>\n                        </a>\n                    </Modal.Body>\n                </Modal>\n              :\n              <Row style={{margin: 0}}>\n                <Col className=\"newannonce-col input-col border\" lg={4}md={6}>\n                      <Form onSubmit={submitAnnonce}>\n\n                          <Form.Group className=\"newannonce-form-group\">\n                              <Form.Label>Tittel</Form.Label>\n                              <Form.Control type=\"text\" id='title' name=\"title\" required \n                                  onChange={handlePropertyChange}  disabled={isPublishing}>\n                              </Form.Control>\n                          </Form.Group>\n\n                          <Form.Group className=\"newannonce-form-group\">\n                              <Form.Label>Pris</Form.Label>\n                              <div className=\"d-flex align-items-center\">\n                                  <Form.Control type=\"number\" id=\"price\" className=\"me-3\" required \n                                      onChange={handlePropertyChange}  disabled={isPublishing}\n                                  />\n                                  <p className=\"me-3\">kr</p>\n                                  <Form.Select className=\"w-50\" id=\"pricePeriod\" onChange={handlePropertyChange}required>\n                                      <option value=\"\">Pris period</option>\n                                      <option value=\"totalt\">Totalt</option>\n                                      <option value=\"per dag\">Per dag</option>\n                                      <option value=\"per uke\">Per uke</option>\n                                      <option value=\"per måned\">Per måned</option>\n                                  </Form.Select>\n                              </div>\n                          </Form.Group>\n\n                          <Form.Group className=\"newannonce-form-group\" onChange={handlePropertyChange}>\n                              <Form.Label>Hoved Kategori</Form.Label>\n                              <Form.Select id=\"category\" required \n                                  onChange={handlePropertyChange} disabled={isPublishing}>\n                                    <option value={JSON.stringify('')}>Velg en hovedkategori</option>\n                                      {\n                                        data.categories.map((item,index) => {\n                                          return(\n                                            <option value={JSON.stringify(item)} key={index}>{item.maincategory}</option>\n                                          )\n                                        })\n                                      }\n                              </Form.Select>\n                          </Form.Group>\n\n                          {selectedMainCat !== '' && \n                              <Form.Group className=\"newannonce-form-group\">\n                                  <Form.Label>Under Kategori</Form.Label>\n                                  <Form.Select id=\"subCategory\" required \n                                      onChange={handlePropertyChange} disabled={isPublishing}>\n                                        <option value={JSON.stringify('')}>Velg en under kategori</option>\n                                        {selectedMainCat.subcategories.map(item => {\n                                          return(\n                                            <option value={item} key={item}>{item}</option>\n                                          )\n                                        })\n                                        }\n                                  </Form.Select>\n                              </Form.Group>\n                          }\n\n                          <Form.Group className=\"newannonce-form-group\">\n                              <Form.Label>Bilder</Form.Label>\n                              <Form.Control type=\"file\" accept=\"image/*\" multiple required \n                                  onChange={onImageChange}disabled={isPublishing}\n                              />\n                          </Form.Group>\n\n                          <div className=\"review-product-images-small-div newannonce-form-group\">\n                              <ul className=\"images-small-ul\" style={{listStyleType: 'none', padding: 0}}>\n                                  {typeof imageArray !== 'boolean' && imageArray.map((item,index) => {\n                                      return(\n                                          <li  className=\"images-small-li mb-3\" key={index} draggable\n                                            onDragStart={(e) => dragStart(e, index)} onDragEnter={(e) => dragEnter(e, index)} onDragEnd={drop} \n                                            >\n                                                <div className=\"images-li-div-small\">\n                                                      <p>{index+1}.</p>\n                                                      <div className=\"images-li-image-control border\">\n                                                              <span className=\"image-control-drag-item\">\n                                                                  <i className=\"fa-solid fa-grip-vertical \"/>\n                                                              </span>\n                                                              <img key={item.name} className=\"image-span-img me-3 ms-3 border\" \n                                                                  src={item.data} alt='product-item'\n                                                              />\n                                                              <Form.Control type='text' value={imageArray[index].description} \n                                                                  placeholder={item.name} onChange={e => handleImageDescription(e,item)}\n                                                              />\n                                                              <DeleteIcon color=\"error\" className=\"ms-3 image-control-delete-item\" \n                                                                  onClick={(e) => handleImageDelete(e,item.name)}\n                                                              />\n                                                      </div>\n                                                </div>\n                                          </li>\n                                      )\n                                  })}\n                              </ul>\n                          </div>\n\n                          <Form.Group className=\"newannonce-form-group\">\n                              <Form.Label>Produkt Beskrivelse</Form.Label>\n                              <Form.Control as=\"textarea\" name=\"productDescription\" id='description'required\n                                  rows={6} onChange={handlePropertyChange} disabled={isPublishing}\n                              />\n                          </Form.Group>\n\n                          <Form.Group className=\"newannonce-form-group\">\n                              <Form.Label>Status</Form.Label>\n                              <Form.Check \n                                  type=\"radio\" value=\"nytt\" name=\"status\" \n                                  id=\"status\" label=\"Nytt\" onChange={handlePropertyChange} disabled={isPublishing}\n                                />\n                                <Form.Check \n                                  type=\"radio\" value=\"brukt\" name=\"status\" \n                                  id=\"status\" label=\"Brukt\" onChange={handlePropertyChange} disabled={isPublishing}\n                                />\n                          </Form.Group>\n\n                          <Form.Group className=\"newannonce-form-group\" style={{display: 'flex', flexDirection: 'column'}}>\n                              <Form.Label>Nokkelinfo</Form.Label>\n                              <Button variant=\"outline-success\" type='button' onClick={() => setShowBackdrop(true)} disabled={isPublishing}><i className=\"fa-solid fa-plus mx-2\"/> Legg til ny nokkelinfo</Button>\n                              <Backdrop  sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n                                                  open={showBackdrop}\n                                                  >\n                                      <div className=\"backdrop-model-div\">\n                                              <FloatingLabel\n                                                    label=\"Overskrift\"\n                                                    className=\"mb-3\"\n                                                    style={{color: 'black'}}\n                                                  >\n                                                    <Form.Control type=\"text\" id=\"title\" name='tit' placeholder=\"name@example.com\" onChange={e => setSpecPropTitle(e.target.value)}/>\n                                                </FloatingLabel>\n                                                <FloatingLabel\n                                                    label=\"Input\"\n                                                    className=\"mb-3\"\n                                                    style={{color: 'black'}}\n                                                  >\n                                                    <Form.Control type=\"text\" id=\"value\" name=\"val\" placeholder=\"name@example.com\" onChange={e => setSpecPropVal(e.target.value)}/>\n                                                </FloatingLabel>\n                                                <Button variant=\"outline-success\" type='button' className=\"w-100 mt-5\" onClick={insertSpecialProp}><i className=\"fa-solid fa-plus mx-2\"/>Legg til nokkelinfo</Button>\n                                                <Button variant=\"outline-primary\" type='button' className=\"mt-2\" onClick={() => setShowBackdrop(false)}>Lukk</Button>\n                                      </div>\n                              </Backdrop>\n                          </Form.Group>\n\n                          <Form.Group className=\"newannonce-form-group\">\n                            <Row className=\"d-flex align-items-end\">\n                                <Col>\n                                    <Form.Label>Addresse</Form.Label>\n                                    <Form.Control type=\"text\" id=\"postnumber\" placeholder=\"Postnummer\" \n                                      required onChange={handlePropertyChange} disabled={isPublishing}\n                                    />\n                                </Col>\n                                <Col className=\"d-flex justify-content-center\">\n                                  <p>{postAddress}</p>\n                                </Col>\n                            </Row>\n                          </Form.Group>\n\n                          {\n                            !isPublishing ? \n                              <Button type=\"submit\" className=\"mb-3\" style={{width: '100px'}}>Publiser</Button>\n                              :\n                              <Button type=\"button\" className=\"mb-3\" disabled>\n                                <Spinner size=\"sm\" className=\"me-2\"/> Publiserer...\n                              </Button>\n                          }\n\n                      </Form>\n                </Col>\n\n                <Col lg={8} md={6} className=\"newannonce-col preview-column\">\n                      <div className=\"preview-column-content\">\n\n                          {selectedMainCat !== '' && \n                              <Breadcrumb className=\"mt-3\">\n                                  <Breadcrumb.Item active>Kategori</Breadcrumb.Item>\n                                  <Breadcrumb.Item href=\"#\">{selectedMainCat.maincategory}</Breadcrumb.Item>\n                                  <Breadcrumb.Item>{annoncePropertyObject[\"subCategory\"]}</Breadcrumb.Item>\n                              </Breadcrumb>\n                            }\n\n                            <Carousel className=\"preview-carousel mb-3\" interval={null} variant=\"dark\">\n                                  {imageArray.map((item, index) => {\n                                      return(\n                                          <Carousel.Item key={index}>\n                                                <img src={item.data} alt=\"product-image\" className=\"preview-carousel-image\"/>\n                                                <Carousel.Caption className=\"preview-carousel-caption\">\n                                                    <p className=\"carousel-image-text mb-4\">{item.description}</p>\n                                                </Carousel.Caption>\n                                          </Carousel.Item>\n                                      )\n                                  })}\n                            </Carousel>\n\n                            <div className=\"preview-content-box d-flex align-items-center\">\n                                {annoncePropertyObject[\"price\"] && \n                                      <>\n                                        <p className=\"me-2\" style={{fontSize: '20px'}}>{annoncePropertyObject[\"price\"]} kr</p>\n                                        <p> - {annoncePropertyObject[\"pricePeriod\"]}</p>   \n                                      </>                   \n                                }\n                            </div>\n\n                            <p className=\"preview-product-title mb-5\">{annoncePropertyObject[\"title\"]}</p>\n\n                            <div className=\"preview-content-box\">\n                                <p className=\"preview-content-heading\">Beskrivelse</p>\n                                <TextareaAutosize className=\"preview-product-desc\" value={annoncePropertyObject[\"description\"]} disabled/>\n                            </div>\n\n                            <div className=\"preview-content-box\">\n                                    <p className=\"preview-content-heading mb-3\"> Nøkkelinfo</p>\n                                    <div className=\"special-properties-container\">\n                                        {specPropArray.length > 0 && specPropArray.map((item, index) => {\n                                              return(\n                                                <div key={index} className=\"spec-prop-item border\">\n\n                                                  <div key={index}className=\"spec-prop-box\">\n                                                      <p className=\"special-props-title\">{item.title}</p>\n                                                      <p className=\"special-props-value\">{item.value}</p>\n                                                  </div>\n                                                  <Button type='button' variant=\"danger\" className=\"special-prop-remove-btn w-75\" onClick={() => removeSpecialProp(item.title)}>Fjern</Button>\n\n                                                  </div>\n                                              )\n                                        })}\n                                    </div>\n                            </div>\n\n                            <div className=\"preview-content-box mb-3\">\n                                    <p className=\"preview-content-heading mb-2\">Addresse</p>\n                                    <p>{postNumber}</p>\n                                    <p>{postAddress === 'Ugyldig postnummer' ? '' : postAddress}</p>\n                            </div>\n\n                      </div>\n                </Col>\n\n              </Row>\n          }\n      </div>\n    );\n  }\n\n\nexport default NewAnnonce;\n","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/config/api.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/Profile/Profile/Profile.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/userSlice.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/userSliceActions.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/Navbar/Searchbar.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/FeedbackBanner.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/uiSlice.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/Filters.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/FilterBadge.js",[],"/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Component/Footer/Footer.js",["170","171","172","173","174"],"import React, { useEffect, useState } from 'react'\nimport './Footer.css';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport { matchRoutes, useLocation } from \"react-router-dom\"\n\nconst Footer = () => {\n\n  const [isRender, setIsRender] = useState(true)\n  const location = useLocation()\n\n  useEffect(() => {\n    if(location.pathname === '/nyannonse') {\n      setIsRender(false)\n    }\n  }, [])\n\n  return (\n    <div>\n      {isRender && \n              <div className='footer-container bg-light'>\n              <Row className='footer-row'>\n                  <Col className='footer-col footer-brand-and-logo'lg={4} md={4} sm={12}>\n                      <p className='footer-heading'>Project Fn</p>\n                  </Col>\n                  <Col  className='footer-col footer-quicklinks'lg={4} md={4} sm={12}>\n                      <p className='footer-heading'> Quick Links</p>\n                      <div className='footer-content'>\n                      <a href='#'>Privacy Policy</a>\n                      <a href='#'>About Us</a>\n                      </div>\n                  </Col>\n                  <Col className='footer-col footer-useractions'lg={4} md={4} sm={12}>\n                      <p className='footer-heading'>User Actions</p>\n                      <div className='footer-content'>\n                        <a href='/profil'>Min Profil</a>\n                          <a href='/nyannonse'>Ny Annonse</a>\n                          <a href='#'>Meldinger</a>\n                          <a href='/mine-annonser'>Mine Annonser</a>\n                          <a href='/favoritter'>Favoritter</a>\n                      </div>\n                  </Col>\n              </Row>\n              <Row className='footer-row bg-dark'>\n                  <div className='footer-lower'>\n                  <p style={{margin: 0}}>© 2023 GokSoft Technologies - All Rights Reserved</p>\n        \n                  </div>\n              </Row>\n            </div>\n      }\n    </div>\n  )\n}\n\nexport default Footer;\n","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/appDataSliceActions.js",["175"],"import { appDataSliceActions } from \"./appDataSlice\";\nimport appDataSlice from \"./appDataSlice\";\nimport { useSelector } from \"react-redux\";\n//https://ws.geonorge.no/kommuneinfo/v1/fylkerkommuner\n//https://ws.geonorge.no/addresser/v1/sok?sok=munkegata&kommunenummer=5001\n\nexport const fetchNorwayDistricts = () => {\n    return async (dispatch) => {\n        const handleRequest = async () => {\n            fetch('https://ws.geonorge.no/kommuneinfo/v1/fylkerkommuner', {method: 'GET'})\n                .then(response => response.json())\n                .then(data => {\n                    var districtsArray = data;\n                    var communeArray = [];\n                    for (const item of districtsArray) {\n                      for (const kommune of item.kommuner) {\n                        communeArray.push({\n                          fylkesNavn: kommune.fylkesnavn,\n                          fylkesNummer: kommune.fylkesnummer,\n                          kommuneNavn: kommune.kommunenavn,\n                          kommuneNummer: kommune.kommunenummer,\n                        });\n                      }\n                    }\n                    dispatch(appDataSliceActions.setDistricts(data))\n                    dispatch(appDataSliceActions.setCommunes(communeArray))\n                });    \n        }\n        await handleRequest()\n    }\n}\n\nexport const useFindCommuneByPostnumber = () => {\n    const communes = useSelector(state => state.app.communes)\n    const communeFinder = (postnumber) => {\n        postnumber = postnumber.toString()\n        let matchedCommune = communes.find(item => item.kommuneNummer === postnumber);\n        return matchedCommune;\n    }\n    return communeFinder;\n}\n","/home/tolga/VS Code workspace/Brukthånd/secondhand/src/features/appDataSlice.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":95,"column":8,"nodeType":"182","endLine":95,"endColumn":14,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":19},{"ruleId":"184","severity":1,"message":"188","line":29,"column":9,"nodeType":"186","messageId":"187","endLine":29,"endColumn":21},{"ruleId":"184","severity":1,"message":"189","line":33,"column":9,"nodeType":"186","messageId":"187","endLine":33,"endColumn":21},{"ruleId":"184","severity":1,"message":"190","line":55,"column":9,"nodeType":"186","messageId":"187","endLine":55,"endColumn":26},{"ruleId":"180","severity":1,"message":"191","line":49,"column":6,"nodeType":"182","endLine":49,"endColumn":8,"suggestions":"192"},{"ruleId":"176","replacedBy":"193"},{"ruleId":"178","replacedBy":"194"},{"ruleId":"176","replacedBy":"195"},{"ruleId":"178","replacedBy":"196"},{"ruleId":"176","replacedBy":"197"},{"ruleId":"178","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":113,"column":48,"nodeType":"201","messageId":"202","endLine":113,"endColumn":50},{"ruleId":"199","severity":1,"message":"203","line":140,"column":26,"nodeType":"201","messageId":"204","endLine":140,"endColumn":28},{"ruleId":"199","severity":1,"message":"203","line":192,"column":33,"nodeType":"201","messageId":"204","endLine":192,"endColumn":35},{"ruleId":"180","severity":1,"message":"205","line":231,"column":12,"nodeType":"201","endLine":253,"endColumn":2},{"ruleId":"180","severity":1,"message":"206","line":253,"column":4,"nodeType":"182","endLine":253,"endColumn":41,"suggestions":"207"},{"ruleId":"180","severity":1,"message":"208","line":253,"column":5,"nodeType":"209","endLine":253,"endColumn":40},{"ruleId":"210","severity":1,"message":"211","line":455,"column":49,"nodeType":"212","endLine":455,"endColumn":126},{"ruleId":"184","severity":1,"message":"213","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":21},{"ruleId":"180","severity":1,"message":"214","line":16,"column":6,"nodeType":"182","endLine":16,"endColumn":8,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":29,"column":23,"nodeType":"212","endLine":29,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":30,"column":23,"nodeType":"212","endLine":30,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":38,"column":27,"nodeType":"212","endLine":38,"endColumn":39},{"ruleId":"184","severity":1,"message":"218","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":20},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'findProduct'. Either include it or remove the dependency array.","ArrayExpression",["221"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'showDropdown' is assigned a value but never used.","'hideDropdown' is assigned a value but never used.","'navigateToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["222"],["219"],["220"],["219"],["220"],["219"],["220"],"array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'annoncePropertyObject' and 'communeFinder'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'matchRoutes' is defined but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["224"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'appDataSlice' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [findProduct, user]",{"range":"233","text":"234"},"Update the dependencies array to be: [dispatch]",{"range":"235","text":"236"},"Update the dependencies array to be: [annoncePropertyObject, communeFinder]",{"range":"237","text":"238"},"Update the dependencies array to be: [location.pathname]",{"range":"239","text":"240"},[3323,3329],"[findProduct, user]",[1885,1887],"[dispatch]",[8548,8585],"[annoncePropertyObject, communeFinder]",[420,422],"[location.pathname]"]