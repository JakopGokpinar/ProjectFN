{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Row } from 'react';\nimport \"./NewAnnonce.css\";\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport { instanceAxs } from \"../../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewAnnonce = () => {\n  _s();\n  const [imageArray, setImageArray] = useState([]);\n  const [imageLocations, setImageLocations] = useState([]);\n  const [annonceProperties, setAnnonceProperties] = useState({});\n  const submitAnnonce = async event => {\n    event.preventDefault();\n    var annonceObject = {};\n    for (let i = 0; i < event.target.length; i++) {\n      let element = event.target[i];\n      let propTitle = element.name;\n      if (propTitle === 'image' || propTitle === 'button') continue;\n      annonceObject[propTitle] = element.value;\n      this.setState({\n        annonceProperties: annonceObject\n      });\n    }\n    const formData = await this.convertImagesToFormData();\n    this.uploadImagesToServer(formData, this.uploadAnnonceToServer);\n  };\n  const onImageChange = event => {\n    if (!event.target.files) return; //target.files seçilen dosyaları döner\n\n    const imageArray = []; // create an array to store readable data of images\n    // Array.from() target.files'ı iterable bir array'e dönüştürür\n    Array.from(event.target.files).forEach(file => {\n      var reader = new FileReader(); //Yüklenen resmin datasını oku.\n      reader.readAsDataURL(file);\n      reader.addEventListener('load', () => {\n        imageArray.push({\n          name: file.name,\n          data: reader.result\n        });\n      });\n    });\n    this.setState({\n      imageArray\n    });\n  };\n  const convertImagesToFormData = async () => {\n    var formData = new FormData();\n    const imageArray = this.state.imageArray;\n    for (const image of imageArray) {\n      //await kullanımı için for...of döngüsü\n      const canvas = await getCroppedImage(image.data);\n      const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n      const convertedUrltoFile = dataURLtoFile(canvasDataUrl, image.name);\n      formData.append(\"annonceImages\", convertedUrltoFile);\n    }\n    return formData;\n  };\n  const uploadImagesToServer = (formData, cb) => {\n    instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n      console.log(result);\n      if (result.data.message === 'images uploaded') {\n        var imageLocations = result.data.files.map(e => e.location);\n        this.setState({\n          imageLocations,\n          annonceId: result.data.annonceId\n        });\n        cb(); // run uploadAnnoncesToDb after uploading images\n      }\n    }).catch(err => console.log(err));\n  };\n  const uploadAnnonceToServer = () => {\n    let annonce = {\n      annonceproperties: this.state.annonceProperties,\n      imagelocations: this.state.imageLocations,\n      annonceid: this.state.annonceId\n    };\n    instanceAxs.post('/newannonce/create', annonce).then(result => {\n      console.log(result);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newannonce-container\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"annonce-form\",\n      onSubmit: submitAnnonce,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Tittel\",\n        name: \"title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        name: \"price\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: onImageChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"button\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n};\n_s(NewAnnonce, \"qVCfXsj9I2G7P7f1VTodteo/GJs=\");\n_c = NewAnnonce;\nexport default NewAnnonce;\nvar _c;\n$RefreshReg$(_c, \"NewAnnonce\");","map":{"version":3,"names":["React","useState","Row","getCroppedImage","dataURLtoFile","instanceAxs","NewAnnonce","imageArray","setImageArray","imageLocations","setImageLocations","annonceProperties","setAnnonceProperties","submitAnnonce","event","preventDefault","annonceObject","i","target","length","element","propTitle","name","value","setState","formData","convertImagesToFormData","uploadImagesToServer","uploadAnnonceToServer","onImageChange","files","Array","from","forEach","file","reader","FileReader","readAsDataURL","addEventListener","push","data","result","FormData","state","image","canvas","canvasDataUrl","toDataURL","convertedUrltoFile","append","cb","post","then","console","log","message","map","e","location","annonceId","catch","err","annonce","annonceproperties","imagelocations","annonceid"],"sources":["/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {Row} from 'react'\nimport \"./NewAnnonce.css\";\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport { instanceAxs } from \"../../config/api\";\n\nconst NewAnnonce = () => {\n  const [imageArray, setImageArray] = useState([])\n  const [imageLocations, setImageLocations] = useState([])\n  const [annonceProperties, setAnnonceProperties] = useState({})\n\nconst submitAnnonce = async (event) => {\n  event.preventDefault();\n  var annonceObject = {};\n\n  for (let i = 0; i < event.target.length; i++) {\n    let element = event.target[i];\n    let propTitle = element.name;\n\n    if (propTitle === 'image' || propTitle === 'button') continue;\n\n    annonceObject[propTitle] = element.value;\n    this.setState({ annonceProperties: annonceObject})\n  }\n\n   const formData = await this.convertImagesToFormData();\n   this.uploadImagesToServer(formData, this.uploadAnnonceToServer);\n}\n\n const onImageChange = (event) => {\n  if(!event.target.files) return;   //target.files seçilen dosyaları döner\n\n  const imageArray = [];  // create an array to store readable data of images\n  // Array.from() target.files'ı iterable bir array'e dönüştürür\n  Array.from(event.target.files).forEach(file => { \n    var reader = new FileReader();  //Yüklenen resmin datasını oku.\n    reader.readAsDataURL(file);\n    reader.addEventListener('load', () => { imageArray.push({name: file.name, data: reader.result})})\n  })  \n \n  this.setState({ imageArray})\n};\n\n\n const convertImagesToFormData =  async () => {\n  var formData = new FormData();\n  const imageArray = this.state.imageArray;\n\n  for (const image of imageArray) {   //await kullanımı için for...of döngüsü\n    const canvas = await getCroppedImage(image.data);\n    const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n    const convertedUrltoFile = dataURLtoFile(canvasDataUrl, image.name);\n\n    formData.append(\"annonceImages\", convertedUrltoFile);\n  }\n  return formData;\n }\n\n\n const uploadImagesToServer =  (formData, cb) => {\n  instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n    console.log(result)\n      if (result.data.message === 'images uploaded') {\n        var imageLocations = result.data.files.map(e => e.location)\n        this.setState({ imageLocations, annonceId: result.data.annonceId })\n        cb(); // run uploadAnnoncesToDb after uploading images\n      }\n    })\n    .catch( err => console.log(err) );\n }\n\n\n const uploadAnnonceToServer =  () => {\n  let annonce = {\n    annonceproperties: this.state.annonceProperties, \n    imagelocations: this.state.imageLocations,\n    annonceid: this.state.annonceId\n  }\n\n  instanceAxs.post('/newannonce/create', annonce).then(result => {\n    console.log(result)\n  })\n  .catch( err => console.log(err) );\n }\n\n\n    return (\n      <div className=\"newannonce-container\">\n          <Row></Row>\n        <form id=\"annonce-form\" onSubmit={submitAnnonce}>\n          <input type=\"text\" placeholder=\"Tittel\" name=\"title\" required></input>\n          <input type=\"text\" placeholder=\"Price\" name=\"price\" required></input>\n          <input type=\"file\" name=\"image\" accept=\"image/*\" multiple onChange={onImageChange} required></input>\n          <button type=\"submit\" name=\"button\">Publish</button>\n        </form>\n      </div>\n    );\n  }\n\n\nexport default NewAnnonce;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}