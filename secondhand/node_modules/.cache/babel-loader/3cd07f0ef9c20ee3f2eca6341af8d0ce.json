{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/NewAnnonce/CreateAnnonce.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport CarAnnonce from \"./components/CarAnnonce\";\nimport PropertyAnnonce from \"./components/PropertyAnnonce\";\nimport PhotoAndDescription from \"./Media\";\nimport Spinner from \"../../Component/Spinner/Spinner\";\nimport axios from \"axios\";\nimport { instanceAxs } from '../../config/api.js';\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport './CreateAnnonce.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAnnonce(props) {\n  _s();\n\n  var {\n    category\n  } = useParams(); // let {annonceId} = useParams();\n\n  const [CategoryProperties, setComponent] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  const [isLoading, setLoading] = useState(true);\n  const [properties, setProperties] = useState({\n    uniqueProps: {}\n  });\n  const [images, setImages] = useState();\n\n  function findCategory() {\n    if (isLoading) {\n      switch (category) {\n        case \"bil\":\n          setComponent( /*#__PURE__*/_jsxDEV(CarAnnonce, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }, this));\n          setLoading(false);\n          break;\n\n        case \"bolig\":\n          setComponent( /*#__PURE__*/_jsxDEV(PropertyAnnonce, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }, this));\n          setLoading(false);\n          break;\n\n        default:\n          setComponent( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Annonce type couldn't found!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 24\n          }, this));\n          setLoading(false);\n          break;\n      }\n    }\n  }\n\n  const handleImageChange = imgArray => {\n    setImages(imgArray);\n    console.log(imgArray);\n  };\n\n  async function convertImagesToFormData(selectedFiles) {\n    var formData = new FormData();\n\n    if (selectedFiles) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        var img = selectedFiles[i];\n        const canvas = await getCroppedImage(img);\n        const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n        const convertedUrltoFile = dataURLtoFile(canvasDataUrl, `${Date.now()}-myimage.jpg`);\n        console.log(convertedUrltoFile);\n        formData.append(\"galleryImage\", convertedUrltoFile);\n        return formData;\n      }\n    }\n  }\n\n  async function uploadImagesToServer(formData) {\n    instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n      console.log(result);\n      result.data.files;\n    });\n  }\n\n  const submitAnnonce = async () => {\n    var formData = new FormData(); // create form to data to upload images properly\n\n    let selectedFiles = images;\n    formData = await convertImagesToFormData(selectedFiles); // first make request for image uploading\n\n    axios.post(`http://localhost:3080/file/uploadimages?location=ahmet/annonces/${properties.title}`, formData).then(response => {\n      console.log(response);\n      var locations = [];\n      response.data.files.map(elem => {\n        return locations.push(elem.location);\n      }); // var annonce = { properties, locations, seller };\n\n      var annonce = {\n        properties,\n        locations\n      };\n      console.log(annonce); // second, make request to create annonce with the locations of uploaded images\n\n      axios.post(\"http://localhost:3080/file/createannonce\", annonce).then(respond => {\n        console.log(respond);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    findCategory();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createAnnonceDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Tittel...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), CategoryProperties, /*#__PURE__*/_jsxDEV(PhotoAndDescription, {\n        onchange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: submitAnnonce,\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAnnonce, \"MJsqbarVbxGDZlL92E2QS9LMArw=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateAnnonce;\nexport default CreateAnnonce;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAnnonce\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukth√•nd/secondhand/src/Pages/NewAnnonce/CreateAnnonce.js"],"names":["useEffect","useState","useParams","CarAnnonce","PropertyAnnonce","PhotoAndDescription","Spinner","axios","instanceAxs","getCroppedImage","dataURLtoFile","CreateAnnonce","props","category","CategoryProperties","setComponent","isLoading","setLoading","properties","setProperties","uniqueProps","images","setImages","findCategory","handleImageChange","imgArray","console","log","convertImagesToFormData","selectedFiles","formData","FormData","i","length","img","canvas","canvasDataUrl","toDataURL","convertedUrltoFile","Date","now","append","uploadImagesToServer","post","then","result","data","files","submitAnnonce","title","response","locations","map","elem","push","location","annonce","respond","catch","err"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport CarAnnonce from \"./components/CarAnnonce\";\nimport PropertyAnnonce from \"./components/PropertyAnnonce\";\nimport PhotoAndDescription from \"./Media\";\nimport Spinner from \"../../Component/Spinner/Spinner\";\nimport axios from \"axios\";\nimport { instanceAxs } from '../../config/api.js';\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport './CreateAnnonce.css'\n\nfunction CreateAnnonce(props) {\n  var { category } = useParams();\n  // let {annonceId} = useParams();\n  const [CategoryProperties, setComponent] = useState(<></>);\n  const [isLoading, setLoading] = useState(true);\n  const [properties, setProperties] = useState({ uniqueProps: {} });\n  const [images, setImages] = useState();\n\n  function findCategory() {\n    if (isLoading) {\n      switch (category) {\n        case \"bil\":\n          setComponent(<CarAnnonce></CarAnnonce>);\n          setLoading(false);\n          break;\n        case \"bolig\":\n          setComponent(<PropertyAnnonce></PropertyAnnonce>);\n          setLoading(false);\n          break;\n        default:\n          setComponent(<p>Annonce type couldn't found!</p>);\n          setLoading(false);\n          break;\n      }\n    }\n  }\n\n  const handleImageChange = (imgArray) => {\n    setImages(imgArray);\n      console.log(imgArray);\n  };\n\n  async function convertImagesToFormData (selectedFiles) {\n    var formData = new FormData();\n    if (selectedFiles) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        var img = selectedFiles[i];\n        const canvas = await getCroppedImage(img);\n        const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n        const convertedUrltoFile = dataURLtoFile(\n          canvasDataUrl,\n          `${Date.now()}-myimage.jpg`\n        );\n        console.log(convertedUrltoFile);\n\n        formData.append(\"galleryImage\", convertedUrltoFile);\n        return formData;\n      }\n    }\n  }\n\n  async function uploadImagesToServer (formData) {\n    instanceAxs.post('/newannonce/imageupload', formData)\n    .then(result => {\n      console.log(result)\n      result.data.files\n    })\n  }\n\n  const submitAnnonce = async () => {\n    var formData = new FormData(); // create form to data to upload images properly\n    let selectedFiles = images;\n    formData = await convertImagesToFormData(selectedFiles);\n\n    // first make request for image uploading\n    axios\n      .post(\n        `http://localhost:3080/file/uploadimages?location=ahmet/annonces/${properties.title}`,\n        formData\n      )\n      .then((response) => {\n        console.log(response);\n        var locations = [];\n        response.data.files.map((elem) => {\n          return locations.push(elem.location);\n        });\n        // var annonce = { properties, locations, seller };\n        var annonce = { properties, locations };\n        console.log(annonce);\n        // second, make request to create annonce with the locations of uploaded images\n        axios\n          .post(\"http://localhost:3080/file/createannonce\", annonce)\n          .then((respond) => {\n            console.log(respond);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    findCategory();\n   });\n\n  return (\n    <div>\n      {!isLoading ? (\n        <div className=\"createAnnonceDiv\">\n            <h4>{category}</h4>\n            <input type=\"text\" placeholder=\"Tittel...\"/>\n            <input type=\"text\" placeholder=\"Price...\"/>\n\n            {CategoryProperties}\n\n          <PhotoAndDescription \n            onchange={handleImageChange}\n          ></PhotoAndDescription>\n\n          <button type=\"button\"onClick={submitAnnonce}>Publish</button>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n}\n\nexport default CreateAnnonce;\n"]},"metadata":{},"sourceType":"module"}