{"ast":null,"code":"var _s = $RefreshSig$();\nimport { appDataSliceActions } from \"./appDataSlice\";\nimport appDataSlice from \"./appDataSlice\";\nimport { useSelector } from \"react-redux\";\n//https://ws.geonorge.no/kommuneinfo/v1/fylkerkommuner\n//https://ws.geonorge.no/addresser/v1/sok?sok=munkegata&kommunenummer=5001\n\nexport const fetchNorwayDistricts = () => {\n  return async dispatch => {\n    const handleRequest = async () => {\n      fetch('https://ws.geonorge.no/kommuneinfo/v1/fylkerkommuner', {\n        method: 'GET'\n      }).then(response => response.json()).then(data => {\n        var districtsArray = data;\n        var communeArray = [];\n        for (const item of districtsArray) {\n          for (const kommune of item.kommuner) {\n            communeArray.push({\n              fylkesNavn: kommune.fylkesnavn,\n              fylkesNummer: kommune.fylkesnummer,\n              kommuneNavn: kommune.kommunenavn,\n              kommuneNummer: kommune.kommunenummer\n            });\n          }\n        }\n        dispatch(appDataSliceActions.setDistricts(data));\n        dispatch(appDataSliceActions.setCommunes(communeArray));\n      });\n    };\n    await handleRequest();\n  };\n};\nexport const useFindCommuneByPostnumber = () => {\n  _s();\n  const communes = useSelector(state => state.app.communes);\n  let matchedCommune = communes.find(item => item.kommuneNummer === postnumber);\n  return matchedCommune;\n};\n_s(useFindCommuneByPostnumber, \"LptLxukBc4AIQ3Yhn/Cygze+pPQ=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"names":["appDataSliceActions","appDataSlice","useSelector","fetchNorwayDistricts","dispatch","handleRequest","fetch","method","then","response","json","data","districtsArray","communeArray","item","kommune","kommuner","push","fylkesNavn","fylkesnavn","fylkesNummer","fylkesnummer","kommuneNavn","kommunenavn","kommuneNummer","kommunenummer","setDistricts","setCommunes","useFindCommuneByPostnumber","communes","state","app","matchedCommune","find","postnumber"],"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/features/appDataSliceActions.js"],"sourcesContent":["import { appDataSliceActions } from \"./appDataSlice\";\nimport appDataSlice from \"./appDataSlice\";\nimport { useSelector } from \"react-redux\";\n//https://ws.geonorge.no/kommuneinfo/v1/fylkerkommuner\n//https://ws.geonorge.no/addresser/v1/sok?sok=munkegata&kommunenummer=5001\n\nexport const fetchNorwayDistricts = () => {\n    return async (dispatch) => {\n        const handleRequest = async () => {\n            fetch('https://ws.geonorge.no/kommuneinfo/v1/fylkerkommuner', {method: 'GET'})\n                .then(response => response.json())\n                .then(data => {\n                    var districtsArray = data;\n                    var communeArray = [];\n                    for (const item of districtsArray) {\n                      for (const kommune of item.kommuner) {\n                        communeArray.push({\n                          fylkesNavn: kommune.fylkesnavn,\n                          fylkesNummer: kommune.fylkesnummer,\n                          kommuneNavn: kommune.kommunenavn,\n                          kommuneNummer: kommune.kommunenummer,\n                        });\n                      }\n                    }\n                    dispatch(appDataSliceActions.setDistricts(data))\n                    dispatch(appDataSliceActions.setCommunes(communeArray))\n                });    \n        }\n        await handleRequest()\n    }\n}\n\nexport const useFindCommuneByPostnumber = () => {\n    const communes = useSelector(state => state.app.communes)\n        let matchedCommune = communes.find(item => item.kommuneNummer === postnumber);\n        return matchedCommune;\n    \n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,gBAAgB;AACpD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;EACtC,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,aAAa,GAAG,YAAY;MAC9BC,KAAK,CAAC,sDAAsD,EAAE;QAACC,MAAM,EAAE;MAAK,CAAC,CAAC,CACzEC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV,IAAIC,cAAc,GAAGD,IAAI;QACzB,IAAIE,YAAY,GAAG,EAAE;QACrB,KAAK,MAAMC,IAAI,IAAIF,cAAc,EAAE;UACjC,KAAK,MAAMG,OAAO,IAAID,IAAI,CAACE,QAAQ,EAAE;YACnCH,YAAY,CAACI,IAAI,CAAC;cAChBC,UAAU,EAAEH,OAAO,CAACI,UAAU;cAC9BC,YAAY,EAAEL,OAAO,CAACM,YAAY;cAClCC,WAAW,EAAEP,OAAO,CAACQ,WAAW;cAChCC,aAAa,EAAET,OAAO,CAACU;YACzB,CAAC,CAAC;UACJ;QACF;QACArB,QAAQ,CAACJ,mBAAmB,CAAC0B,YAAY,CAACf,IAAI,CAAC,CAAC;QAChDP,QAAQ,CAACJ,mBAAmB,CAAC2B,WAAW,CAACd,YAAY,CAAC,CAAC;MAC3D,CAAC,CAAC;IACV,CAAC;IACD,MAAMR,aAAa,EAAE;EACzB,CAAC;AACL,CAAC;AAED,OAAO,MAAMuB,0BAA0B,GAAG,MAAM;EAAA;EAC5C,MAAMC,QAAQ,GAAG3B,WAAW,CAAC4B,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrD,IAAIG,cAAc,GAAGH,QAAQ,CAACI,IAAI,CAACnB,IAAI,IAAIA,IAAI,CAACU,aAAa,KAAKU,UAAU,CAAC;EAC7E,OAAOF,cAAc;AAE7B,CAAC;AAAA,GALYJ,0BAA0B;EAAA,QAClB1B,WAAW;AAAA"},"metadata":{},"sourceType":"module"}