{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js\";\nimport React from \"react\";\nimport \"./NewAnnonce.css\";\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport { instanceAxs } from \"../../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewAnnonce extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitAnnonce = async event => {\n      event.preventDefault();\n      var annonceObject = {};\n      for (let i = 0; i < event.target.length; i++) {\n        let element = event.target[i];\n        let propTitle = element.name;\n        if (propTitle === 'image' || propTitle === 'button') continue;\n        annonceObject[propTitle] = element.value;\n        this.setState({\n          annonceProperties: annonceObject\n        });\n      }\n      const formData = await this.convertImagesToFormData();\n      this.uploadImagesToServer(formData, this.uploadAnnonceToServer);\n    };\n    this.onImageChange = event => {\n      if (!event.target.files) return; //target.files seçilen dosyaları döner\n\n      const imageArray = []; // create an array to store readable data of images\n      // Array.from() target.files'ı iterable bir array'e dönüştürür\n      Array.from(event.target.files).forEach(file => {\n        var reader = new FileReader(); //Yüklenen resmin datasını oku.\n        reader.readAsDataURL(file);\n        reader.addEventListener('load', () => {\n          imageArray.push({\n            name: file.name,\n            data: reader.result\n          });\n        });\n      });\n      this.setState({\n        imageArray\n      });\n    };\n    this.convertImagesToFormData = async () => {\n      var formData = new FormData();\n      const imageArray = this.state.imageArray;\n      for (const image of imageArray) {\n        //await kullanımı için for...of döngüsü\n        const canvas = await getCroppedImage(image.data);\n        const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n        const convertedUrltoFile = dataURLtoFile(canvasDataUrl, image.name);\n        formData.append(\"annonceImages\", convertedUrltoFile);\n        return formData;\n      }\n    };\n    this.uploadImagesToServer = (formData, cb) => {\n      instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n        console.log(result);\n        if (result.data.message === 'images uploaded') {\n          var imageLocations = result.data.files.map(e => e.location);\n          this.setState({\n            imageLocations,\n            annonceId: result.data.annonceId\n          });\n          cb(); // run uploadAnnoncesToDb after uploading images\n        }\n      }).catch(err => console.log(err));\n    };\n    this.uploadAnnonceToServer = () => {\n      let annonce = {\n        annonceproperties: this.state.annonceProperties,\n        imagelocations: this.state.imageLocations,\n        annonceid: this.state.annonceId\n      };\n      instanceAxs.post('/newannonce/create', annonce).then(result => {\n        console.log(result);\n      }).catch(err => console.log(err));\n    };\n    this.state = {\n      imageArray: [],\n      imageLocations: [],\n      annonceProperties: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annonceFormDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"annonce-form\",\n        onSubmit: this.submitAnnonce,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tittel\",\n          name: \"title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Price\",\n          name: \"price\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/*\",\n          multiple: true,\n          onChange: this.onImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          name: \"button\",\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default NewAnnonce;","map":{"version":3,"names":["React","getCroppedImage","dataURLtoFile","instanceAxs","NewAnnonce","Component","constructor","props","submitAnnonce","event","preventDefault","annonceObject","i","target","length","element","propTitle","name","value","setState","annonceProperties","formData","convertImagesToFormData","uploadImagesToServer","uploadAnnonceToServer","onImageChange","files","imageArray","Array","from","forEach","file","reader","FileReader","readAsDataURL","addEventListener","push","data","result","FormData","state","image","canvas","canvasDataUrl","toDataURL","convertedUrltoFile","append","cb","post","then","console","log","message","imageLocations","map","e","location","annonceId","catch","err","annonce","annonceproperties","imagelocations","annonceid","render"],"sources":["/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./NewAnnonce.css\";\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport { instanceAxs } from \"../../config/api\";\n\nclass NewAnnonce extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        imageArray: [],\n        imageLocations: [],\n        annonceProperties: {}\n    }\n} \n\nsubmitAnnonce = async (event) => {\n  event.preventDefault();\n  var annonceObject = {};\n\n  for (let i = 0; i < event.target.length; i++) {\n    let element = event.target[i];\n    let propTitle = element.name;\n\n    if (propTitle === 'image' || propTitle === 'button') continue;\n\n    annonceObject[propTitle] = element.value;\n    this.setState({ annonceProperties: annonceObject})\n  }\n\n   const formData = await this.convertImagesToFormData();\n   this.uploadImagesToServer(formData, this.uploadAnnonceToServer);\n}\n\n onImageChange = (event) => {\n  if(!event.target.files) return;   //target.files seçilen dosyaları döner\n\n  const imageArray = [];  // create an array to store readable data of images\n  // Array.from() target.files'ı iterable bir array'e dönüştürür\n  Array.from(event.target.files).forEach(file => { \n    var reader = new FileReader();  //Yüklenen resmin datasını oku.\n    reader.readAsDataURL(file);\n    reader.addEventListener('load', () => { imageArray.push({name: file.name, data: reader.result})})\n  })  \n \n  this.setState({ imageArray})\n};\n\n\n convertImagesToFormData =  async () => {\n  var formData = new FormData();\n  const imageArray = this.state.imageArray;\n\n  for (const image of imageArray) {   //await kullanımı için for...of döngüsü\n    const canvas = await getCroppedImage(image.data);\n    const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n    const convertedUrltoFile = dataURLtoFile(canvasDataUrl, image.name);\n\n    formData.append(\"annonceImages\", convertedUrltoFile);\n    return formData;\n  }\n }\n\n\n uploadImagesToServer =  (formData, cb) => {\n  instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n    console.log(result)\n      if (result.data.message === 'images uploaded') {\n        var imageLocations = result.data.files.map(e => e.location)\n        this.setState({ imageLocations, annonceId: result.data.annonceId })\n        cb(); // run uploadAnnoncesToDb after uploading images\n      }\n    })\n    .catch( err => console.log(err) );\n }\n\n\n uploadAnnonceToServer =  () => {\n  let annonce = {\n    annonceproperties: this.state.annonceProperties, \n    imagelocations: this.state.imageLocations,\n    annonceid: this.state.annonceId\n  }\n\n  instanceAxs.post('/newannonce/create', annonce).then(result => {\n    console.log(result)\n  })\n  .catch( err => console.log(err) );\n }\n\n\n  render() {\n    return (\n      <div className=\"annonceFormDiv\">\n        <form id=\"annonce-form\" onSubmit={this.submitAnnonce}>\n          <input type=\"text\" placeholder=\"Tittel\" name=\"title\" required></input>\n          <input type=\"text\" placeholder=\"Price\" name=\"price\" required></input>\n          <input type=\"file\" name=\"image\" accept=\"image/*\" multiple onChange={this.onImageChange} required></input>\n          <button type=\"submit\" name=\"button\">Publish</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewAnnonce;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}