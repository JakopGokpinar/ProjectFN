{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectListAdapter = exports.MapListAdapter = exports.ArrayListAdapter = exports.EmptyListAdapter = exports.ListAdapter = exports.ItemAdapter = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _classnames = require('classnames');\nvar _classnames2 = _interopRequireDefault(_classnames);\nvar _shallowEqual = require('fbjs/lib/shallowEqual');\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\nvar _keycode = require('keycode');\nvar _keycode2 = _interopRequireDefault(_keycode);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactBootstrap = require('react-bootstrap');\nvar _reactDom = require('react-dom');\nvar _reactDom2 = _interopRequireDefault(_reactDom);\nvar _warning = require('warning');\nvar _warning2 = _interopRequireDefault(_warning);\nvar _Choices = require('./Choices');\nvar _Choices2 = _interopRequireDefault(_Choices);\nvar _Suggestions = require('./Suggestions');\nvar _Suggestions2 = _interopRequireDefault(_Suggestions);\nvar _ItemAdapter = require('./ItemAdapter');\nvar _ItemAdapter2 = _interopRequireDefault(_ItemAdapter);\nvar _ListAdapter = require('./ListAdapter');\nvar _ListAdapter2 = _interopRequireDefault(_ListAdapter);\nvar _EmptyListAdapter = require('./EmptyListAdapter');\nvar _EmptyListAdapter2 = _interopRequireDefault(_EmptyListAdapter);\nvar _ArrayListAdapter = require('./ArrayListAdapter');\nvar _ArrayListAdapter2 = _interopRequireDefault(_ArrayListAdapter);\nvar _MapListAdapter = require('./MapListAdapter');\nvar _MapListAdapter2 = _interopRequireDefault(_MapListAdapter);\nvar _ObjectListAdapter = require('./ObjectListAdapter');\nvar _ObjectListAdapter2 = _interopRequireDefault(_ObjectListAdapter);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nexports.ItemAdapter = _ItemAdapter2['default'];\nexports.ListAdapter = _ListAdapter2['default'];\nexports.EmptyListAdapter = _EmptyListAdapter2['default'];\nexports.ArrayListAdapter = _ArrayListAdapter2['default'];\nexports.MapListAdapter = _MapListAdapter2['default'];\nexports.ObjectListAdapter = _ObjectListAdapter2['default'];\n\n/**\n * Combo-box input component that combines a drop-down list and a single-line\n * editable text box. The set of options for the drop-down list can be\n * controlled dynamically. Selection of multiple items is supported using a\n * tag/pill-style user interface within a simulated text box.\n */\nvar Autosuggest = function (_React$Component) {\n  _inherits(Autosuggest, _React$Component);\n  _createClass(Autosuggest, null, [{\n    key: 'defaultInputSelect',\n    value: function defaultInputSelect(input, value, completion) {\n      // https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n      switch (input.type) {\n        case 'text':\n        case 'search':\n        case 'url':\n        case 'tel':\n        case 'password':\n          // istanbul ignore else\n          if (input.setSelectionRange) {\n            input.setSelectionRange(value.length, completion.length);\n          } else if (input.createTextRange) {\n            // old IE\n            var range = input.createTextRange();\n            range.moveEnd('character', completion.length);\n            range.moveStart('character', value.length);\n            range.select();\n          }\n      }\n    }\n  }]);\n  function Autosuggest(props) {\n    var _ref;\n    _classCallCheck(this, Autosuggest);\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    /* istanbul ignore next: https://github.com/gotwarlost/istanbul/issues/690#issuecomment-265718617 */\n    var _this = _possibleConstructorReturn(this, (_ref = Autosuggest.__proto__ || Object.getPrototypeOf(Autosuggest)).call.apply(_ref, [this, props].concat(_toConsumableArray(args))));\n    _this._itemAdapter = props.itemAdapter || new _ItemAdapter2['default']();\n    _this._itemAdapter.receiveProps(props);\n    _this._listAdapter = props.datalistAdapter || _this._getListAdapter(props.datalist);\n    _this._listAdapter.receiveProps(props, _this._itemAdapter);\n    var _this$_getValueFromPr = _this._getValueFromProps(props),\n      inputValue = _this$_getValueFromPr.inputValue,\n      inputItem = _this$_getValueFromPr.inputItem,\n      inputItemEphemeral = _this$_getValueFromPr.inputItemEphemeral,\n      selectedItems = _this$_getValueFromPr.selectedItems;\n    _this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n    _this._lastValidItem = inputItem;\n    _this._lastValidValue = inputValue;\n    _this._keyPressCount = 0;\n    _this.state = {\n      open: false,\n      disableFilter: false,\n      inputValue: inputValue,\n      inputValueKeyPress: 0,\n      inputFocused: false,\n      selectedItems: selectedItems,\n      searchValue: null\n    };\n    _this._lastOnChangeValue = _this._getCurrentValue();\n    _this._lastOnSelectValue = inputItem;\n    var self = _this; // https://github.com/facebook/flow/issues/1517\n    self._renderSelected = _this._renderSelected.bind(_this);\n    self._getItemKey = _this._getItemKey.bind(_this);\n    self._isSelectedItem = _this._isSelectedItem.bind(_this);\n    self._renderSuggested = _this._renderSuggested.bind(_this);\n    self._handleToggleClick = _this._handleToggleClick.bind(_this);\n    self._handleInputChange = _this._handleInputChange.bind(_this);\n    self._handleItemSelect = _this._handleItemSelect.bind(_this);\n    self._removeItem = _this._removeItem.bind(_this);\n    self._handleShowAll = _this._handleShowAll.bind(_this);\n    self._handleKeyDown = _this._handleKeyDown.bind(_this);\n    self._handleKeyPress = _this._handleKeyPress.bind(_this);\n    self._handleMenuClose = _this._handleMenuClose.bind(_this);\n    self._handleInputFocus = _this._handleInputFocus.bind(_this);\n    self._handleInputBlur = _this._handleInputBlur.bind(_this);\n    self._handleFocus = _this._handleFocus.bind(_this);\n    self._handleBlur = _this._handleBlur.bind(_this);\n    return _this;\n  }\n  _createClass(Autosuggest, [{\n    key: '_getListAdapter',\n    value: function _getListAdapter(list) {\n      if (list == null) {\n        return new _EmptyListAdapter2['default']();\n      } else if (Array.isArray(list)) {\n        return new _ArrayListAdapter2['default']();\n      } else if (list instanceof Map) {\n        return new _MapListAdapter2['default']();\n      } else if (typeof list === 'object') {\n        return new _ObjectListAdapter2['default']();\n      } else {\n        throw Error('Unexpected datalist type: datalistAdapter required');\n      }\n    }\n  }, {\n    key: '_getValueFromProps',\n    value: function _getValueFromProps(props) {\n      var inputValue = '';\n      var inputItem = null;\n      var inputItemEphemeral = false;\n      var selectedItems = [];\n      var value = props.value || props.defaultValue;\n      if (value != null) {\n        if (props.multiple) {\n          if (Array.isArray(value)) {\n            selectedItems = this._filterItems(value, props);\n          } else {\n            (0, _warning2['default'])(!value, 'Array expected for value property');\n          }\n        } else if (props.valueIsItem) {\n          var itemValue = this._itemAdapter.getInputValue(value);\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, itemValue);\n            if (inputItem != null) {\n              inputValue = inputItem === value ? itemValue : this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = itemValue;\n              inputItem = value;\n            }\n          } else {\n            inputValue = itemValue;\n            inputItem = value;\n          }\n        } else if (value) {\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, value);\n            if (inputItem != null) {\n              inputValue = this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = value.toString();\n              inputItem = this._itemAdapter.newFromValue(value);\n              inputItemEphemeral = true;\n            }\n          } else {\n            inputValue = value.toString();\n            inputItem = this._itemAdapter.newFromValue(value);\n            inputItemEphemeral = true;\n          }\n        }\n      }\n      return {\n        inputValue: inputValue,\n        inputItem: inputItem,\n        inputItemEphemeral: inputItemEphemeral,\n        selectedItems: selectedItems\n      };\n    }\n  }, {\n    key: '_filterItems',\n    value: function _filterItems(items, props) {\n      if (props.datalist != null || !props.allowDuplicates) {\n        var result = [];\n        var valueSet = {};\n        var different = false;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n        try {\n          for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _item = _step.value;\n            var _value = this._itemAdapter.getInputValue(_item);\n            if (!props.allowDuplicates && valueSet[_value]) {\n              different = true;\n              continue;\n            }\n            var listItem = this._listAdapter.findMatching(props.datalist, _value);\n            if (listItem != null) {\n              result.push(listItem);\n              valueSet[_value] = true;\n              different = true;\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(_value);\n              different = true;\n            } else {\n              result.push(_item);\n              valueSet[_value] = true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        if (different) {\n          return result;\n        }\n      }\n      return items;\n    }\n  }, {\n    key: '_warnInvalidValue',\n    value: function _warnInvalidValue(value) {\n      (0, _warning2['default'])(false, 'Value \"%s\" does not match any datalist value', value);\n    }\n  }, {\n    key: '_setInputValue',\n    value: function _setInputValue(value, callback) {\n      // track keypress count in state so re-render is forced even if value is\n      // unchanged; this is necessary when typing over the autocompleted range\n      // with matching characters to properly maintain the input selection range\n      this.setState({\n        inputValue: value,\n        inputValueKeyPress: this._keyPressCount\n      }, callback);\n    }\n  }, {\n    key: '_setValueMeta',\n    value: function _setValueMeta(inputItem) {\n      var inputItemEphemeral = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : inputItem != null;\n      var validated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : isValid;\n      this._inputItem = inputItem;\n      this._inputItemEphemeral = inputItemEphemeral;\n      this._valueIsValid = isValid;\n      this._valueWasValidated = validated;\n    }\n  }, {\n    key: '_clearInput',\n    value: function _clearInput() {\n      this._setValueMeta(null, false, true, true);\n      this._setInputValue('');\n    }\n  }, {\n    key: '_getValueUsing',\n    value: function _getValueUsing(props, inputValue, inputItem, selectedItems) {\n      return props.multiple ? selectedItems : props.valueIsItem ? inputItem : inputValue;\n    }\n  }, {\n    key: '_getCurrentValue',\n    value: function _getCurrentValue() {\n      return this._getValueUsing(this.props, this.state.inputValue, this._inputItem, this.state.selectedItems);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // IE8 can jump cursor position if not immediately updated to typed value;\n      // for other browsers, we can avoid re-rendering for the auto-complete\n      this._autoCompleteAfterRender = !this.refs.input.setSelectionRange;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.itemAdapter != this.props.itemAdapter) {\n        this._itemAdapter = nextProps.itemAdapter || new _ItemAdapter2['default']();\n      }\n      this._itemAdapter.receiveProps(nextProps);\n      if (nextProps.datalist != this.props.datalist || nextProps.datalistAdapter != this.props.datalistAdapter) {\n        if (nextProps.datalistAdapter) {\n          this._listAdapter = nextProps.datalistAdapter;\n        } else {\n          var listAdapter = this._getListAdapter(nextProps.datalist);\n          if (listAdapter.constructor != this._listAdapter.constructor) {\n            this._listAdapter = listAdapter;\n          }\n        }\n      }\n      this._listAdapter.receiveProps(nextProps, this._itemAdapter);\n\n      // if props.value changes (to a value other than the current state), or\n      // validation changes to make state invalid, propagate props.value to state\n      var nextValue = nextProps.value;\n      var inputValue = this.state.inputValue;\n      var valueChanged = nextValue !== this.props.value && nextValue !== this._getValueUsing(nextProps, inputValue, this._inputItem, this.state.selectedItems);\n      var inputItem = void 0,\n        inputValueInvalid = void 0,\n        propsValueInvalid = void 0,\n        validateSelected = void 0;\n      if (!valueChanged) {\n        if (nextProps.datalistOnly) {\n          var canValidate = !nextProps.datalistPartial && nextProps.datalist != null;\n          var validationChanged = !this.props.datalistOnly || !nextProps.datalistPartial && this.props.datalistPartial || nextProps.datalist != this.props.datalist;\n          if (inputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, inputValue);\n            if (inputItem == null) {\n              if (!canValidate && !this._inputItemEphemeral) {\n                inputItem = this._inputItem;\n              } else if (this._inputItemEphemeral && nextValue === inputValue) {\n                propsValueInvalid = true;\n              }\n            }\n            inputValueInvalid = inputItem == null && validationChanged;\n            // update metadata but don't reset input value if invalid but focused\n            if (inputValueInvalid && this._focused) {\n              this._setValueMeta(null, false, false, true);\n              if (validationChanged && canValidate && this._lastValidItem != null) {\n                // revalidate last valid item, which will be restored on blur\n                this._lastValidItem = this._listAdapter.findMatching(nextProps.datalist, this._lastValidValue);\n                if (this._lastValidItem == null) {\n                  this._lastValidValue = '';\n                }\n              }\n              inputValueInvalid = false;\n            }\n          } else {\n            inputItem = null;\n            inputValueInvalid = false;\n          }\n          validateSelected = nextProps.multiple && canValidate && validationChanged;\n        }\n        if (nextProps.multiple && !nextProps.allowDuplicates && this.props.allowDuplicates) {\n          validateSelected = true;\n        }\n      }\n      // inputValueInvalid implies !multiple, since inputValue of multiple should\n      // be blank when not focused\n      if (valueChanged || inputValueInvalid) {\n        var inputItemEphemeral = void 0,\n          _selectedItems = void 0;\n        if (propsValueInvalid) {\n          inputValue = '';\n          inputItemEphemeral = false;\n          _selectedItems = [];\n        } else {\n          var _getValueFromProps2 = this._getValueFromProps(nextProps);\n          inputValue = _getValueFromProps2.inputValue;\n          inputItem = _getValueFromProps2.inputItem;\n          inputItemEphemeral = _getValueFromProps2.inputItemEphemeral;\n          _selectedItems = _getValueFromProps2.selectedItems;\n        }\n        // if props.value change resolved to current state item, don't reset input\n        if (inputItem !== this._inputItem || !this._focused) {\n          this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n          this._setInputValue(inputValue);\n          this.setState({\n            selectedItems: _selectedItems\n          });\n          validateSelected = false;\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputValue;\n          // suppress onChange (but not onSelect) if value came from props\n          if (valueChanged) {\n            this._lastOnChangeValue = this._getValueUsing(nextProps, inputValue, inputItem, _selectedItems);\n          }\n        } else if (valueChanged && nextProps.multiple) {\n          this.setState({\n            selectedItems: _selectedItems\n          });\n        }\n      } else if (inputValue && nextProps.datalist != this.props.datalist && this._focused) {\n        // if datalist changed but value didn't, attempt to autocomplete\n        this._checkAutoComplete(inputValue, nextProps);\n      }\n      if (validateSelected) {\n        var _selectedItems2 = this._filterItems(this.state.selectedItems, nextProps);\n        this.setState({\n          selectedItems: _selectedItems2\n        });\n      }\n\n      // open dropdown if datalist message is set while focused\n      if (nextProps.datalistMessage && nextProps.datalistMessage != this.props.datalistMessage && this._focused) {\n        this._open('message', nextProps);\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      var suggestions = this.refs.suggestions;\n      this._menuFocusedBeforeUpdate = suggestions && suggestions.isFocused();\n      var nextInputValue = nextState.inputValue;\n      if (nextInputValue != this.state.inputValue) {\n        var inputItem = void 0,\n          inputItemEphemeral = void 0,\n          isValid = void 0;\n        if (!this._valueWasValidated) {\n          if (nextInputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, nextInputValue);\n            if (inputItem == null && !nextProps.datalistOnly) {\n              inputItem = this._itemAdapter.newFromValue(nextInputValue);\n              inputItemEphemeral = true;\n              isValid = true;\n            } else {\n              inputItemEphemeral = false;\n              isValid = inputItem != null;\n            }\n          } else {\n            inputItem = null;\n            inputItemEphemeral = false;\n            isValid = !nextProps.required;\n          }\n          this._setValueMeta(inputItem, inputItemEphemeral, isValid);\n        } else {\n          inputItem = this._inputItem;\n          isValid = this._valueIsValid;\n        }\n        if (isValid) {\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputItem && !inputItemEphemeral ? this._itemAdapter.getInputValue(inputItem) : nextInputValue;\n        }\n        if (isValid) {\n          var _multiple = nextProps.multiple,\n            _onChange = nextProps.onChange;\n          if (!_multiple && _onChange) {\n            var _value2 = this._getValueUsing(nextProps, nextInputValue, inputItem, nextState.selectedItems);\n            if (_value2 !== this._lastOnChangeValue) {\n              this._lastOnChangeValue = _value2;\n              _onChange(_value2);\n            }\n          }\n          var _onSelect = nextProps.onSelect;\n          if (_onSelect && inputItem !== this._lastOnSelectValue) {\n            this._lastOnSelectValue = inputItem;\n            _onSelect(inputItem);\n          }\n        }\n      }\n      var onToggle = nextProps.onToggle;\n      if (onToggle && nextState.open != this.state.open) {\n        onToggle(nextState.open);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.open && !prevState.open && this._lastOpenEventType === 'keydown' || this.state.disableFilter && !prevState.disableFilter && this._menuFocusedBeforeUpdate) {\n        this.refs.suggestions.focusFirst();\n      } else if (!this.state.open && prevState.open) {\n        // closed\n        if (this._menuFocusedBeforeUpdate) {\n          this._menuFocusedBeforeUpdate = false;\n          this._focusInput();\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this._focusTimeoutId);\n      this._focusTimeoutId = null;\n      clearTimeout(this._searchTimeoutId);\n      this._searchTimeoutId = null;\n    }\n  }, {\n    key: '_focusInput',\n    value: function _focusInput() {\n      var input = _reactDom2['default'].findDOMNode(this.refs.input);\n      // istanbul ignore else\n      if (input instanceof HTMLElement) {\n        input.focus();\n      }\n    }\n  }, {\n    key: '_open',\n    value: function _open(eventType, props) {\n      this._lastOpenEventType = eventType;\n      var disableFilter = eventType !== 'autocomplete' && this._hasNoOrExactMatch(props);\n      this.setState({\n        open: true,\n        disableFilter: disableFilter\n      });\n      var onSearch = props.onSearch;\n      var _state = this.state,\n        inputValue = _state.inputValue,\n        searchValue = _state.searchValue;\n      if (onSearch && searchValue !== inputValue) {\n        this.setState({\n          searchValue: inputValue\n        });\n        onSearch(inputValue);\n      }\n    }\n  }, {\n    key: '_close',\n    value: function _close() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: '_toggleOpen',\n    value: function _toggleOpen(eventType, props) {\n      if (this.state.open) {\n        this._close();\n      } else {\n        this._open(eventType, props);\n      }\n    }\n  }, {\n    key: '_canOpen',\n    value: function _canOpen() {\n      var datalist = this.props.datalist;\n      return datalist == null && this.props.onSearch || !this._listAdapter.isEmpty(datalist) || !!this.props.datalistMessage;\n    }\n  }, {\n    key: '_hasNoOrExactMatch',\n    value: function _hasNoOrExactMatch(props) {\n      var _this2 = this;\n      if (this._inputItem != null && !this._inputItemEphemeral) {\n        return true; // exact match\n      }\n\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n      return this._listAdapter.find(props.datalist, function (item) {\n        return _this2._itemAdapter.itemIncludedByInput(item, foldedValue);\n      }) == null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var showToggle = this.props.showToggle;\n      var toggleCanOpen = this._canOpen();\n      var toggleVisible = showToggle === 'auto' ? toggleCanOpen : showToggle;\n      var classes = {\n        autosuggest: true,\n        open: this.state.open,\n        disabled: this.props.disabled,\n        dropdown: toggleVisible && !this.props.dropup,\n        dropup: toggleVisible && this.props.dropup\n      };\n      return _react2['default'].createElement('div', {\n        key: 'dropdown',\n        className: (0, _classnames2['default'])(classes),\n        onFocus: this._handleFocus,\n        onBlur: this._handleBlur\n      }, this._renderInputGroup(toggleVisible, toggleCanOpen), this._renderMenu());\n    }\n  }, {\n    key: '_renderInputGroup',\n    value: function _renderInputGroup(toggleVisible, toggleCanOpen) {\n      var addonBefore = this.props.addonBefore ? _react2['default'].createElement('span', {\n        className: 'input-group-addon',\n        key: 'addonBefore'\n      }, this.props.addonBefore) : null;\n      var addonAfter = this.props.addonAfter ? _react2['default'].createElement('span', {\n        className: 'input-group-addon',\n        key: 'addonAfter'\n      }, this.props.addonAfter) : null;\n      var buttonBefore = this.props.buttonBefore ? _react2['default'].createElement('span', {\n        className: 'input-group-btn'\n      }, this.props.buttonBefore) : null;\n\n      // Bootstrap expects the dropdown toggle to be last,\n      // as it does not reset the right border radius for toggles:\n      // .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle)\n      // { @include border-right-radius(0); }\n      var toggle = toggleVisible && this._renderToggle(toggleCanOpen);\n      var buttonAfter = toggle || this.props.buttonAfter ? _react2['default'].createElement('span', {\n        className: 'input-group-btn'\n      }, this.props.buttonAfter, toggle) : null;\n      var classes = (0, _classnames2['default'])({\n        'input-group': addonBefore || addonAfter || buttonBefore || buttonAfter,\n        'input-group-sm': this.props.bsSize === 'small',\n        'input-group-lg': this.props.bsSize === 'large',\n        'input-group-toggle': !!toggle\n      });\n      return classes ? _react2['default'].createElement('div', {\n        className: classes,\n        key: 'input-group'\n      }, addonBefore, buttonBefore, this._renderChoices(), addonAfter, buttonAfter) : this._renderChoices();\n    }\n  }, {\n    key: '_renderToggle',\n    value: function _renderToggle(canOpen) {\n      return _react2['default'].createElement(_reactBootstrap.Dropdown.Toggle, {\n        ref: 'toggle',\n        key: 'toggle',\n        id: this.props.toggleId,\n        bsSize: this.props.bsSize,\n        disabled: this.props.disabled || !canOpen,\n        open: this.state.open,\n        onClick: this._handleToggleClick,\n        onKeyDown: this._handleKeyDown\n      });\n    }\n  }, {\n    key: '_renderChoices',\n    value: function _renderChoices() {\n      if (this.props.multiple) {\n        var _props$choicesClass = this.props.choicesClass,\n          ChoicesClass = _props$choicesClass === undefined ? _Choices2['default'] : _props$choicesClass;\n        return _react2['default'].createElement(ChoicesClass, {\n          ref: 'choices',\n          autoHeight: !this.props.showToggle && !this.props.addonAfter && !this.props.addonBefore && !this.props.buttonAfter && !this.props.buttonBefore,\n          disabled: this.props.disabled,\n          focused: this.state.inputFocused,\n          inputValue: this.state.inputValue,\n          items: this.state.selectedItems,\n          onKeyPress: this._handleKeyPress,\n          onRemove: this._removeItem,\n          renderItem: this._renderSelected\n        }, this._renderInput());\n      }\n      return this._renderInput();\n    }\n\n    // autobind\n  }, {\n    key: '_renderSelected',\n    value: function _renderSelected(item) {\n      return this._itemAdapter.renderSelected(item);\n    }\n  }, {\n    key: '_renderInput',\n    value: function _renderInput() {\n      var formGroup = this.context.$bs_formGroup;\n      var controlId = formGroup && formGroup.controlId;\n      var extraProps = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n      try {\n        for (var _iterator2 = Object.keys(this.props)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n          if (!Autosuggest.propTypes[key]) {\n            extraProps[key] = this.props[key];\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n      var noneSelected = !this.props.multiple || !this.state.selectedItems.length;\n      // set autoComplete off to avoid a redundant browser drop-down menu,\n      // but allow it to be overridden by extra props for auto-fill purposes\n      return _react2['default'].createElement('input', _extends({\n        autoComplete: 'off'\n      }, extraProps, {\n        className: (0, _classnames2['default'])(this.props.className, {\n          'form-control': !this.props.multiple\n        }),\n        ref: 'input',\n        key: 'input',\n        id: controlId,\n        disabled: this.props.disabled,\n        required: this.props.required && noneSelected,\n        placeholder: noneSelected ? this.props.placeholder : undefined,\n        type: this.props.type,\n        value: this.state.inputValue,\n        onChange: this._handleInputChange,\n        onKeyDown: this._handleKeyDown,\n        onKeyPress: this._handleKeyPress,\n        onFocus: this._handleInputFocus,\n        onBlur: this._handleInputBlur\n      }));\n    }\n  }, {\n    key: '_renderMenu',\n    value: function _renderMenu() {\n      var _this3 = this;\n      this._pseudofocusedItem = null;\n      var open = this.state.open;\n      if (!open) {\n        return null;\n      }\n      var datalist = this.props.datalist;\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n      this._foldedInputValue = foldedValue;\n      var items = void 0;\n      if (this.state.disableFilter) {\n        items = this._listAdapter.toArray(datalist);\n      } else {\n        items = this._listAdapter.filter(datalist, function (item) {\n          return _this3._itemAdapter.itemIncludedByInput(item, foldedValue) && _this3._allowItem(item);\n        });\n      }\n      items = this._itemAdapter.sortItems(items, foldedValue);\n      var filtered = items.length < this._listAdapter.getLength(datalist);\n      // visually indicate that first item will be selected if Enter is pressed\n      // while the input element is focused (unless multiple and not datalist-only)\n      var focusedIndex = void 0;\n      if (items.length > 0 && this.state.inputFocused && (!this.props.multiple || this.props.datalistOnly)) {\n        this._pseudofocusedItem = items[focusedIndex = 0];\n      }\n      var _props = this.props,\n        _props$suggestionsCla = _props.suggestionsClass,\n        SuggestionsClass = _props$suggestionsCla === undefined ? _Suggestions2['default'] : _props$suggestionsCla,\n        datalistMessage = _props.datalistMessage,\n        onDatalistMessageSelect = _props.onDatalistMessageSelect,\n        toggleId = _props.toggleId;\n      return _react2['default'].createElement(SuggestionsClass, {\n        ref: 'suggestions',\n        datalistMessage: datalistMessage,\n        filtered: filtered,\n        focusedIndex: focusedIndex,\n        getItemKey: this._getItemKey,\n        isSelectedItem: this._isSelectedItem,\n        items: items,\n        labelledBy: toggleId,\n        onClose: this._handleMenuClose,\n        onDatalistMessageSelect: onDatalistMessageSelect,\n        onDisableFilter: this._handleShowAll,\n        onSelect: this._handleItemSelect,\n        open: open,\n        renderItem: this._renderSuggested\n      });\n    }\n  }, {\n    key: '_allowItem',\n    value: function _allowItem(item) {\n      var _this4 = this;\n      if (this.props.allowDuplicates) {\n        return true;\n      }\n      var value = this._itemAdapter.getInputValue(item);\n      return !this.state.selectedItems.find(function (i) {\n        return _this4._itemAdapter.getInputValue(i) === value;\n      });\n    }\n\n    // autobind\n  }, {\n    key: '_getItemKey',\n    value: function _getItemKey(item) {\n      return this._itemAdapter.getReactKey(item);\n    }\n\n    // autobind\n  }, {\n    key: '_isSelectedItem',\n    value: function _isSelectedItem(item) {\n      return this._itemAdapter.itemMatchesInput(item, this._foldedInputValue);\n    }\n\n    // autobind\n  }, {\n    key: '_renderSuggested',\n    value: function _renderSuggested(item) {\n      return this._itemAdapter.renderSuggested(item);\n    }\n\n    // autobind\n  }, {\n    key: '_handleToggleClick',\n    value: function _handleToggleClick() {\n      this._toggleOpen('click', this.props);\n    }\n\n    // autobind\n  }, {\n    key: '_handleInputChange',\n    value: function _handleInputChange(event) {\n      var _this5 = this;\n      var _ref2 = event.target,\n        value = _ref2.value;\n      // prevent auto-complete on backspace/delete/copy/paste/etc.\n\n      var allowAutoComplete = this._keyPressCount > this.state.inputValueKeyPress;\n      if (allowAutoComplete && value) {\n        if (this._autoCompleteAfterRender) {\n          this._setValueMeta();\n          this._setInputValue(value, function () {\n            _this5._checkAutoComplete(value, _this5.props);\n          });\n        } else if (!this._checkAutoComplete(value, this.props)) {\n          this._setValueMeta();\n          this._setInputValue(value);\n        }\n      } else {\n        this._setValueMeta();\n        this._setInputValue(value);\n      }\n\n      // suppress onSearch if can't auto-complete and not open\n      if (allowAutoComplete || this.state.open) {\n        var _onSearch = this.props.onSearch;\n        if (_onSearch) {\n          clearTimeout(this._searchTimeoutId);\n          this._searchTimeoutId = setTimeout(function () {\n            _this5._searchTimeoutId = null;\n            if (value != _this5.state.searchValue) {\n              _this5.setState({\n                searchValue: value\n              });\n              _onSearch(value);\n            }\n          }, this.props.searchDebounce);\n        }\n      }\n    }\n  }, {\n    key: '_checkAutoComplete',\n    value: function _checkAutoComplete(value, props) {\n      var _this6 = this;\n\n      // open dropdown if any items would be included\n      var valueUpdated = false;\n      var datalist = props.datalist;\n      var foldedValue = this._itemAdapter.foldValue(value);\n      var includedItems = this._listAdapter.filter(datalist, function (i) {\n        return _this6._itemAdapter.itemIncludedByInput(i, foldedValue) && _this6._allowItem(i);\n      });\n      if (includedItems.length > 0) {\n        // if only one item is included and the value must come from the list,\n        // autocomplete using that item\n        var _datalistOnly = props.datalistOnly,\n          _datalistPartial = props.datalistPartial;\n        if (includedItems.length === 1 && _datalistOnly && !_datalistPartial) {\n          var found = includedItems[0];\n          var foundValue = this._itemAdapter.getInputValue(found);\n          var callback = void 0;\n          var _inputSelect = props.inputSelect;\n          if (value != foundValue && _inputSelect && this._itemAdapter.foldValue(foundValue).startsWith(foldedValue)) {\n            var _input = this.refs.input;\n            callback = function callback() {\n              _inputSelect(_input, value, foundValue);\n            };\n          }\n          this._setValueMeta(found);\n          this._setInputValue(foundValue, callback);\n          valueUpdated = true;\n          if (this.state.open ? props.closeOnCompletion : value != foundValue && !props.closeOnCompletion) {\n            this._toggleOpen('autocomplete', props);\n          }\n        } else {\n          // otherwise, just check if any values match, and select the first one\n          // (without modifying the input value)\n          var _found = includedItems.find(function (i) {\n            return _this6._itemAdapter.itemMatchesInput(i, foldedValue);\n          });\n          if (_found) {\n            this._setValueMeta(_found);\n            this._setInputValue(value);\n            valueUpdated = true;\n          }\n          // open dropdown unless exactly one matching value was found\n          if (!this.state.open && (!_found || includedItems.length > 1)) {\n            this._open('autocomplete', props);\n          }\n        }\n      }\n      return valueUpdated;\n    }\n\n    // autobind\n  }, {\n    key: '_handleItemSelect',\n    value: function _handleItemSelect(item) {\n      if (this.props.multiple) {\n        this._addItem(item);\n      } else {\n        var itemValue = this._itemAdapter.getInputValue(item);\n        this._setValueMeta(item);\n        this._setInputValue(itemValue);\n      }\n      this._close();\n    }\n  }, {\n    key: '_addItem',\n    value: function _addItem(item) {\n      if (this._allowItem(item)) {\n        var _selectedItems3 = [].concat(_toConsumableArray(this.state.selectedItems), [item]);\n        this.setState({\n          selectedItems: _selectedItems3\n        });\n        var _props2 = this.props,\n          _onAdd = _props2.onAdd,\n          _onChange2 = _props2.onChange;\n        if (_onAdd) {\n          _onAdd(item);\n        }\n        if (_onChange2) {\n          _onChange2(_selectedItems3);\n        }\n      }\n      this._clearInput();\n      if (this.state.open) {\n        this._close();\n      }\n    }\n\n    // autobind\n  }, {\n    key: '_removeItem',\n    value: function _removeItem(index) {\n      var previousItems = this.state.selectedItems;\n      var selectedItems = previousItems.slice(0, index).concat(previousItems.slice(index + 1));\n      this.setState({\n        selectedItems: selectedItems\n      });\n      var _props3 = this.props,\n        onRemove = _props3.onRemove,\n        onChange = _props3.onChange;\n      if (onRemove) {\n        onRemove(index);\n      }\n      if (onChange) {\n        onChange(selectedItems);\n      }\n    }\n  }, {\n    key: '_addInputValue',\n    value: function _addInputValue() {\n      if (this._inputItem) {\n        this._addItem(this._inputItem);\n        return true;\n      }\n      return false;\n    }\n\n    // autobind\n  }, {\n    key: '_handleShowAll',\n    value: function _handleShowAll() {\n      this.setState({\n        disableFilter: true\n      });\n    }\n\n    // autobind\n  }, {\n    key: '_handleKeyDown',\n    value: function _handleKeyDown(event) {\n      if (this.props.disabled) return;\n      switch (event.keyCode || event.which) {\n        case _keycode2['default'].codes.down:\n        case _keycode2['default'].codes['page down']:\n          if (this.state.open) {\n            this.refs.suggestions.focusFirst();\n          } else if (this._canOpen()) {\n            this._open('keydown', this.props);\n          }\n          event.preventDefault();\n          break;\n        case _keycode2['default'].codes.left:\n        case _keycode2['default'].codes.backspace:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === 0) {\n            this.refs.choices.focusLast();\n            event.preventDefault();\n          }\n          break;\n        case _keycode2['default'].codes.right:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === this.state.inputValue.length) {\n            this.refs.choices.focusFirst();\n            event.preventDefault();\n          }\n          break;\n        case _keycode2['default'].codes.enter:\n          if (this.props.multiple && this.state.inputValue) {\n            event.preventDefault();\n            if (this._addInputValue()) {\n              break;\n            }\n          }\n          if (this.state.open && this.state.inputFocused) {\n            event.preventDefault();\n            if (this._pseudofocusedItem) {\n              this._handleItemSelect(this._pseudofocusedItem);\n            } else {\n              this._close();\n            }\n          }\n          break;\n        case _keycode2['default'].codes.esc:\n        case _keycode2['default'].codes.tab:\n          this._handleMenuClose(event);\n          break;\n      }\n    }\n  }, {\n    key: '_getCursorPosition',\n    value: function _getCursorPosition(input) {\n      var inputNode = _reactDom2['default'].findDOMNode(input);\n      // istanbul ignore else\n      if (inputNode instanceof HTMLInputElement) {\n        return inputNode.selectionStart;\n      }\n    }\n\n    // autobind\n  }, {\n    key: '_handleKeyPress',\n    value: function _handleKeyPress() {\n      ++this._keyPressCount;\n    }\n\n    // autobind\n  }, {\n    key: '_handleMenuClose',\n    value: function _handleMenuClose() {\n      if (this.state.open) {\n        this._close();\n      }\n    }\n\n    // autobind\n  }, {\n    key: '_handleInputFocus',\n    value: function _handleInputFocus() {\n      this.setState({\n        inputFocused: true\n      });\n    }\n\n    // autobind\n  }, {\n    key: '_handleInputBlur',\n    value: function _handleInputBlur() {\n      this.setState({\n        inputFocused: false\n      });\n    }\n\n    // autobind\n  }, {\n    key: '_handleFocus',\n    value: function _handleFocus() {\n      if (this._focusTimeoutId) {\n        clearTimeout(this._focusTimeoutId);\n        this._focusTimeoutId = null;\n      } else {\n        this._focused = true;\n        var _onFocus = this.props.onFocus;\n        if (_onFocus) {\n          var _value3 = this._getCurrentValue();\n          _onFocus(_value3);\n        }\n      }\n    }\n\n    // autobind\n  }, {\n    key: '_handleBlur',\n    value: function _handleBlur() {\n      var _this7 = this;\n      this._focusTimeoutId = setTimeout(function () {\n        _this7._focusTimeoutId = null;\n        _this7._focused = false;\n        var inputValue = _this7.state.inputValue;\n        var onBlur = _this7.props.onBlur;\n        if (_this7.props.multiple) {\n          if (inputValue && !_this7._addInputValue()) {\n            _this7._clearInput();\n          }\n        } else if (inputValue != _this7._lastValidValue) {\n          // invoke onBlur after state change, rather than immediately\n          var callback = void 0;\n          if (onBlur) {\n            callback = function callback() {\n              var value = _this7._getCurrentValue();\n              onBlur(value);\n            };\n          }\n          // restore last valid value/item\n          _this7._setValueMeta(_this7._lastValidItem, false, true, true);\n          _this7._setInputValue(_this7._lastValidValue, callback);\n          return;\n        }\n        if (onBlur) {\n          var _value4 = _this7._getCurrentValue();\n          onBlur(_value4);\n        }\n      }, 1);\n    }\n  }]);\n  return Autosuggest;\n}(_react2['default'].Component);\nAutosuggest.propTypes = {\n  /**\n   * Text or component appearing in the input group after the input element\n   * (and before any button specified in `buttonAfter`).\n   */\n  addonAfter: _propTypes2['default'].node,\n  /**\n    * Text or component appearing in the input group before the input element\n    * (and before any button specified in `buttonBefore`).\n    */\n  addonBefore: _propTypes2['default'].node,\n  /**\n   * Indicates whether duplicate values are allowed in `multiple` mode.\n   */\n  allowDuplicates: _propTypes2['default'].bool,\n  /**\n   * Specifies the size of the form group and its contained components.\n   * Leave undefined for normal/medium size.\n   */\n  bsSize: _propTypes2['default'].oneOf(['small', 'large']),\n  /**\n   * Button component appearing in the input group after the input element\n   * (and after any add-on specified in `addonAfter`).\n   */\n  buttonAfter: _propTypes2['default'].node,\n  /**\n   * Button component appearing in the input group before the input element\n   * (and after any add-on specified in `addonBefore`).\n   */\n  buttonBefore: _propTypes2['default'].node,\n  /**\n   * React component class used to render the selected items in multiple mode.\n   */\n  choicesClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n  /**\n   * Indicates whether the drop-down menu should be closed automatically when\n   * auto-completion occurs. By default, the menu will remain open, so the\n   * user can see any additional information about the selected item (such as\n   * a shorthand code that caused it to be selected).\n   */\n  closeOnCompletion: _propTypes2['default'].bool,\n  /**\n   * A collection of items (such as an array, object, or Map) used as\n   * auto-complete suggestions. Each item may have any type supported by the\n   * `itemAdapter`. The default item adapter has basic support for any\n   * non-null type: it will initially try to access item properties using the\n   * configured property names (`itemReactKeyPropName`, `itemSortKeyPropName`,\n   * and `itemValuePropName`), but will fall back to using the `toString`\n   * method to obtain these properties to support primitives and other object\n   * types.\n   *\n   * If `datalist` is undefined or null and `onSearch` is not, the datalist\n   * is assumed to be dynamically populated, and the drop-down toggle will be\n   * enabled and will trigger `onSearch` the first time it is clicked.\n   * Conversely, an empty `datalist` or undefined/null `onSearch` indicates\n   * that there are no auto-complete options.\n   */\n  datalist: _propTypes2['default'].any,\n  /**\n   * An instance of the ListAdapter class that provides datalist access\n   * methods required by this component.\n   */\n  datalistAdapter: _propTypes2['default'].object,\n  /**\n   * Message to be displayed at the end of the datalist. It can be used to\n   * indicate that data is being fetched asynchronously, that an error\n   * occurred fetching data, or that additional options can be requested.\n   * It behaves similarly to a menu item, except that it is not filtered or\n   * sorted and cannot be selected (except to invoke `onDatalistMessageSelect`).\n   * Changing this property to a different non-null value while the component\n   * is focused causes the drop-down menu to be opened, which is useful for\n   * reporting status, such as that options are being fetched or failed to be\n   * fetched.\n   */\n  datalistMessage: _propTypes2['default'].node,\n  /**\n   * Indicates that only values matching an item from the `datalist` property\n   * are considered valid. For search purposes, intermediate values of the\n   * underlying `input` element may not match while the component is focused,\n   * but any non-matching value will be replaced with the previous matching\n   * value when the component loses focus.\n   *\n   * Note that there are two cases where the current (valid) value may not\n   * correspond to an item in the datalist:\n   *\n   * - If the value was provided by the `value` or `defaultValue` property\n   *   and either `datalist` is undefined/null (as opposed to empty) or\n   *   `datalistPartial` is true, the value is assumed to be valid.\n   * - If `datalist` changes and `datalistPartial` is true, any previously\n   *   valid value is assumed to remain valid. (Conversely, if `datalist`\n   *   changes and `datalistPartial` is false, a previously valid value will\n   *   be invalidated if not in the new `datalist`.)\n   */\n  datalistOnly: _propTypes2['default'].bool,\n  /**\n   * Indicates that the `datalist` property should be considered incomplete\n   * for validation purposes. Specifically, if both `datalistPartial` and\n   * `datalistOnly` are true, changes to the `datalist` will not render\n   * invalid a value that was previously valid. This is useful in cases where\n   * a partial datalist is obtained dynamically in response to the `onSearch`\n   * callback.\n   */\n  datalistPartial: _propTypes2['default'].bool,\n  /**\n   * Initial value to be rendered when used as an\n   * [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components)\n   * (i.e. no `value` property is supplied).\n   */\n  defaultValue: _propTypes2['default'].any,\n  /**\n   * Indicates whether the form group is disabled, which causes all of its\n   * contained elements to ignore input and focus events and to be displayed\n   * grayed out.\n   */\n  disabled: _propTypes2['default'].bool,\n  /**\n   * Indicates whether the suggestion list should drop up instead of down.\n   *\n   * Note that currently a drop-up list extending past the top of the page is\n   * clipped, rendering the clipped items inaccessible, whereas a drop-down\n   * list will extend the page and allow scrolling as necessary.\n   */\n  dropup: _propTypes2['default'].bool,\n  /**\n   * Custom class name applied to the input group.\n   */\n  groupClassName: _propTypes2['default'].string,\n  /**\n   * Function used to select a portion of the input value when auto-completion\n   * occurs. The default implementation selects just the auto-completed\n   * portion, which is equivalent to:\n   *\n   * ```js\n   *   defaultInputSelect(input, value, completion) {\n   *     input.setSelectionRange(value.length, completion.length)\n   *   }\n   * ```\n   */\n  inputSelect: _propTypes2['default'].func,\n  /**\n   * An instance of the ItemAdapter class that provides the item access\n   * methods required by this component.\n   */\n  itemAdapter: _propTypes2['default'].object,\n  /**\n   * Name of the item property used for the React component key. If this\n   * property is not defined, `itemValuePropName` is used instead. If neither\n   * property is defined, `toString()` is called on the item.\n   */\n  itemReactKeyPropName: _propTypes2['default'].string,\n  /**\n   * Name of the item property used for sorting items. If this property is not\n   * defined, `itemValuePropName` is used instead. If neither property is\n   * defined, `toString()` is called on the item.\n   */\n  itemSortKeyPropName: _propTypes2['default'].string,\n  /**\n   * Name of item property used for the input element value. If this property\n   * is not defined, `toString()` is called on the item.\n   */\n  itemValuePropName: _propTypes2['default'].string,\n  /**\n   * Enables selection of multiple items. The value property should be an\n   * array of items.\n   */\n  multiple: _propTypes2['default'].bool,\n  /**\n   * Callback function called whenever a new value should be appended to the\n   * array of values in `multiple` mode. The sole argument is the added item.\n   */\n  onAdd: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input focus leaves this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onBlur: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input value changes to a different\n   * valid value. Validity depends on properties such as `datalistOnly`,\n   * `valueIsItem`, and `required`. The sole argument is current value:\n   *\n   * - If `multiple` is enabled, the current value is an array of selected\n   *   items.\n   * - If `valueIsItem` is enabled, the current value is the selected\n   *   datalist item.\n   * - Otherwise, the current value is the `input` element value. Note that\n   *   if `datalistOnly` or `required` are enabled, only valid values trigger\n   *   a callback.\n   */\n  onChange: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the datalist item created for\n   * `datalistMessage` is selected. If this property is null, the associated\n   * item is displayed as disabled.\n   */\n  onDatalistMessageSelect: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input focus enters this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onFocus: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever a value should be removed from the\n   * array of values in `multiple` mode. The sole argument is the index of\n   * the value to remove.\n   */\n  onRemove: _propTypes2['default'].func,\n  /**\n   * Callback function called periodically when the `input` element value has\n   * changed. The sole argument is the current value of the `input` element.\n   * This callback can be used to dynamically populate the `datalist` based on\n   * the input value so far, e.g. with values obtained from a remote service.\n   * Once changed, the value must then remain unchanged for `searchDebounce`\n   * milliseconds before the function will be called. No two consecutive\n   * invocations of the function will be passed the same value (i.e. changing\n   * and then restoring the value within the debounce interval is not\n   * considered a change). Note also that the callback can be invoked with an\n   * empty string, if the user clears the `input` element; this implies that\n   * any minimum search string length should be imposed by the function.\n   */\n  onSearch: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever an item from the suggestion list is\n   * selected (regardless of whether it is clicked or typed). The sole\n   * argument is the selected item.\n   */\n  onSelect: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the drop-down list of suggestions is\n   * opened or closed. The sole argument is a boolean value indicating whether\n   * the list is open.\n   */\n  onToggle: _propTypes2['default'].func,\n  /**\n   * Placeholder text propagated to the underlying `input` element (when\n   * `multiple` is false or no items have been selected).\n   */\n  placeholder: _propTypes2['default'].string,\n  /**\n   * `required` property passed to the `input` element (when `multiple` is\n   * false or no items have been selected).\n   */\n  required: _propTypes2['default'].bool,\n  /**\n   * The number of milliseconds that must elapse between the last change to\n   * the `input` element value and a call to `onSearch`. The default is 250.\n   */\n  searchDebounce: _propTypes2['default'].number,\n  /**\n   * Indicates whether to show the drop-down toggle. If set to `auto`, the\n   * toggle is shown only when the `datalist` is non-empty or dynamic.\n   */\n  showToggle: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].oneOf(['auto'])]),\n  /**\n   * React component class used to render the drop-down list of suggestions.\n   */\n  suggestionsClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n  /**\n   * ID supplied to the drop-down toggle and used by the drop-down menu to\n   * refer to it.\n   */\n  toggleId: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n  /**\n   * `type` property supplied to the contained `input` element. Only textual\n   * types should be specified, such as `text`, `search`, `email`, `tel`, or\n   * perhaps `number`. Note that the browser may supply additional UI elements\n   * for some types (e.g. increment/decrement buttons for `number`) that may\n   * need additional styling or may interfere with UI elements supplied by\n   * this component.\n   */\n  type: _propTypes2['default'].string,\n  /**\n   * The value to be rendered by the component. If unspecified, the component\n   * behaves like an [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components).\n   */\n  value: _propTypes2['default'].any,\n  /**\n   * Indicates that the `value` property should be interpreted as a datalist\n   * item, as opposed to the string value of the underlying `input` element.\n   * When false (the default), the `value` property (if specified) is\n   * expected to be a string and corresponds (indirectly) to the `value`\n   * property of the underlying `input` element. When true, the `value`\n   * property is expected to be a datalist item whose display value (as\n   * provided by the `itemAdapter`) is used as the `input` element value.\n   * This property also determines whether the argument to the `onChange`\n   * callback is the `input` value or a datalist item.\n   *\n   * Note that unless `datalistOnly` is also true, items may also be created\n   * dynamically using the `newFromValue` method of the `itemAdapter`.\n   *\n   * Also note that this property is ignored if `multiple` is true; in that\n   * case, the `value` property and `onChange` callback argument are\n   * implicitly an array of datalist items.\n   */\n  valueIsItem: _propTypes2['default'].bool\n};\nAutosuggest.contextTypes = {\n  $bs_formGroup: _propTypes2['default'].object\n};\nAutosuggest.defaultProps = {\n  closeOnCompletion: false,\n  datalistOnly: false,\n  datalistPartial: false,\n  disabled: false,\n  dropup: false,\n  inputSelect: Autosuggest.defaultInputSelect,\n  multiple: false,\n  itemReactKeyPropName: 'key',\n  itemSortKeyPropName: 'sortKey',\n  itemValuePropName: 'value',\n  searchDebounce: 250,\n  showToggle: 'auto',\n  type: 'text',\n  valueIsItem: false\n};\nexports['default'] = Autosuggest;","map":{"version":3,"names":["Object","defineProperty","exports","value","ObjectListAdapter","MapListAdapter","ArrayListAdapter","EmptyListAdapter","ListAdapter","ItemAdapter","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_classnames","require","_classnames2","_interopRequireDefault","_shallowEqual","_shallowEqual2","_keycode","_keycode2","_propTypes","_propTypes2","_react","_react2","_reactBootstrap","_reactDom","_reactDom2","_warning","_warning2","_Choices","_Choices2","_Suggestions","_Suggestions2","_ItemAdapter","_ItemAdapter2","_ListAdapter","_ListAdapter2","_EmptyListAdapter","_EmptyListAdapter2","_ArrayListAdapter","_ArrayListAdapter2","_MapListAdapter","_MapListAdapter2","_ObjectListAdapter","_ObjectListAdapter2","obj","__esModule","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Autosuggest","_React$Component","defaultInputSelect","input","completion","type","setSelectionRange","createTextRange","range","moveEnd","moveStart","select","_ref","_len","args","_key","_this","getPrototypeOf","apply","concat","_itemAdapter","itemAdapter","receiveProps","_listAdapter","datalistAdapter","_getListAdapter","datalist","_this$_getValueFromPr","_getValueFromProps","inputValue","inputItem","inputItemEphemeral","selectedItems","_setValueMeta","_lastValidItem","_lastValidValue","_keyPressCount","state","open","disableFilter","inputValueKeyPress","inputFocused","searchValue","_lastOnChangeValue","_getCurrentValue","_lastOnSelectValue","_renderSelected","bind","_getItemKey","_isSelectedItem","_renderSuggested","_handleToggleClick","_handleInputChange","_handleItemSelect","_removeItem","_handleShowAll","_handleKeyDown","_handleKeyPress","_handleMenuClose","_handleInputFocus","_handleInputBlur","_handleFocus","_handleBlur","list","Map","Error","defaultValue","multiple","_filterItems","valueIsItem","itemValue","getInputValue","findMatching","datalistOnly","datalistPartial","_warnInvalidValue","toString","newFromValue","items","allowDuplicates","result","valueSet","different","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","_item","_value","listItem","push","err","_setInputValue","callback","setState","isValid","validated","_inputItem","_inputItemEphemeral","_valueIsValid","_valueWasValidated","_clearInput","_getValueUsing","componentDidMount","_autoCompleteAfterRender","refs","componentWillReceiveProps","nextProps","listAdapter","nextValue","valueChanged","inputValueInvalid","propsValueInvalid","validateSelected","canValidate","validationChanged","_focused","_selectedItems","_getValueFromProps2","_checkAutoComplete","_selectedItems2","datalistMessage","_open","shouldComponentUpdate","nextState","componentWillUpdate","suggestions","_menuFocusedBeforeUpdate","isFocused","nextInputValue","required","_multiple","_onChange","onChange","_value2","_onSelect","onSelect","onToggle","componentDidUpdate","prevProps","prevState","_lastOpenEventType","focusFirst","_focusInput","componentWillUnmount","clearTimeout","_focusTimeoutId","_searchTimeoutId","findDOMNode","HTMLElement","focus","eventType","_hasNoOrExactMatch","onSearch","_state","_close","_toggleOpen","_canOpen","isEmpty","_this2","foldedValue","foldValue","find","item","itemIncludedByInput","render","showToggle","toggleCanOpen","toggleVisible","classes","autosuggest","disabled","dropdown","dropup","createElement","className","onFocus","onBlur","_renderInputGroup","_renderMenu","addonBefore","addonAfter","buttonBefore","toggle","_renderToggle","buttonAfter","bsSize","_renderChoices","canOpen","Dropdown","Toggle","ref","id","toggleId","onClick","onKeyDown","_props$choicesClass","choicesClass","ChoicesClass","autoHeight","focused","onKeyPress","onRemove","renderItem","_renderInput","renderSelected","formGroup","context","$bs_formGroup","controlId","extraProps","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","keys","_step2","propTypes","noneSelected","autoComplete","placeholder","_this3","_pseudofocusedItem","_foldedInputValue","toArray","filter","_allowItem","sortItems","filtered","getLength","focusedIndex","_props","_props$suggestionsCla","suggestionsClass","SuggestionsClass","onDatalistMessageSelect","getItemKey","isSelectedItem","labelledBy","onClose","onDisableFilter","_this4","getReactKey","itemMatchesInput","renderSuggested","event","_this5","_ref2","allowAutoComplete","_onSearch","setTimeout","searchDebounce","_this6","valueUpdated","includedItems","_datalistOnly","_datalistPartial","found","foundValue","_inputSelect","inputSelect","startsWith","_input","closeOnCompletion","_found","_addItem","_selectedItems3","_props2","_onAdd","onAdd","_onChange2","index","previousItems","slice","_props3","_addInputValue","keyCode","which","codes","down","preventDefault","left","backspace","choices","_getCursorPosition","focusLast","right","enter","esc","tab","inputNode","HTMLInputElement","selectionStart","_onFocus","_value3","_this7","_value4","Component","node","bool","oneOf","oneOfType","func","string","any","object","groupClassName","itemReactKeyPropName","itemSortKeyPropName","itemValuePropName","number","contextTypes","defaultProps"],"sources":["/home/tolga/VS Code workspace/Brukthånd/secondhand/node_modules/react-bootstrap-autosuggest/lib/Autosuggest.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectListAdapter = exports.MapListAdapter = exports.ArrayListAdapter = exports.EmptyListAdapter = exports.ListAdapter = exports.ItemAdapter = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _keycode = require('keycode');\n\nvar _keycode2 = _interopRequireDefault(_keycode);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = require('react-bootstrap');\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _Choices = require('./Choices');\n\nvar _Choices2 = _interopRequireDefault(_Choices);\n\nvar _Suggestions = require('./Suggestions');\n\nvar _Suggestions2 = _interopRequireDefault(_Suggestions);\n\nvar _ItemAdapter = require('./ItemAdapter');\n\nvar _ItemAdapter2 = _interopRequireDefault(_ItemAdapter);\n\nvar _ListAdapter = require('./ListAdapter');\n\nvar _ListAdapter2 = _interopRequireDefault(_ListAdapter);\n\nvar _EmptyListAdapter = require('./EmptyListAdapter');\n\nvar _EmptyListAdapter2 = _interopRequireDefault(_EmptyListAdapter);\n\nvar _ArrayListAdapter = require('./ArrayListAdapter');\n\nvar _ArrayListAdapter2 = _interopRequireDefault(_ArrayListAdapter);\n\nvar _MapListAdapter = require('./MapListAdapter');\n\nvar _MapListAdapter2 = _interopRequireDefault(_MapListAdapter);\n\nvar _ObjectListAdapter = require('./ObjectListAdapter');\n\nvar _ObjectListAdapter2 = _interopRequireDefault(_ObjectListAdapter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.ItemAdapter = _ItemAdapter2['default'];\nexports.ListAdapter = _ListAdapter2['default'];\nexports.EmptyListAdapter = _EmptyListAdapter2['default'];\nexports.ArrayListAdapter = _ArrayListAdapter2['default'];\nexports.MapListAdapter = _MapListAdapter2['default'];\nexports.ObjectListAdapter = _ObjectListAdapter2['default'];\n\n/**\n * Combo-box input component that combines a drop-down list and a single-line\n * editable text box. The set of options for the drop-down list can be\n * controlled dynamically. Selection of multiple items is supported using a\n * tag/pill-style user interface within a simulated text box.\n */\nvar Autosuggest = function (_React$Component) {\n  _inherits(Autosuggest, _React$Component);\n\n  _createClass(Autosuggest, null, [{\n    key: 'defaultInputSelect',\n    value: function defaultInputSelect(input, value, completion) {\n      // https://html.spec.whatwg.org/multipage/forms.html#do-not-apply\n      switch (input.type) {\n        case 'text':\n        case 'search':\n        case 'url':\n        case 'tel':\n        case 'password':\n          // istanbul ignore else\n          if (input.setSelectionRange) {\n            input.setSelectionRange(value.length, completion.length);\n          } else if (input.createTextRange) {\n            // old IE\n            var range = input.createTextRange();\n            range.moveEnd('character', completion.length);\n            range.moveStart('character', value.length);\n            range.select();\n          }\n      }\n    }\n  }]);\n\n  function Autosuggest(props) {\n    var _ref;\n\n    _classCallCheck(this, Autosuggest);\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    /* istanbul ignore next: https://github.com/gotwarlost/istanbul/issues/690#issuecomment-265718617 */\n    var _this = _possibleConstructorReturn(this, (_ref = Autosuggest.__proto__ || Object.getPrototypeOf(Autosuggest)).call.apply(_ref, [this, props].concat(_toConsumableArray(args))));\n\n    _this._itemAdapter = props.itemAdapter || new _ItemAdapter2['default']();\n    _this._itemAdapter.receiveProps(props);\n\n    _this._listAdapter = props.datalistAdapter || _this._getListAdapter(props.datalist);\n    _this._listAdapter.receiveProps(props, _this._itemAdapter);\n\n    var _this$_getValueFromPr = _this._getValueFromProps(props),\n        inputValue = _this$_getValueFromPr.inputValue,\n        inputItem = _this$_getValueFromPr.inputItem,\n        inputItemEphemeral = _this$_getValueFromPr.inputItemEphemeral,\n        selectedItems = _this$_getValueFromPr.selectedItems;\n\n    _this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n    _this._lastValidItem = inputItem;\n    _this._lastValidValue = inputValue;\n    _this._keyPressCount = 0;\n\n    _this.state = {\n      open: false,\n      disableFilter: false,\n      inputValue: inputValue,\n      inputValueKeyPress: 0,\n      inputFocused: false,\n      selectedItems: selectedItems,\n      searchValue: null\n    };\n    _this._lastOnChangeValue = _this._getCurrentValue();\n    _this._lastOnSelectValue = inputItem;\n\n    var self = _this; // https://github.com/facebook/flow/issues/1517\n    self._renderSelected = _this._renderSelected.bind(_this);\n    self._getItemKey = _this._getItemKey.bind(_this);\n    self._isSelectedItem = _this._isSelectedItem.bind(_this);\n    self._renderSuggested = _this._renderSuggested.bind(_this);\n    self._handleToggleClick = _this._handleToggleClick.bind(_this);\n    self._handleInputChange = _this._handleInputChange.bind(_this);\n    self._handleItemSelect = _this._handleItemSelect.bind(_this);\n    self._removeItem = _this._removeItem.bind(_this);\n    self._handleShowAll = _this._handleShowAll.bind(_this);\n    self._handleKeyDown = _this._handleKeyDown.bind(_this);\n    self._handleKeyPress = _this._handleKeyPress.bind(_this);\n    self._handleMenuClose = _this._handleMenuClose.bind(_this);\n    self._handleInputFocus = _this._handleInputFocus.bind(_this);\n    self._handleInputBlur = _this._handleInputBlur.bind(_this);\n    self._handleFocus = _this._handleFocus.bind(_this);\n    self._handleBlur = _this._handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Autosuggest, [{\n    key: '_getListAdapter',\n    value: function _getListAdapter(list) {\n      if (list == null) {\n        return new _EmptyListAdapter2['default']();\n      } else if (Array.isArray(list)) {\n        return new _ArrayListAdapter2['default']();\n      } else if (list instanceof Map) {\n        return new _MapListAdapter2['default']();\n      } else if (typeof list === 'object') {\n        return new _ObjectListAdapter2['default']();\n      } else {\n        throw Error('Unexpected datalist type: datalistAdapter required');\n      }\n    }\n  }, {\n    key: '_getValueFromProps',\n    value: function _getValueFromProps(props) {\n      var inputValue = '';\n      var inputItem = null;\n      var inputItemEphemeral = false;\n      var selectedItems = [];\n      var value = props.value || props.defaultValue;\n      if (value != null) {\n        if (props.multiple) {\n          if (Array.isArray(value)) {\n            selectedItems = this._filterItems(value, props);\n          } else {\n            (0, _warning2['default'])(!value, 'Array expected for value property');\n          }\n        } else if (props.valueIsItem) {\n          var itemValue = this._itemAdapter.getInputValue(value);\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, itemValue);\n            if (inputItem != null) {\n              inputValue = inputItem === value ? itemValue : this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = itemValue;\n              inputItem = value;\n            }\n          } else {\n            inputValue = itemValue;\n            inputItem = value;\n          }\n        } else if (value) {\n          if (props.datalist != null) {\n            inputItem = this._listAdapter.findMatching(props.datalist, value);\n            if (inputItem != null) {\n              inputValue = this._itemAdapter.getInputValue(inputItem);\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(value);\n            } else {\n              inputValue = value.toString();\n              inputItem = this._itemAdapter.newFromValue(value);\n              inputItemEphemeral = true;\n            }\n          } else {\n            inputValue = value.toString();\n            inputItem = this._itemAdapter.newFromValue(value);\n            inputItemEphemeral = true;\n          }\n        }\n      }\n      return { inputValue: inputValue, inputItem: inputItem, inputItemEphemeral: inputItemEphemeral, selectedItems: selectedItems };\n    }\n  }, {\n    key: '_filterItems',\n    value: function _filterItems(items, props) {\n      if (props.datalist != null || !props.allowDuplicates) {\n        var result = [];\n        var valueSet = {};\n        var different = false;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _item = _step.value;\n\n            var _value = this._itemAdapter.getInputValue(_item);\n            if (!props.allowDuplicates && valueSet[_value]) {\n              different = true;\n              continue;\n            }\n            var listItem = this._listAdapter.findMatching(props.datalist, _value);\n            if (listItem != null) {\n              result.push(listItem);\n              valueSet[_value] = true;\n              different = true;\n            } else if (props.datalistOnly && !props.datalistPartial) {\n              this._warnInvalidValue(_value);\n              different = true;\n            } else {\n              result.push(_item);\n              valueSet[_value] = true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator['return']) {\n              _iterator['return']();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (different) {\n          return result;\n        }\n      }\n      return items;\n    }\n  }, {\n    key: '_warnInvalidValue',\n    value: function _warnInvalidValue(value) {\n      (0, _warning2['default'])(false, 'Value \"%s\" does not match any datalist value', value);\n    }\n  }, {\n    key: '_setInputValue',\n    value: function _setInputValue(value, callback) {\n      // track keypress count in state so re-render is forced even if value is\n      // unchanged; this is necessary when typing over the autocompleted range\n      // with matching characters to properly maintain the input selection range\n      this.setState({\n        inputValue: value,\n        inputValueKeyPress: this._keyPressCount\n      }, callback);\n    }\n  }, {\n    key: '_setValueMeta',\n    value: function _setValueMeta(inputItem) {\n      var inputItemEphemeral = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : inputItem != null;\n      var validated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : isValid;\n\n      this._inputItem = inputItem;\n      this._inputItemEphemeral = inputItemEphemeral;\n      this._valueIsValid = isValid;\n      this._valueWasValidated = validated;\n    }\n  }, {\n    key: '_clearInput',\n    value: function _clearInput() {\n      this._setValueMeta(null, false, true, true);\n      this._setInputValue('');\n    }\n  }, {\n    key: '_getValueUsing',\n    value: function _getValueUsing(props, inputValue, inputItem, selectedItems) {\n      return props.multiple ? selectedItems : props.valueIsItem ? inputItem : inputValue;\n    }\n  }, {\n    key: '_getCurrentValue',\n    value: function _getCurrentValue() {\n      return this._getValueUsing(this.props, this.state.inputValue, this._inputItem, this.state.selectedItems);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // IE8 can jump cursor position if not immediately updated to typed value;\n      // for other browsers, we can avoid re-rendering for the auto-complete\n      this._autoCompleteAfterRender = !this.refs.input.setSelectionRange;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.itemAdapter != this.props.itemAdapter) {\n        this._itemAdapter = nextProps.itemAdapter || new _ItemAdapter2['default']();\n      }\n      this._itemAdapter.receiveProps(nextProps);\n\n      if (nextProps.datalist != this.props.datalist || nextProps.datalistAdapter != this.props.datalistAdapter) {\n        if (nextProps.datalistAdapter) {\n          this._listAdapter = nextProps.datalistAdapter;\n        } else {\n          var listAdapter = this._getListAdapter(nextProps.datalist);\n          if (listAdapter.constructor != this._listAdapter.constructor) {\n            this._listAdapter = listAdapter;\n          }\n        }\n      }\n      this._listAdapter.receiveProps(nextProps, this._itemAdapter);\n\n      // if props.value changes (to a value other than the current state), or\n      // validation changes to make state invalid, propagate props.value to state\n      var nextValue = nextProps.value;\n      var inputValue = this.state.inputValue;\n\n      var valueChanged = nextValue !== this.props.value && nextValue !== this._getValueUsing(nextProps, inputValue, this._inputItem, this.state.selectedItems);\n      var inputItem = void 0,\n          inputValueInvalid = void 0,\n          propsValueInvalid = void 0,\n          validateSelected = void 0;\n      if (!valueChanged) {\n        if (nextProps.datalistOnly) {\n          var canValidate = !nextProps.datalistPartial && nextProps.datalist != null;\n          var validationChanged = !this.props.datalistOnly || !nextProps.datalistPartial && this.props.datalistPartial || nextProps.datalist != this.props.datalist;\n          if (inputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, inputValue);\n            if (inputItem == null) {\n              if (!canValidate && !this._inputItemEphemeral) {\n                inputItem = this._inputItem;\n              } else if (this._inputItemEphemeral && nextValue === inputValue) {\n                propsValueInvalid = true;\n              }\n            }\n            inputValueInvalid = inputItem == null && validationChanged;\n            // update metadata but don't reset input value if invalid but focused\n            if (inputValueInvalid && this._focused) {\n              this._setValueMeta(null, false, false, true);\n              if (validationChanged && canValidate && this._lastValidItem != null) {\n                // revalidate last valid item, which will be restored on blur\n                this._lastValidItem = this._listAdapter.findMatching(nextProps.datalist, this._lastValidValue);\n                if (this._lastValidItem == null) {\n                  this._lastValidValue = '';\n                }\n              }\n              inputValueInvalid = false;\n            }\n          } else {\n            inputItem = null;\n            inputValueInvalid = false;\n          }\n          validateSelected = nextProps.multiple && canValidate && validationChanged;\n        }\n        if (nextProps.multiple && !nextProps.allowDuplicates && this.props.allowDuplicates) {\n          validateSelected = true;\n        }\n      }\n      // inputValueInvalid implies !multiple, since inputValue of multiple should\n      // be blank when not focused\n      if (valueChanged || inputValueInvalid) {\n        var inputItemEphemeral = void 0,\n            _selectedItems = void 0;\n        if (propsValueInvalid) {\n          inputValue = '';\n          inputItemEphemeral = false;\n          _selectedItems = [];\n        } else {\n          var _getValueFromProps2 = this._getValueFromProps(nextProps);\n\n          inputValue = _getValueFromProps2.inputValue;\n          inputItem = _getValueFromProps2.inputItem;\n          inputItemEphemeral = _getValueFromProps2.inputItemEphemeral;\n          _selectedItems = _getValueFromProps2.selectedItems;\n        }\n        // if props.value change resolved to current state item, don't reset input\n        if (inputItem !== this._inputItem || !this._focused) {\n          this._setValueMeta(inputItem, inputItemEphemeral, true, true);\n          this._setInputValue(inputValue);\n          this.setState({ selectedItems: _selectedItems });\n          validateSelected = false;\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputValue;\n          // suppress onChange (but not onSelect) if value came from props\n          if (valueChanged) {\n            this._lastOnChangeValue = this._getValueUsing(nextProps, inputValue, inputItem, _selectedItems);\n          }\n        } else if (valueChanged && nextProps.multiple) {\n          this.setState({ selectedItems: _selectedItems });\n        }\n      } else if (inputValue && nextProps.datalist != this.props.datalist && this._focused) {\n        // if datalist changed but value didn't, attempt to autocomplete\n        this._checkAutoComplete(inputValue, nextProps);\n      }\n      if (validateSelected) {\n        var _selectedItems2 = this._filterItems(this.state.selectedItems, nextProps);\n        this.setState({ selectedItems: _selectedItems2 });\n      }\n\n      // open dropdown if datalist message is set while focused\n      if (nextProps.datalistMessage && nextProps.datalistMessage != this.props.datalistMessage && this._focused) {\n        this._open('message', nextProps);\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      var suggestions = this.refs.suggestions;\n\n      this._menuFocusedBeforeUpdate = suggestions && suggestions.isFocused();\n\n      var nextInputValue = nextState.inputValue;\n      if (nextInputValue != this.state.inputValue) {\n        var inputItem = void 0,\n            inputItemEphemeral = void 0,\n            isValid = void 0;\n        if (!this._valueWasValidated) {\n          if (nextInputValue) {\n            inputItem = this._listAdapter.findMatching(nextProps.datalist, nextInputValue);\n            if (inputItem == null && !nextProps.datalistOnly) {\n              inputItem = this._itemAdapter.newFromValue(nextInputValue);\n              inputItemEphemeral = true;\n              isValid = true;\n            } else {\n              inputItemEphemeral = false;\n              isValid = inputItem != null;\n            }\n          } else {\n            inputItem = null;\n            inputItemEphemeral = false;\n            isValid = !nextProps.required;\n          }\n          this._setValueMeta(inputItem, inputItemEphemeral, isValid);\n        } else {\n          inputItem = this._inputItem;\n          isValid = this._valueIsValid;\n        }\n        if (isValid) {\n          this._lastValidItem = inputItem;\n          this._lastValidValue = inputItem && !inputItemEphemeral ? this._itemAdapter.getInputValue(inputItem) : nextInputValue;\n        }\n\n        if (isValid) {\n          var _multiple = nextProps.multiple,\n              _onChange = nextProps.onChange;\n\n          if (!_multiple && _onChange) {\n            var _value2 = this._getValueUsing(nextProps, nextInputValue, inputItem, nextState.selectedItems);\n            if (_value2 !== this._lastOnChangeValue) {\n              this._lastOnChangeValue = _value2;\n              _onChange(_value2);\n            }\n          }\n\n          var _onSelect = nextProps.onSelect;\n\n          if (_onSelect && inputItem !== this._lastOnSelectValue) {\n            this._lastOnSelectValue = inputItem;\n            _onSelect(inputItem);\n          }\n        }\n      }\n\n      var onToggle = nextProps.onToggle;\n\n      if (onToggle && nextState.open != this.state.open) {\n        onToggle(nextState.open);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.open && !prevState.open && this._lastOpenEventType === 'keydown' || this.state.disableFilter && !prevState.disableFilter && this._menuFocusedBeforeUpdate) {\n        this.refs.suggestions.focusFirst();\n      } else if (!this.state.open && prevState.open) {\n        // closed\n        if (this._menuFocusedBeforeUpdate) {\n          this._menuFocusedBeforeUpdate = false;\n          this._focusInput();\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this._focusTimeoutId);\n      this._focusTimeoutId = null;\n      clearTimeout(this._searchTimeoutId);\n      this._searchTimeoutId = null;\n    }\n  }, {\n    key: '_focusInput',\n    value: function _focusInput() {\n      var input = _reactDom2['default'].findDOMNode(this.refs.input);\n      // istanbul ignore else\n      if (input instanceof HTMLElement) {\n        input.focus();\n      }\n    }\n  }, {\n    key: '_open',\n    value: function _open(eventType, props) {\n      this._lastOpenEventType = eventType;\n      var disableFilter = eventType !== 'autocomplete' && this._hasNoOrExactMatch(props);\n      this.setState({ open: true, disableFilter: disableFilter });\n\n      var onSearch = props.onSearch;\n      var _state = this.state,\n          inputValue = _state.inputValue,\n          searchValue = _state.searchValue;\n\n      if (onSearch && searchValue !== inputValue) {\n        this.setState({ searchValue: inputValue });\n        onSearch(inputValue);\n      }\n    }\n  }, {\n    key: '_close',\n    value: function _close() {\n      this.setState({ open: false });\n    }\n  }, {\n    key: '_toggleOpen',\n    value: function _toggleOpen(eventType, props) {\n      if (this.state.open) {\n        this._close();\n      } else {\n        this._open(eventType, props);\n      }\n    }\n  }, {\n    key: '_canOpen',\n    value: function _canOpen() {\n      var datalist = this.props.datalist;\n\n      return datalist == null && this.props.onSearch || !this._listAdapter.isEmpty(datalist) || !!this.props.datalistMessage;\n    }\n  }, {\n    key: '_hasNoOrExactMatch',\n    value: function _hasNoOrExactMatch(props) {\n      var _this2 = this;\n\n      if (this._inputItem != null && !this._inputItemEphemeral) {\n        return true; // exact match\n      }\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n      return this._listAdapter.find(props.datalist, function (item) {\n        return _this2._itemAdapter.itemIncludedByInput(item, foldedValue);\n      }) == null;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var showToggle = this.props.showToggle;\n\n      var toggleCanOpen = this._canOpen();\n      var toggleVisible = showToggle === 'auto' ? toggleCanOpen : showToggle;\n      var classes = {\n        autosuggest: true,\n        open: this.state.open,\n        disabled: this.props.disabled,\n        dropdown: toggleVisible && !this.props.dropup,\n        dropup: toggleVisible && this.props.dropup\n      };\n      return _react2['default'].createElement(\n        'div',\n        {\n          key: 'dropdown',\n          className: (0, _classnames2['default'])(classes),\n          onFocus: this._handleFocus,\n          onBlur: this._handleBlur },\n        this._renderInputGroup(toggleVisible, toggleCanOpen),\n        this._renderMenu()\n      );\n    }\n  }, {\n    key: '_renderInputGroup',\n    value: function _renderInputGroup(toggleVisible, toggleCanOpen) {\n      var addonBefore = this.props.addonBefore ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-addon', key: 'addonBefore' },\n        this.props.addonBefore\n      ) : null;\n\n      var addonAfter = this.props.addonAfter ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-addon', key: 'addonAfter' },\n        this.props.addonAfter\n      ) : null;\n\n      var buttonBefore = this.props.buttonBefore ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-btn' },\n        this.props.buttonBefore\n      ) : null;\n\n      // Bootstrap expects the dropdown toggle to be last,\n      // as it does not reset the right border radius for toggles:\n      // .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle)\n      // { @include border-right-radius(0); }\n      var toggle = toggleVisible && this._renderToggle(toggleCanOpen);\n      var buttonAfter = toggle || this.props.buttonAfter ? _react2['default'].createElement(\n        'span',\n        { className: 'input-group-btn' },\n        this.props.buttonAfter,\n        toggle\n      ) : null;\n\n      var classes = (0, _classnames2['default'])({\n        'input-group': addonBefore || addonAfter || buttonBefore || buttonAfter,\n        'input-group-sm': this.props.bsSize === 'small',\n        'input-group-lg': this.props.bsSize === 'large',\n        'input-group-toggle': !!toggle\n      });\n      return classes ? _react2['default'].createElement(\n        'div',\n        { className: classes, key: 'input-group' },\n        addonBefore,\n        buttonBefore,\n        this._renderChoices(),\n        addonAfter,\n        buttonAfter\n      ) : this._renderChoices();\n    }\n  }, {\n    key: '_renderToggle',\n    value: function _renderToggle(canOpen) {\n      return _react2['default'].createElement(_reactBootstrap.Dropdown.Toggle, {\n        ref: 'toggle',\n        key: 'toggle',\n        id: this.props.toggleId,\n        bsSize: this.props.bsSize,\n        disabled: this.props.disabled || !canOpen,\n        open: this.state.open,\n        onClick: this._handleToggleClick,\n        onKeyDown: this._handleKeyDown });\n    }\n  }, {\n    key: '_renderChoices',\n    value: function _renderChoices() {\n      if (this.props.multiple) {\n        var _props$choicesClass = this.props.choicesClass,\n            ChoicesClass = _props$choicesClass === undefined ? _Choices2['default'] : _props$choicesClass;\n\n        return _react2['default'].createElement(\n          ChoicesClass,\n          { ref: 'choices',\n            autoHeight: !this.props.showToggle && !this.props.addonAfter && !this.props.addonBefore && !this.props.buttonAfter && !this.props.buttonBefore,\n            disabled: this.props.disabled,\n            focused: this.state.inputFocused,\n            inputValue: this.state.inputValue,\n            items: this.state.selectedItems,\n            onKeyPress: this._handleKeyPress,\n            onRemove: this._removeItem,\n            renderItem: this._renderSelected },\n          this._renderInput()\n        );\n      }\n      return this._renderInput();\n    }\n\n    // autobind\n\n  }, {\n    key: '_renderSelected',\n    value: function _renderSelected(item) {\n      return this._itemAdapter.renderSelected(item);\n    }\n  }, {\n    key: '_renderInput',\n    value: function _renderInput() {\n      var formGroup = this.context.$bs_formGroup;\n      var controlId = formGroup && formGroup.controlId;\n      var extraProps = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = Object.keys(this.props)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n\n          if (!Autosuggest.propTypes[key]) {\n            extraProps[key] = this.props[key];\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2['return']) {\n            _iterator2['return']();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var noneSelected = !this.props.multiple || !this.state.selectedItems.length;\n      // set autoComplete off to avoid a redundant browser drop-down menu,\n      // but allow it to be overridden by extra props for auto-fill purposes\n      return _react2['default'].createElement('input', _extends({\n        autoComplete: 'off'\n      }, extraProps, {\n        className: (0, _classnames2['default'])(this.props.className, { 'form-control': !this.props.multiple }),\n        ref: 'input',\n        key: 'input',\n        id: controlId,\n        disabled: this.props.disabled,\n        required: this.props.required && noneSelected,\n        placeholder: noneSelected ? this.props.placeholder : undefined,\n        type: this.props.type,\n        value: this.state.inputValue,\n        onChange: this._handleInputChange,\n        onKeyDown: this._handleKeyDown,\n        onKeyPress: this._handleKeyPress,\n        onFocus: this._handleInputFocus,\n        onBlur: this._handleInputBlur }));\n    }\n  }, {\n    key: '_renderMenu',\n    value: function _renderMenu() {\n      var _this3 = this;\n\n      this._pseudofocusedItem = null;\n      var open = this.state.open;\n\n      if (!open) {\n        return null;\n      }\n      var datalist = this.props.datalist;\n\n      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);\n      this._foldedInputValue = foldedValue;\n      var items = void 0;\n      if (this.state.disableFilter) {\n        items = this._listAdapter.toArray(datalist);\n      } else {\n        items = this._listAdapter.filter(datalist, function (item) {\n          return _this3._itemAdapter.itemIncludedByInput(item, foldedValue) && _this3._allowItem(item);\n        });\n      }\n      items = this._itemAdapter.sortItems(items, foldedValue);\n      var filtered = items.length < this._listAdapter.getLength(datalist);\n      // visually indicate that first item will be selected if Enter is pressed\n      // while the input element is focused (unless multiple and not datalist-only)\n      var focusedIndex = void 0;\n      if (items.length > 0 && this.state.inputFocused && (!this.props.multiple || this.props.datalistOnly)) {\n        this._pseudofocusedItem = items[focusedIndex = 0];\n      }\n      var _props = this.props,\n          _props$suggestionsCla = _props.suggestionsClass,\n          SuggestionsClass = _props$suggestionsCla === undefined ? _Suggestions2['default'] : _props$suggestionsCla,\n          datalistMessage = _props.datalistMessage,\n          onDatalistMessageSelect = _props.onDatalistMessageSelect,\n          toggleId = _props.toggleId;\n\n      return _react2['default'].createElement(SuggestionsClass, { ref: 'suggestions',\n        datalistMessage: datalistMessage,\n        filtered: filtered,\n        focusedIndex: focusedIndex,\n        getItemKey: this._getItemKey,\n        isSelectedItem: this._isSelectedItem,\n        items: items,\n        labelledBy: toggleId,\n        onClose: this._handleMenuClose,\n        onDatalistMessageSelect: onDatalistMessageSelect,\n        onDisableFilter: this._handleShowAll,\n        onSelect: this._handleItemSelect,\n        open: open,\n        renderItem: this._renderSuggested });\n    }\n  }, {\n    key: '_allowItem',\n    value: function _allowItem(item) {\n      var _this4 = this;\n\n      if (this.props.allowDuplicates) {\n        return true;\n      }\n      var value = this._itemAdapter.getInputValue(item);\n      return !this.state.selectedItems.find(function (i) {\n        return _this4._itemAdapter.getInputValue(i) === value;\n      });\n    }\n\n    // autobind\n\n  }, {\n    key: '_getItemKey',\n    value: function _getItemKey(item) {\n      return this._itemAdapter.getReactKey(item);\n    }\n\n    // autobind\n\n  }, {\n    key: '_isSelectedItem',\n    value: function _isSelectedItem(item) {\n      return this._itemAdapter.itemMatchesInput(item, this._foldedInputValue);\n    }\n\n    // autobind\n\n  }, {\n    key: '_renderSuggested',\n    value: function _renderSuggested(item) {\n      return this._itemAdapter.renderSuggested(item);\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleToggleClick',\n    value: function _handleToggleClick() {\n      this._toggleOpen('click', this.props);\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleInputChange',\n    value: function _handleInputChange(event) {\n      var _this5 = this;\n\n      var _ref2 = event.target,\n          value = _ref2.value;\n      // prevent auto-complete on backspace/delete/copy/paste/etc.\n\n      var allowAutoComplete = this._keyPressCount > this.state.inputValueKeyPress;\n      if (allowAutoComplete && value) {\n        if (this._autoCompleteAfterRender) {\n          this._setValueMeta();\n          this._setInputValue(value, function () {\n            _this5._checkAutoComplete(value, _this5.props);\n          });\n        } else if (!this._checkAutoComplete(value, this.props)) {\n          this._setValueMeta();\n          this._setInputValue(value);\n        }\n      } else {\n        this._setValueMeta();\n        this._setInputValue(value);\n      }\n\n      // suppress onSearch if can't auto-complete and not open\n      if (allowAutoComplete || this.state.open) {\n        var _onSearch = this.props.onSearch;\n\n        if (_onSearch) {\n          clearTimeout(this._searchTimeoutId);\n          this._searchTimeoutId = setTimeout(function () {\n            _this5._searchTimeoutId = null;\n            if (value != _this5.state.searchValue) {\n              _this5.setState({ searchValue: value });\n              _onSearch(value);\n            }\n          }, this.props.searchDebounce);\n        }\n      }\n    }\n  }, {\n    key: '_checkAutoComplete',\n    value: function _checkAutoComplete(value, props) {\n      var _this6 = this;\n\n      // open dropdown if any items would be included\n      var valueUpdated = false;\n      var datalist = props.datalist;\n\n      var foldedValue = this._itemAdapter.foldValue(value);\n      var includedItems = this._listAdapter.filter(datalist, function (i) {\n        return _this6._itemAdapter.itemIncludedByInput(i, foldedValue) && _this6._allowItem(i);\n      });\n      if (includedItems.length > 0) {\n        // if only one item is included and the value must come from the list,\n        // autocomplete using that item\n        var _datalistOnly = props.datalistOnly,\n            _datalistPartial = props.datalistPartial;\n\n        if (includedItems.length === 1 && _datalistOnly && !_datalistPartial) {\n          var found = includedItems[0];\n          var foundValue = this._itemAdapter.getInputValue(found);\n          var callback = void 0;\n          var _inputSelect = props.inputSelect;\n\n          if (value != foundValue && _inputSelect && this._itemAdapter.foldValue(foundValue).startsWith(foldedValue)) {\n            var _input = this.refs.input;\n            callback = function callback() {\n              _inputSelect(_input, value, foundValue);\n            };\n          }\n          this._setValueMeta(found);\n          this._setInputValue(foundValue, callback);\n          valueUpdated = true;\n          if (this.state.open ? props.closeOnCompletion : value != foundValue && !props.closeOnCompletion) {\n            this._toggleOpen('autocomplete', props);\n          }\n        } else {\n          // otherwise, just check if any values match, and select the first one\n          // (without modifying the input value)\n          var _found = includedItems.find(function (i) {\n            return _this6._itemAdapter.itemMatchesInput(i, foldedValue);\n          });\n          if (_found) {\n            this._setValueMeta(_found);\n            this._setInputValue(value);\n            valueUpdated = true;\n          }\n          // open dropdown unless exactly one matching value was found\n          if (!this.state.open && (!_found || includedItems.length > 1)) {\n            this._open('autocomplete', props);\n          }\n        }\n      }\n      return valueUpdated;\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleItemSelect',\n    value: function _handleItemSelect(item) {\n      if (this.props.multiple) {\n        this._addItem(item);\n      } else {\n        var itemValue = this._itemAdapter.getInputValue(item);\n        this._setValueMeta(item);\n        this._setInputValue(itemValue);\n      }\n      this._close();\n    }\n  }, {\n    key: '_addItem',\n    value: function _addItem(item) {\n      if (this._allowItem(item)) {\n        var _selectedItems3 = [].concat(_toConsumableArray(this.state.selectedItems), [item]);\n        this.setState({ selectedItems: _selectedItems3 });\n        var _props2 = this.props,\n            _onAdd = _props2.onAdd,\n            _onChange2 = _props2.onChange;\n\n        if (_onAdd) {\n          _onAdd(item);\n        }\n        if (_onChange2) {\n          _onChange2(_selectedItems3);\n        }\n      }\n      this._clearInput();\n      if (this.state.open) {\n        this._close();\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_removeItem',\n    value: function _removeItem(index) {\n      var previousItems = this.state.selectedItems;\n      var selectedItems = previousItems.slice(0, index).concat(previousItems.slice(index + 1));\n      this.setState({ selectedItems: selectedItems });\n      var _props3 = this.props,\n          onRemove = _props3.onRemove,\n          onChange = _props3.onChange;\n\n      if (onRemove) {\n        onRemove(index);\n      }\n      if (onChange) {\n        onChange(selectedItems);\n      }\n    }\n  }, {\n    key: '_addInputValue',\n    value: function _addInputValue() {\n      if (this._inputItem) {\n        this._addItem(this._inputItem);\n        return true;\n      }\n      return false;\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleShowAll',\n    value: function _handleShowAll() {\n      this.setState({ disableFilter: true });\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleKeyDown',\n    value: function _handleKeyDown(event) {\n      if (this.props.disabled) return;\n\n      switch (event.keyCode || event.which) {\n        case _keycode2['default'].codes.down:\n        case _keycode2['default'].codes['page down']:\n          if (this.state.open) {\n            this.refs.suggestions.focusFirst();\n          } else if (this._canOpen()) {\n            this._open('keydown', this.props);\n          }\n          event.preventDefault();\n          break;\n        case _keycode2['default'].codes.left:\n        case _keycode2['default'].codes.backspace:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === 0) {\n            this.refs.choices.focusLast();\n            event.preventDefault();\n          }\n          break;\n        case _keycode2['default'].codes.right:\n          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === this.state.inputValue.length) {\n            this.refs.choices.focusFirst();\n            event.preventDefault();\n          }\n          break;\n        case _keycode2['default'].codes.enter:\n          if (this.props.multiple && this.state.inputValue) {\n            event.preventDefault();\n            if (this._addInputValue()) {\n              break;\n            }\n          }\n          if (this.state.open && this.state.inputFocused) {\n            event.preventDefault();\n            if (this._pseudofocusedItem) {\n              this._handleItemSelect(this._pseudofocusedItem);\n            } else {\n              this._close();\n            }\n          }\n          break;\n        case _keycode2['default'].codes.esc:\n        case _keycode2['default'].codes.tab:\n          this._handleMenuClose(event);\n          break;\n      }\n    }\n  }, {\n    key: '_getCursorPosition',\n    value: function _getCursorPosition(input) {\n      var inputNode = _reactDom2['default'].findDOMNode(input);\n      // istanbul ignore else\n      if (inputNode instanceof HTMLInputElement) {\n        return inputNode.selectionStart;\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleKeyPress',\n    value: function _handleKeyPress() {\n      ++this._keyPressCount;\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleMenuClose',\n    value: function _handleMenuClose() {\n      if (this.state.open) {\n        this._close();\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleInputFocus',\n    value: function _handleInputFocus() {\n      this.setState({ inputFocused: true });\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleInputBlur',\n    value: function _handleInputBlur() {\n      this.setState({ inputFocused: false });\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleFocus',\n    value: function _handleFocus() {\n      if (this._focusTimeoutId) {\n        clearTimeout(this._focusTimeoutId);\n        this._focusTimeoutId = null;\n      } else {\n        this._focused = true;\n        var _onFocus = this.props.onFocus;\n\n        if (_onFocus) {\n          var _value3 = this._getCurrentValue();\n          _onFocus(_value3);\n        }\n      }\n    }\n\n    // autobind\n\n  }, {\n    key: '_handleBlur',\n    value: function _handleBlur() {\n      var _this7 = this;\n\n      this._focusTimeoutId = setTimeout(function () {\n        _this7._focusTimeoutId = null;\n        _this7._focused = false;\n        var inputValue = _this7.state.inputValue;\n        var onBlur = _this7.props.onBlur;\n\n        if (_this7.props.multiple) {\n          if (inputValue && !_this7._addInputValue()) {\n            _this7._clearInput();\n          }\n        } else if (inputValue != _this7._lastValidValue) {\n          // invoke onBlur after state change, rather than immediately\n          var callback = void 0;\n          if (onBlur) {\n            callback = function callback() {\n              var value = _this7._getCurrentValue();\n              onBlur(value);\n            };\n          }\n          // restore last valid value/item\n          _this7._setValueMeta(_this7._lastValidItem, false, true, true);\n          _this7._setInputValue(_this7._lastValidValue, callback);\n          return;\n        }\n        if (onBlur) {\n          var _value4 = _this7._getCurrentValue();\n          onBlur(_value4);\n        }\n      }, 1);\n    }\n  }]);\n\n  return Autosuggest;\n}(_react2['default'].Component);\n\nAutosuggest.propTypes = {\n  /**\n   * Text or component appearing in the input group after the input element\n   * (and before any button specified in `buttonAfter`).\n   */\n  addonAfter: _propTypes2['default'].node,\n  /**\n    * Text or component appearing in the input group before the input element\n    * (and before any button specified in `buttonBefore`).\n    */\n  addonBefore: _propTypes2['default'].node,\n  /**\n   * Indicates whether duplicate values are allowed in `multiple` mode.\n   */\n  allowDuplicates: _propTypes2['default'].bool,\n  /**\n   * Specifies the size of the form group and its contained components.\n   * Leave undefined for normal/medium size.\n   */\n  bsSize: _propTypes2['default'].oneOf(['small', 'large']),\n  /**\n   * Button component appearing in the input group after the input element\n   * (and after any add-on specified in `addonAfter`).\n   */\n  buttonAfter: _propTypes2['default'].node,\n  /**\n   * Button component appearing in the input group before the input element\n   * (and after any add-on specified in `addonBefore`).\n   */\n  buttonBefore: _propTypes2['default'].node,\n  /**\n   * React component class used to render the selected items in multiple mode.\n   */\n  choicesClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n  /**\n   * Indicates whether the drop-down menu should be closed automatically when\n   * auto-completion occurs. By default, the menu will remain open, so the\n   * user can see any additional information about the selected item (such as\n   * a shorthand code that caused it to be selected).\n   */\n  closeOnCompletion: _propTypes2['default'].bool,\n  /**\n   * A collection of items (such as an array, object, or Map) used as\n   * auto-complete suggestions. Each item may have any type supported by the\n   * `itemAdapter`. The default item adapter has basic support for any\n   * non-null type: it will initially try to access item properties using the\n   * configured property names (`itemReactKeyPropName`, `itemSortKeyPropName`,\n   * and `itemValuePropName`), but will fall back to using the `toString`\n   * method to obtain these properties to support primitives and other object\n   * types.\n   *\n   * If `datalist` is undefined or null and `onSearch` is not, the datalist\n   * is assumed to be dynamically populated, and the drop-down toggle will be\n   * enabled and will trigger `onSearch` the first time it is clicked.\n   * Conversely, an empty `datalist` or undefined/null `onSearch` indicates\n   * that there are no auto-complete options.\n   */\n  datalist: _propTypes2['default'].any,\n  /**\n   * An instance of the ListAdapter class that provides datalist access\n   * methods required by this component.\n   */\n  datalistAdapter: _propTypes2['default'].object,\n  /**\n   * Message to be displayed at the end of the datalist. It can be used to\n   * indicate that data is being fetched asynchronously, that an error\n   * occurred fetching data, or that additional options can be requested.\n   * It behaves similarly to a menu item, except that it is not filtered or\n   * sorted and cannot be selected (except to invoke `onDatalistMessageSelect`).\n   * Changing this property to a different non-null value while the component\n   * is focused causes the drop-down menu to be opened, which is useful for\n   * reporting status, such as that options are being fetched or failed to be\n   * fetched.\n   */\n  datalistMessage: _propTypes2['default'].node,\n  /**\n   * Indicates that only values matching an item from the `datalist` property\n   * are considered valid. For search purposes, intermediate values of the\n   * underlying `input` element may not match while the component is focused,\n   * but any non-matching value will be replaced with the previous matching\n   * value when the component loses focus.\n   *\n   * Note that there are two cases where the current (valid) value may not\n   * correspond to an item in the datalist:\n   *\n   * - If the value was provided by the `value` or `defaultValue` property\n   *   and either `datalist` is undefined/null (as opposed to empty) or\n   *   `datalistPartial` is true, the value is assumed to be valid.\n   * - If `datalist` changes and `datalistPartial` is true, any previously\n   *   valid value is assumed to remain valid. (Conversely, if `datalist`\n   *   changes and `datalistPartial` is false, a previously valid value will\n   *   be invalidated if not in the new `datalist`.)\n   */\n  datalistOnly: _propTypes2['default'].bool,\n  /**\n   * Indicates that the `datalist` property should be considered incomplete\n   * for validation purposes. Specifically, if both `datalistPartial` and\n   * `datalistOnly` are true, changes to the `datalist` will not render\n   * invalid a value that was previously valid. This is useful in cases where\n   * a partial datalist is obtained dynamically in response to the `onSearch`\n   * callback.\n   */\n  datalistPartial: _propTypes2['default'].bool,\n  /**\n   * Initial value to be rendered when used as an\n   * [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components)\n   * (i.e. no `value` property is supplied).\n   */\n  defaultValue: _propTypes2['default'].any,\n  /**\n   * Indicates whether the form group is disabled, which causes all of its\n   * contained elements to ignore input and focus events and to be displayed\n   * grayed out.\n   */\n  disabled: _propTypes2['default'].bool,\n  /**\n   * Indicates whether the suggestion list should drop up instead of down.\n   *\n   * Note that currently a drop-up list extending past the top of the page is\n   * clipped, rendering the clipped items inaccessible, whereas a drop-down\n   * list will extend the page and allow scrolling as necessary.\n   */\n  dropup: _propTypes2['default'].bool,\n  /**\n   * Custom class name applied to the input group.\n   */\n  groupClassName: _propTypes2['default'].string,\n  /**\n   * Function used to select a portion of the input value when auto-completion\n   * occurs. The default implementation selects just the auto-completed\n   * portion, which is equivalent to:\n   *\n   * ```js\n   *   defaultInputSelect(input, value, completion) {\n   *     input.setSelectionRange(value.length, completion.length)\n   *   }\n   * ```\n   */\n  inputSelect: _propTypes2['default'].func,\n  /**\n   * An instance of the ItemAdapter class that provides the item access\n   * methods required by this component.\n   */\n  itemAdapter: _propTypes2['default'].object,\n  /**\n   * Name of the item property used for the React component key. If this\n   * property is not defined, `itemValuePropName` is used instead. If neither\n   * property is defined, `toString()` is called on the item.\n   */\n  itemReactKeyPropName: _propTypes2['default'].string,\n  /**\n   * Name of the item property used for sorting items. If this property is not\n   * defined, `itemValuePropName` is used instead. If neither property is\n   * defined, `toString()` is called on the item.\n   */\n  itemSortKeyPropName: _propTypes2['default'].string,\n  /**\n   * Name of item property used for the input element value. If this property\n   * is not defined, `toString()` is called on the item.\n   */\n  itemValuePropName: _propTypes2['default'].string,\n  /**\n   * Enables selection of multiple items. The value property should be an\n   * array of items.\n   */\n  multiple: _propTypes2['default'].bool,\n  /**\n   * Callback function called whenever a new value should be appended to the\n   * array of values in `multiple` mode. The sole argument is the added item.\n   */\n  onAdd: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input focus leaves this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onBlur: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input value changes to a different\n   * valid value. Validity depends on properties such as `datalistOnly`,\n   * `valueIsItem`, and `required`. The sole argument is current value:\n   *\n   * - If `multiple` is enabled, the current value is an array of selected\n   *   items.\n   * - If `valueIsItem` is enabled, the current value is the selected\n   *   datalist item.\n   * - Otherwise, the current value is the `input` element value. Note that\n   *   if `datalistOnly` or `required` are enabled, only valid values trigger\n   *   a callback.\n   */\n  onChange: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the datalist item created for\n   * `datalistMessage` is selected. If this property is null, the associated\n   * item is displayed as disabled.\n   */\n  onDatalistMessageSelect: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the input focus enters this component.\n   * The sole argument is current value (see `onChange for details`).\n   */\n  onFocus: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever a value should be removed from the\n   * array of values in `multiple` mode. The sole argument is the index of\n   * the value to remove.\n   */\n  onRemove: _propTypes2['default'].func,\n  /**\n   * Callback function called periodically when the `input` element value has\n   * changed. The sole argument is the current value of the `input` element.\n   * This callback can be used to dynamically populate the `datalist` based on\n   * the input value so far, e.g. with values obtained from a remote service.\n   * Once changed, the value must then remain unchanged for `searchDebounce`\n   * milliseconds before the function will be called. No two consecutive\n   * invocations of the function will be passed the same value (i.e. changing\n   * and then restoring the value within the debounce interval is not\n   * considered a change). Note also that the callback can be invoked with an\n   * empty string, if the user clears the `input` element; this implies that\n   * any minimum search string length should be imposed by the function.\n   */\n  onSearch: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever an item from the suggestion list is\n   * selected (regardless of whether it is clicked or typed). The sole\n   * argument is the selected item.\n   */\n  onSelect: _propTypes2['default'].func,\n  /**\n   * Callback function called whenever the drop-down list of suggestions is\n   * opened or closed. The sole argument is a boolean value indicating whether\n   * the list is open.\n   */\n  onToggle: _propTypes2['default'].func,\n  /**\n   * Placeholder text propagated to the underlying `input` element (when\n   * `multiple` is false or no items have been selected).\n   */\n  placeholder: _propTypes2['default'].string,\n  /**\n   * `required` property passed to the `input` element (when `multiple` is\n   * false or no items have been selected).\n   */\n  required: _propTypes2['default'].bool,\n  /**\n   * The number of milliseconds that must elapse between the last change to\n   * the `input` element value and a call to `onSearch`. The default is 250.\n   */\n  searchDebounce: _propTypes2['default'].number,\n  /**\n   * Indicates whether to show the drop-down toggle. If set to `auto`, the\n   * toggle is shown only when the `datalist` is non-empty or dynamic.\n   */\n  showToggle: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].oneOf(['auto'])]),\n  /**\n   * React component class used to render the drop-down list of suggestions.\n   */\n  suggestionsClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),\n  /**\n   * ID supplied to the drop-down toggle and used by the drop-down menu to\n   * refer to it.\n   */\n  toggleId: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n  /**\n   * `type` property supplied to the contained `input` element. Only textual\n   * types should be specified, such as `text`, `search`, `email`, `tel`, or\n   * perhaps `number`. Note that the browser may supply additional UI elements\n   * for some types (e.g. increment/decrement buttons for `number`) that may\n   * need additional styling or may interfere with UI elements supplied by\n   * this component.\n   */\n  type: _propTypes2['default'].string,\n  /**\n   * The value to be rendered by the component. If unspecified, the component\n   * behaves like an [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components).\n   */\n  value: _propTypes2['default'].any,\n  /**\n   * Indicates that the `value` property should be interpreted as a datalist\n   * item, as opposed to the string value of the underlying `input` element.\n   * When false (the default), the `value` property (if specified) is\n   * expected to be a string and corresponds (indirectly) to the `value`\n   * property of the underlying `input` element. When true, the `value`\n   * property is expected to be a datalist item whose display value (as\n   * provided by the `itemAdapter`) is used as the `input` element value.\n   * This property also determines whether the argument to the `onChange`\n   * callback is the `input` value or a datalist item.\n   *\n   * Note that unless `datalistOnly` is also true, items may also be created\n   * dynamically using the `newFromValue` method of the `itemAdapter`.\n   *\n   * Also note that this property is ignored if `multiple` is true; in that\n   * case, the `value` property and `onChange` callback argument are\n   * implicitly an array of datalist items.\n   */\n  valueIsItem: _propTypes2['default'].bool\n};\nAutosuggest.contextTypes = {\n  $bs_formGroup: _propTypes2['default'].object\n};\nAutosuggest.defaultProps = {\n  closeOnCompletion: false,\n  datalistOnly: false,\n  datalistPartial: false,\n  disabled: false,\n  dropup: false,\n  inputSelect: Autosuggest.defaultInputSelect,\n  multiple: false,\n  itemReactKeyPropName: 'key',\n  itemSortKeyPropName: 'sortKey',\n  itemValuePropName: 'value',\n  searchDebounce: 250,\n  showToggle: 'auto',\n  type: 'text',\n  valueIsItem: false\n};\nexports['default'] = Autosuggest;"],"mappings":"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AErE,WAAW,CAAC,SAAS,CAAC,CAACmW,MAAM;EAC9C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACExL,eAAe,EAAE3K,WAAW,CAAC,SAAS,CAAC,CAAC4V,IAAI;EAC5C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEtO,YAAY,EAAEtH,WAAW,CAAC,SAAS,CAAC,CAAC6V,IAAI;EACzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEtO,eAAe,EAAEvH,WAAW,CAAC,SAAS,CAAC,CAAC6V,IAAI;EAC5C;AACF;AACA;AACA;AACA;EACE9O,YAAY,EAAE/G,WAAW,CAAC,SAAS,CAAC,CAACkW,GAAG;EACxC;AACF;AACA;AACA;AACA;EACErI,QAAQ,EAAE7N,WAAW,CAAC,SAAS,CAAC,CAAC6V,IAAI;EACrC;AACF;AACA;AACA;AACA;AACA;AACA;EACE9H,MAAM,EAAE/N,WAAW,CAAC,SAAS,CAAC,CAAC6V,IAAI;EACnC;AACF;AACA;EACEO,cAAc,EAAEpW,WAAW,CAAC,SAAS,CAAC,CAACiW,MAAM;EAC7C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE3C,WAAW,EAAEtT,WAAW,CAAC,SAAS,CAAC,CAACgW,IAAI;EACxC;AACF;AACA;AACA;EACE9R,WAAW,EAAElE,WAAW,CAAC,SAAS,CAAC,CAACmW,MAAM;EAC1C;AACF;AACA;AACA;AACA;EACEE,oBAAoB,EAAErW,WAAW,CAAC,SAAS,CAAC,CAACiW,MAAM;EACnD;AACF;AACA;AACA;AACA;EACEK,mBAAmB,EAAEtW,WAAW,CAAC,SAAS,CAAC,CAACiW,MAAM;EAClD;AACF;AACA;AACA;EACEM,iBAAiB,EAAEvW,WAAW,CAAC,SAAS,CAAC,CAACiW,MAAM;EAChD;AACF;AACA;AACA;EACEjP,QAAQ,EAAEhH,WAAW,CAAC,SAAS,CAAC,CAAC6V,IAAI;EACrC;AACF;AACA;AACA;EACE9B,KAAK,EA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"},"metadata":{},"sourceType":"script"}