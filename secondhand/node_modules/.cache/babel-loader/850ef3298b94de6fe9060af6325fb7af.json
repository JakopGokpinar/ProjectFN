{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/SearchedResultPage/SearchResult.js\";\nimport React from \"react\";\nimport \"./SearchResult.css\";\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\nimport { instanceAxs } from \"../../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSortingCategory = value => {\n      var finalArray = this.state.items;\n\n      if (value === \"price_desc\") {\n        let priceDescArray = [].concat(finalArray).sort((a, b) => a.price > b.price ? 1 : -1);\n        finalArray = priceDescArray;\n      } else if (value === \"price_asc\") {\n        let priceAscArray = [].concat(finalArray).sort((a, b) => a.price < b.price ? 1 : -1);\n        finalArray = priceAscArray;\n      } else if (value === \"published\") {\n        let publishArray = [].concat(finalArray).sort((a, b) => a.date < b.date ? 1 : -1);\n        finalArray = publishArray;\n      }\n\n      this.setState({\n        items: finalArray\n      });\n    };\n\n    this.getFiltersOnMount = () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      var params = [];\n\n      for (const [key, value] of urlParams) {\n        var filter = {};\n\n        switch (key) {\n          case 'q':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: undefined,\n              tagValue: undefined\n            };\n            params.push(filter);\n            break;\n\n          case 'price_max':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"maxPrice\",\n              tagValue: `til ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'price_min':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"minPrice\",\n              tagValue: `fra ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'status':\n            if (value === \"new\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusNew\",\n                tagValue: \"Nytt\"\n              };\n            } else if (value === \"used\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusUsed\",\n                tagValue: \"Brukt\"\n              };\n            }\n\n            params.push(filter);\n            break;\n\n          case 'published':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: key,\n              tagValue: value\n            };\n            params.push(filter);\n            break;\n\n          default:\n        }\n      }\n\n      this.setState({\n        filters: params\n      });\n      return params;\n    };\n\n    this.makeSearch = () => {\n      this.searchAlgorithm(this.state.filters);\n    };\n\n    this.searchAlgorithm = filters => {\n      let queryString = this.returnQueryString(filters); // let query = `/file/getmenuitems?${queryString}`;\n\n      let query2 = '/searchproduct?q=a';\n      instanceAxs.get(query2).then(response => {\n        console.log(\"Search response\", response.data);\n\n        if (response.status === 200) {\n          const productArray = response.data.productArray;\n          this.setState({\n            productArray\n          });\n          window.history.pushState(\"page2\", \"seach made\", `/search?${queryString}`);\n        } else {\n          console.log(response.data.message);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      productArray: [],\n      urlParams: new URLSearchParams(props.location.search),\n      filters: [{\n        queryKey: \"q\",\n        queryValue: new URLSearchParams(props.location.search).get(\"q\")\n      }]\n    };\n  }\n\n  returnQueryString(filters) {\n    var queryString = \"\";\n\n    for (const filter of filters) {\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\n    }\n\n    if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1);\n    return queryString;\n  }\n\n  componentDidMount() {\n    let params = this.getFiltersOnMount();\n    this.searchAlgorithm(params);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" \",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.makeSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"biler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), this.state.productArray.map(item => {\n        return /*#__PURE__*/_jsxDEV(ProductCard, {\n          img: item.annonceImages,\n          name: item.title,\n          location: item.location,\n          price: item.price,\n          id: item._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukth√•nd/secondhand/src/Pages/SearchedResultPage/SearchResult.js"],"names":["React","ProductCard","instanceAxs","SearchResult","Component","constructor","props","setSortingCategory","value","finalArray","state","items","priceDescArray","concat","sort","a","b","price","priceAscArray","publishArray","date","setState","getFiltersOnMount","urlParams","URLSearchParams","window","location","search","params","key","filter","queryKey","queryValue","tagKey","undefined","tagValue","push","filters","makeSearch","searchAlgorithm","queryString","returnQueryString","query2","get","then","response","console","log","data","status","productArray","history","pushState","message","catch","err","length","slice","componentDidMount","render","map","item","annonceImages","title","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,kBAdmB,GAcGC,KAAD,IAAW;AAC9B,UAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,KAA5B;;AAEA,UAAGH,KAAK,KAAK,YAAb,EAA2B;AACzB,YAAII,cAAc,GAAG,GAAGC,MAAH,CAAUJ,UAAV,EACrBK,IADqB,CAChB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADnB,CAArB;AAEAR,QAAAA,UAAU,GAAGG,cAAb;AACD,OAJD,MAIO,IAAGJ,KAAK,KAAK,WAAb,EAA0B;AAC/B,YAAIU,aAAa,GAAG,GAAGL,MAAH,CAAUJ,UAAV,EACrBK,IADqB,CAChB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADnB,CAApB;AAEAR,QAAAA,UAAU,GAAGS,aAAb;AACD,OAJM,MAIA,IAAGV,KAAK,KAAK,WAAb,EAA0B;AAC/B,YAAIW,YAAY,GAAG,GAAGN,MAAH,CAAUJ,UAAV,EACpBK,IADoB,CACf,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,IAAF,GAASJ,CAAC,CAACI,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CADlB,CAAnB;AAEAX,QAAAA,UAAU,GAAGU,YAAb;AACD;;AAED,WAAKE,QAAL,CAAc;AACZV,QAAAA,KAAK,EAAEF;AADK,OAAd;AAGD,KAlCkB;;AAAA,SAoCnBa,iBApCmB,GAoCC,MAAM;AACxB,UAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAhB;AAEA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,MAAM,CAACC,GAAD,EAAMrB,KAAN,CAAX,IAA2Be,SAA3B,EAAsC;AACpC,YAAIO,MAAM,GAAG,EAAb;;AAEA,gBAAOD,GAAP;AACE,eAAK,GAAL;AACEC,YAAAA,MAAM,GAAG;AACPC,cAAAA,QAAQ,EAAEF,GADH;AAEPG,cAAAA,UAAU,EAAExB,KAFL;AAGPyB,cAAAA,MAAM,EAAEC,SAHD;AAIPC,cAAAA,QAAQ,EAAED;AAJH,aAAT;AAMAN,YAAAA,MAAM,CAACQ,IAAP,CAAYN,MAAZ;AACA;;AACF,eAAK,WAAL;AACEA,YAAAA,MAAM,GAAG;AACPC,cAAAA,QAAQ,EAAEF,GADH;AAEPG,cAAAA,UAAU,EAAExB,KAFL;AAGPyB,cAAAA,MAAM,EAAE,UAHD;AAIPE,cAAAA,QAAQ,EAAG,OAAM3B,KAAM;AAJhB,aAAT;AAMAoB,YAAAA,MAAM,CAACQ,IAAP,CAAYN,MAAZ;AACA;;AACF,eAAK,WAAL;AACEA,YAAAA,MAAM,GAAG;AACPC,cAAAA,QAAQ,EAAEF,GADH;AAEPG,cAAAA,UAAU,EAAExB,KAFL;AAGPyB,cAAAA,MAAM,EAAE,UAHD;AAIPE,cAAAA,QAAQ,EAAG,OAAM3B,KAAM;AAJhB,aAAT;AAMAoB,YAAAA,MAAM,CAACQ,IAAP,CAAYN,MAAZ;AACA;;AACF,eAAK,QAAL;AACE,gBAAGtB,KAAK,KAAK,KAAb,EAAoB;AAClBsB,cAAAA,MAAM,GAAG;AACPC,gBAAAA,QAAQ,EAAEF,GADH;AAEPG,gBAAAA,UAAU,EAAExB,KAFL;AAGPyB,gBAAAA,MAAM,EAAE,WAHD;AAIPE,gBAAAA,QAAQ,EAAE;AAJH,eAAT;AAMD,aAPD,MAOO,IAAG3B,KAAK,KAAK,MAAb,EAAqB;AAC1BsB,cAAAA,MAAM,GAAG;AACPC,gBAAAA,QAAQ,EAAEF,GADH;AAEPG,gBAAAA,UAAU,EAAExB,KAFL;AAGPyB,gBAAAA,MAAM,EAAE,YAHD;AAIPE,gBAAAA,QAAQ,EAAE;AAJH,eAAT;AAMD;;AACDP,YAAAA,MAAM,CAACQ,IAAP,CAAYN,MAAZ;AACA;;AACF,eAAK,WAAL;AACEA,YAAAA,MAAM,GAAG;AACPC,cAAAA,QAAQ,EAAGF,GADJ;AAEPG,cAAAA,UAAU,EAAExB,KAFL;AAGPyB,cAAAA,MAAM,EAAEJ,GAHD;AAIPM,cAAAA,QAAQ,EAAE3B;AAJH,aAAT;AAMAoB,YAAAA,MAAM,CAACQ,IAAP,CAAYN,MAAZ;AACA;;AACF;AAvDF;AA0DD;;AACD,WAAKT,QAAL,CAAc;AACZgB,QAAAA,OAAO,EAAET;AADG,OAAd;AAGA,aAAOA,MAAP;AACD,KA1GkB;;AAAA,SA4GnBU,UA5GmB,GA4GN,MAAM;AACf,WAAKC,eAAL,CAAqB,KAAK7B,KAAL,CAAW2B,OAAhC;AACH,KA9GkB;;AAAA,SA2HnBE,eA3HmB,GA2HAF,OAAD,IAAa;AAE7B,UAAIG,WAAW,GAAG,KAAKC,iBAAL,CAAuBJ,OAAvB,CAAlB,CAF6B,CAG7B;;AACA,UAAIK,MAAM,GAAG,oBAAb;AACAxC,MAAAA,WAAW,CACRyC,GADH,CACOD,MADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAAQ,CAACG,IAAxC;;AACA,YAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,gBAAMC,YAAY,GAAGL,QAAQ,CAACG,IAAT,CAAcE,YAAnC;AACA,eAAK7B,QAAL,CAAc;AAAE6B,YAAAA;AAAF,WAAd;AACAzB,UAAAA,MAAM,CAAC0B,OAAP,CAAeC,SAAf,CAAyB,OAAzB,EAAkC,YAAlC,EAAiD,WAAUZ,WAAY,EAAvE;AACD,SAJD,MAIO;AACLM,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcK,OAA1B;AACD;AACF,OAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACD,OAdH;AAeD,KA/IkB;;AAEjB,SAAK7C,KAAL,GAAa;AACXwC,MAAAA,YAAY,EAAE,EADH;AAEX3B,MAAAA,SAAS,EAAE,IAAIC,eAAJ,CAAoBlB,KAAK,CAACoB,QAAN,CAAeC,MAAnC,CAFA;AAGXU,MAAAA,OAAO,EAAE,CACP;AACEN,QAAAA,QAAQ,EAAE,GADZ;AAEEC,QAAAA,UAAU,EAAE,IAAIR,eAAJ,CAAoBlB,KAAK,CAACoB,QAAN,CAAeC,MAAnC,EAA2CgB,GAA3C,CAA+C,GAA/C;AAFd,OADO;AAHE,KAAb;AAUD;;AAoGDF,EAAAA,iBAAiB,CAACJ,OAAD,EAAU;AACzB,QAAIG,WAAW,GAAG,EAAlB;;AACA,SAAK,MAAMV,MAAX,IAAqBO,OAArB,EAA8B;AAC5BG,MAAAA,WAAW,IAAK,GAAEV,MAAM,CAACC,QAAS,IAAGD,MAAM,CAACE,UAAW,GAAvD;AACD;;AACD,QAAIQ,WAAW,CAACA,WAAW,CAACgB,MAAZ,GAAqB,CAAtB,CAAX,KAAwC,GAA5C,EACEhB,WAAW,GAAGA,WAAW,CAACiB,KAAZ,CAAkB,CAAlB,EAAqBjB,WAAW,CAACgB,MAAZ,GAAqB,CAA1C,CAAd;AAEF,WAAOhB,WAAP;AACD;;AAwBDkB,EAAAA,iBAAiB,GAAG;AAClB,QAAI9B,MAAM,GAAG,KAAKN,iBAAL,EAAb;AACA,SAAKiB,eAAL,CAAqBX,MAArB;AACD;;AAEA+B,EAAAA,MAAM,GAAG;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,GAAf;AAAA,8BACI;AAAS,QAAA,OAAO,EAAE,KAAKrB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,YAAY,EAAC,EAArB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ,EAOK,KAAK5B,KAAL,CAAWwC,YAAX,CAAwBU,GAAxB,CAA4BC,IAAI,IAAI;AACnC,4BACE,QAAC,WAAD;AACE,UAAA,GAAG,EAAIA,IAAI,CAACC,aADd;AAEE,UAAA,IAAI,EAAED,IAAI,CAACE,KAFb;AAGE,UAAA,QAAQ,EAAEF,IAAI,CAACnC,QAHjB;AAIE,UAAA,KAAK,EAAEmC,IAAI,CAAC5C,KAJd;AAKE,UAAA,EAAE,EAAE4C,IAAI,CAACG;AALX;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA7KwC;;AAgL3C,eAAe7D,YAAf","sourcesContent":["import React from \"react\";\r\nimport \"./SearchResult.css\";\r\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\r\nimport { instanceAxs } from \"../../config/api\";\r\n\r\n\r\nclass SearchResult extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productArray: [],\r\n      urlParams: new URLSearchParams(props.location.search),\r\n      filters: [\r\n        {\r\n          queryKey: \"q\",\r\n          queryValue: new URLSearchParams(props.location.search).get(\"q\"),\r\n        }\r\n      ],\r\n    };\r\n  }\r\n\r\n  setSortingCategory = (value) => {\r\n    var finalArray = this.state.items;\r\n\r\n    if(value === \"price_desc\") {\r\n      let priceDescArray = [].concat(finalArray)\r\n     .sort((a, b) => a.price > b.price ? 1 : -1)\r\n      finalArray = priceDescArray;\r\n    } else if(value === \"price_asc\") {\r\n      let priceAscArray = [].concat(finalArray)\r\n    .sort((a, b) => a.price < b.price ? 1 : -1)\r\n      finalArray = priceAscArray;\r\n    } else if(value === \"published\") {\r\n      let publishArray = [].concat(finalArray)\r\n    .sort((a, b) => a.date < b.date ? 1 : -1)\r\n      finalArray = publishArray;\r\n    }\r\n\r\n    this.setState({\r\n      items: finalArray\r\n    })\r\n  };\r\n\r\n  getFiltersOnMount = () => {\r\n    let urlParams = new URLSearchParams(window.location.search)\r\n\r\n    var params = [];\r\n    for (const [key, value] of urlParams) {\r\n      var filter = {};\r\n\r\n      switch(key){\r\n        case 'q':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: undefined,\r\n            tagValue: undefined,\r\n          };\r\n          params.push(filter)\r\n          break;\r\n        case 'price_max':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"maxPrice\",\r\n            tagValue: `til ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'price_min':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"minPrice\",\r\n            tagValue: `fra ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'status':\r\n          if(value === \"new\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusNew\",\r\n              tagValue: \"Nytt\",\r\n            };\r\n          } else if(value === \"used\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusUsed\",\r\n              tagValue: \"Brukt\",\r\n            };\r\n          } \r\n          params.push(filter);\r\n          break;\r\n        case 'published':\r\n          filter = {\r\n            queryKey : key,\r\n            queryValue: value,\r\n            tagKey: key,\r\n            tagValue: value\r\n          }\r\n          params.push(filter);\r\n          break;\r\n        default:\r\n          \r\n      }\r\n    }\r\n    this.setState({\r\n      filters: params\r\n    });\r\n    return params;\r\n  };\r\n\r\n  makeSearch = () => {\r\n      this.searchAlgorithm(this.state.filters) \r\n  };\r\n\r\n  returnQueryString(filters) {\r\n    var queryString = \"\";\r\n    for (const filter of filters) {\r\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\r\n    }\r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n\r\n    return queryString;\r\n  }\r\n\r\n  searchAlgorithm = (filters) => {\r\n    \r\n    let queryString = this.returnQueryString(filters);\r\n    // let query = `/file/getmenuitems?${queryString}`;\r\n    let query2 = '/searchproduct?q=a'\r\n    instanceAxs\r\n      .get(query2)\r\n      .then((response) => {\r\n        console.log(\"Search response\", response.data);\r\n        if (response.status === 200) {\r\n          const productArray = response.data.productArray;\r\n          this.setState({ productArray });\r\n          window.history.pushState(\"page2\", \"seach made\", `/search?${queryString}`);\r\n        } else {\r\n          console.log(response.data.message)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let params = this.getFiltersOnMount();\r\n    this.searchAlgorithm(params)\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <div className=\" \">\r\n          <button  onClick={this.makeSearch}>\r\n            Search\r\n          </button>\r\n          <select defaultValue=\"\">\r\n            <option>biler</option>\r\n          </select>\r\n          {this.state.productArray.map(item => {\r\n            return(\r\n              <ProductCard\r\n                img = {item.annonceImages}\r\n                name={item.title}\r\n                location={item.location}\r\n                price={item.price}\r\n                id={item._id}\r\n              ></ProductCard>\r\n            )\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}