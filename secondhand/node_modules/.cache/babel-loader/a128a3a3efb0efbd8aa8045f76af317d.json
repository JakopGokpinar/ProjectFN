{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js\";\nimport React from \"react\";\nimport \"./NewAnnonce.css\";\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport { instanceAxs } from \"../../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewAnnonce extends React.Component {\n  constructor(props) {\n    this.state = {\n      imageArray: [],\n      imageLocations: [],\n      annonceProperties: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annonceFormDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"annonce-form\",\n        onSubmit: this.submitAnnonce,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tittel\",\n          name: \"title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Price\",\n          name: \"price\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/*\",\n          multiple: true,\n          onChange: this.onImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          name: \"button\",\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewAnnonce;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/NewAnnonce/NewAnnonce.js"],"names":["React","getCroppedImage","dataURLtoFile","instanceAxs","NewAnnonce","Component","constructor","props","state","imageArray","imageLocations","annonceProperties","render","submitAnnonce","onImageChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,cAAc,EAAE,EAFP;AAGTC,MAAAA,iBAAiB,EAAE;AAHV,KAAb;AAKH;;AA4ECC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,QAAQ,EAAE,KAAKC,aAAvC;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,QAA/B;AAAwC,UAAA,IAAI,EAAC,OAA7C;AAAqD,UAAA,QAAQ;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAoD,UAAA,QAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,MAAM,EAAC,SAAvC;AAAiD,UAAA,QAAQ,MAAzD;AAA0D,UAAA,QAAQ,EAAE,KAAKC,aAAzE;AAAwF,UAAA,QAAQ;AAAhG;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA9FsC;;AAiGzC,eAAeV,UAAf","sourcesContent":["import React from \"react\";\n\nimport \"./NewAnnonce.css\";\nimport { getCroppedImage } from \"../../utils/cropImage\";\nimport { dataURLtoFile } from \"../../utils/dataURltoFile\";\nimport { instanceAxs } from \"../../config/api\";\n\nclass NewAnnonce extends React.Component {\n  constructor(props){\n    this.state = {\n        imageArray: [],\n        imageLocations: [],\n        annonceProperties: {}\n    }\n} \n\nsubmitAnnonce = async (event) => {\n  event.preventDefault();\n  var annonceObject = {};\n\n  for (let i = 0; i < event.target.length; i++) {\n    let element = event.target[i];\n    let propTitle = element.name;\n\n    if (propTitle === 'image' || propTitle === 'button') continue;\n\n    annonceObject[propTitle] = element.value;\n    this.setState({ annonceProperties: annonceObject})\n  }\n\n   const formData = await this.convertImagesToFormData();\n   this.uploadImagesToServer(formData, this.uploadAnnonceToServer);\n}\n\n onImageChange = (event) => {\n  if(!event.target.files) return;   //target.files seçilen dosyaları döner\n\n  const imageArray = [];  // create an array to store readable data of images\n  // Array.from() target.files'ı iterable bir array'e dönüştürür\n  Array.from(event.target.files).forEach(file => { \n    var reader = new FileReader();  //Yüklenen resmin datasını oku.\n    reader.readAsDataURL(file);\n    reader.addEventListener('load', () => { imageArray.push({name: file.name, data: reader.result})})\n  })  \n \n  this.setState({ imageArray})\n};\n\n\n convertImagesToFormData =  async () => {\n  var formData = new FormData();\n  const imageArray = this.state.imageArray;\n\n  for (const image of imageArray) {   //await kullanımı için for...of döngüsü\n    const canvas = await getCroppedImage(image.data);\n    const canvasDataUrl = canvas.toDataURL(\"image/jpeg\");\n    const convertedUrltoFile = dataURLtoFile(canvasDataUrl, image.name);\n\n    formData.append(\"annonceImages\", convertedUrltoFile);\n    return formData;\n  }\n }\n\n\n uploadImagesToServer =  (formData, cb) => {\n  instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n\n      if (result.data.message === 'images uploaded') {\n        var imageLocations = result.data.files.map(e => e.location)\n        this.setState({ imageLocations })\n        cb(); // run uploadAnnoncesToDb after uploading images\n      }\n    })\n    .catch( err => console.log(err) );\n }\n\n\n uploadAnnonceToServer =  () => {\n  let annonce = {\n    annonceproperties: this.state.annonceProperties, \n    imagelocations: this.state.imageLocations\n  }\n\n  instanceAxs.post('/newannonce/create', annonce).then(result => {\n    console.log(result)\n  })\n  .catch( err => console.log(err) );\n }\n\n\n  render() {\n    return (\n      <div className=\"annonceFormDiv\">\n        <form id=\"annonce-form\" onSubmit={this.submitAnnonce}>\n          <input type=\"text\" placeholder=\"Tittel\" name=\"title\" required></input>\n          <input type=\"text\" placeholder=\"Price\" name=\"price\" required></input>\n          <input type=\"file\" name=\"image\" accept=\"image/*\" multiple onChange={this.onImageChange} required></input>\n          <button type=\"submit\" name=\"button\">Publish</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewAnnonce;\n"]},"metadata":{},"sourceType":"module"}