{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/SearchedResultPage/SearchResult.js\";\nimport React from \"react\";\nimport \"./SearchResult.css\";\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\nimport { instanceAxs } from \"../../config/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSortingCategory = value => {\n      var finalArray = this.state.items;\n\n      if (value === \"price_desc\") {\n        let priceDescArray = [].concat(finalArray).sort((a, b) => a.price > b.price ? 1 : -1);\n        finalArray = priceDescArray;\n      } else if (value === \"price_asc\") {\n        let priceAscArray = [].concat(finalArray).sort((a, b) => a.price < b.price ? 1 : -1);\n        finalArray = priceAscArray;\n      } else if (value === \"published\") {\n        let publishArray = [].concat(finalArray).sort((a, b) => a.date < b.date ? 1 : -1);\n        finalArray = publishArray;\n      }\n\n      this.setState({\n        items: finalArray\n      });\n    };\n\n    this.getFiltersOnMount = () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      var params = [];\n\n      for (const [key, value] of urlParams) {\n        var filter = {};\n\n        switch (key) {\n          case 'q':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: undefined,\n              tagValue: undefined\n            };\n            params.push(filter);\n            break;\n\n          case 'price_max':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"maxPrice\",\n              tagValue: `til ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'price_min':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"minPrice\",\n              tagValue: `fra ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'status':\n            if (value === \"new\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusNew\",\n                tagValue: \"Nytt\"\n              };\n            } else if (value === \"used\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusUsed\",\n                tagValue: \"Brukt\"\n              };\n            }\n\n            params.push(filter);\n            break;\n\n          case 'published':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: key,\n              tagValue: value\n            };\n            params.push(filter);\n            break;\n\n          default:\n        }\n      }\n\n      this.setState({\n        filters: params\n      });\n      return params;\n    };\n\n    this.getTags = queryFilters => {\n      var filters = queryFilters === undefined ? this.state.filters : queryFilters;\n      var tags = [];\n\n      for (const filter of filters) {\n        if (filter.tagKey !== undefined) {\n          var tag = {\n            key: filter.tagKey,\n            value: filter.tagValue,\n            queryKey: filter.queryKey,\n            queryValue: filter.queryValue\n          };\n          tags.push(tag);\n        }\n      }\n\n      this.setState({\n        tagArray: tags\n      });\n      return tags;\n    };\n\n    this.makeSearch = () => {\n      this.searchAlgorithm(this.state.filters);\n    };\n\n    this.setFilter = (queryKey, queryValue, tagKey, tagValue) => {\n      var queryFilters = this.state.filters;\n      var multipleQueryFilters = this.state.filtersWithMultipleQueries;\n      var filter = queryFilters.find(element => element.tagKey === tagKey);\n      var index = queryFilters.indexOf(filter);\n\n      if (queryValue === '') {\n        if (index !== -1) {\n          queryFilters.splice(index, 1);\n          this.setState({\n            filters: queryFilters\n          });\n          this.removeTag(tagKey, queryKey);\n        }\n\n        return;\n      }\n\n      if (index === -1) {\n        var newFilter = {\n          queryKey: queryKey,\n          queryValue: queryValue,\n          tagKey: tagKey,\n          tagValue: tagValue\n        };\n        queryFilters.push(newFilter);\n        this.setState({\n          filters: queryFilters\n        });\n        this.addFilterTag(tagKey, tagValue, queryKey, queryValue);\n        return;\n      }\n\n      if (multipleQueryFilters.includes(queryKey, 0)) {\n        var qValue = filter.queryValue;\n        if (qValue === undefined || qValue === null) qValue = \"\";\n        if (!qValue.includes(queryValue)) qValue += \" \" + queryValue;\n        qValue = qValue.trim();\n        filter.queryValue = qValue;\n        queryFilters[index] = filter;\n        this.addFilterTag(tagKey, tagValue, filter, qValue);\n      } else {\n        filter.queryValue = queryValue;\n        filter.tagValue = tagValue;\n        queryFilters[index] = filter;\n        this.addFilterTag(tagKey, tagValue, filter, queryValue);\n      }\n\n      this.setState({\n        filters: queryFilters\n      });\n    };\n\n    this.addFilterTag = (key, value, queryKey, queryValue) => {\n      let tagArr = this.state.tagArray;\n      var tagObj = {};\n      var object = tagArr.find(obj => obj.key === key);\n      var objIndex = tagArr.indexOf(object);\n\n      if (objIndex !== -1) {\n        tagObj = {\n          key,\n          value: value,\n          queryKey,\n          queryValue: queryValue\n        };\n        tagArr[objIndex] = tagObj;\n      } else {\n        tagArr.push({\n          key: key,\n          value: value,\n          queryKey: queryKey,\n          queryValue: queryValue\n        });\n      }\n\n      this.setState({\n        tagArr: tagArr\n      });\n    };\n\n    this.removeTag = (key, queryKey) => {\n      var tagArray = this.state.tagArray;\n      let obj = tagArray.find(x => x.key === key);\n\n      if (obj !== undefined) {\n        let index = tagArray.indexOf(obj);\n        tagArray.splice(index, 1);\n        this.setState({\n          tagArray\n        });\n      }\n\n      this.searchAlgorithm(this.state.filters);\n    };\n\n    this.removeAllFilters = () => {\n      var filterObj = this.state.filters;\n      var filterArr = [];\n\n      for (const filter of filterObj) {\n        // remove all filters except for 'q'\n        if (filter.queryKey !== 'q') break;\n        filterArr.push(filter);\n      }\n\n      this.setState({\n        tagArray: [],\n        filters: filterArr\n      });\n    };\n\n    this.searchAlgorithm = filters => {\n      let queryString = this.returnQueryString(filters); // let query = `/file/getmenuitems?${queryString}`;\n\n      let query2 = '/searchproduct?q=a';\n      instanceAxs.get(query2).then(response => {\n        console.log(\"Search response\", response.data);\n\n        if (response.status === 200) {\n          const productArray = response.data.productArray;\n          this.setState({\n            productArray\n          });\n          window.history.pushState(\"page2\", \"seach made\", `/search?${queryString}`);\n        } else {\n          console.log(response.data.message);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      productArray: [],\n      filtersWithMultipleQueries: [\"status\", \"location\"],\n      resultCount: 0,\n      tagArray: [],\n      categoryArray: [],\n      urlParams: new URLSearchParams(props.location.search),\n      filters: [{\n        queryKey: \"q\",\n        queryValue: new URLSearchParams(props.location.search).get(\"q\")\n      }],\n      minAndMaxPrice: undefined\n    };\n  }\n\n  returnQueryString(filters) {\n    var queryString = \"\";\n\n    for (const filter of filters) {\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\n    }\n\n    if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1);\n    return queryString;\n  }\n\n  componentDidMount() {\n    let params = this.getFiltersOnMount();\n    this.searchAlgorithm(params);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" \",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.makeSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), this.state.productArray.map((item, index) => {\n        item.annonce = item;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(ProductCard, {\n              img: item.annonce.annonceImages,\n              price: item.annonce.price,\n              name: item.annonce.title,\n              id: item.annonce._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 19\n          }, this)\n        }, item.annonce._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchResult;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukth√•nd/secondhand/src/Pages/SearchedResultPage/SearchResult.js"],"names":["React","ProductCard","instanceAxs","SearchResult","Component","constructor","props","setSortingCategory","value","finalArray","state","items","priceDescArray","concat","sort","a","b","price","priceAscArray","publishArray","date","setState","getFiltersOnMount","urlParams","URLSearchParams","window","location","search","params","key","filter","queryKey","queryValue","tagKey","undefined","tagValue","push","filters","getTags","queryFilters","tags","tag","tagArray","makeSearch","searchAlgorithm","setFilter","multipleQueryFilters","filtersWithMultipleQueries","find","element","index","indexOf","splice","removeTag","newFilter","addFilterTag","includes","qValue","trim","tagArr","tagObj","object","obj","objIndex","x","removeAllFilters","filterObj","filterArr","queryString","returnQueryString","query2","get","then","response","console","log","data","status","productArray","history","pushState","message","catch","err","resultCount","categoryArray","minAndMaxPrice","length","slice","componentDidMount","render","map","item","annonce","annonceImages","title","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./SearchResult.css\";\r\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\r\nimport { instanceAxs } from \"../../config/api\";\r\n\r\n\r\nclass SearchResult extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productArray: [],\r\n      filtersWithMultipleQueries: [\"status\", \"location\"],\r\n      resultCount: 0,\r\n      tagArray: [],\r\n      categoryArray: [],\r\n      urlParams: new URLSearchParams(props.location.search),\r\n      filters: [\r\n        {\r\n          queryKey: \"q\",\r\n          queryValue: new URLSearchParams(props.location.search).get(\"q\"),\r\n        }\r\n      ],\r\n      minAndMaxPrice: undefined,\r\n    };\r\n  }\r\n\r\n  setSortingCategory = (value) => {\r\n    var finalArray = this.state.items;\r\n\r\n    if(value === \"price_desc\") {\r\n      let priceDescArray = [].concat(finalArray)\r\n     .sort((a, b) => a.price > b.price ? 1 : -1)\r\n      finalArray = priceDescArray;\r\n    } else if(value === \"price_asc\") {\r\n      let priceAscArray = [].concat(finalArray)\r\n    .sort((a, b) => a.price < b.price ? 1 : -1)\r\n      finalArray = priceAscArray;\r\n    } else if(value === \"published\") {\r\n      let publishArray = [].concat(finalArray)\r\n    .sort((a, b) => a.date < b.date ? 1 : -1)\r\n      finalArray = publishArray;\r\n    }\r\n\r\n    this.setState({\r\n      items: finalArray\r\n    })\r\n  };\r\n\r\n  getFiltersOnMount = () => {\r\n    let urlParams = new URLSearchParams(window.location.search)\r\n\r\n    var params = [];\r\n    for (const [key, value] of urlParams) {\r\n      var filter = {};\r\n\r\n      switch(key){\r\n        case 'q':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: undefined,\r\n            tagValue: undefined,\r\n          };\r\n          params.push(filter)\r\n          break;\r\n        case 'price_max':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"maxPrice\",\r\n            tagValue: `til ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'price_min':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"minPrice\",\r\n            tagValue: `fra ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'status':\r\n          if(value === \"new\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusNew\",\r\n              tagValue: \"Nytt\",\r\n            };\r\n          } else if(value === \"used\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusUsed\",\r\n              tagValue: \"Brukt\",\r\n            };\r\n          } \r\n          params.push(filter);\r\n          break;\r\n        case 'published':\r\n          filter = {\r\n            queryKey : key,\r\n            queryValue: value,\r\n            tagKey: key,\r\n            tagValue: value\r\n          }\r\n          params.push(filter);\r\n          break;\r\n        default:\r\n          \r\n      }\r\n    }\r\n    this.setState({\r\n      filters: params\r\n    });\r\n    return params;\r\n  };\r\n\r\n  getTags = (queryFilters) => {\r\n    var filters = queryFilters === undefined ? this.state.filters : queryFilters;\r\n    var tags = [];\r\n\r\n    for (const filter of filters) {\r\n      if (filter.tagKey !== undefined) {\r\n        var tag = {\r\n          key: filter.tagKey,\r\n          value: filter.tagValue,\r\n          queryKey: filter.queryKey,\r\n          queryValue: filter.queryValue,\r\n        };\r\n        tags.push(tag);\r\n      }\r\n    }\r\n    this.setState({\r\n      tagArray: tags,\r\n    });\r\n    return tags;\r\n  };\r\n\r\n  makeSearch = () => {\r\n      this.searchAlgorithm(this.state.filters) \r\n  };\r\n\r\n  setFilter = (queryKey, queryValue, tagKey, tagValue) => {\r\n    var queryFilters = this.state.filters;\r\n    var multipleQueryFilters = this.state.filtersWithMultipleQueries;\r\n    var filter = queryFilters.find((element) => element.tagKey === tagKey);\r\n    var index = queryFilters.indexOf(filter);\r\n\r\n    if (queryValue === '') {\r\n      if(index !== -1){\r\n        queryFilters.splice(index,1)\r\n        this.setState({\r\n          filters: queryFilters\r\n        });\r\n        this.removeTag(tagKey, queryKey)\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (index === -1) {\r\n      var newFilter = {\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n        tagKey: tagKey,\r\n        tagValue: tagValue,\r\n      };\r\n\r\n      queryFilters.push(newFilter);\r\n\r\n      this.setState({\r\n        filters: queryFilters\r\n      });\r\n      this.addFilterTag(tagKey,tagValue,queryKey, queryValue);\r\n      return;\r\n    }\r\n\r\n    if (multipleQueryFilters.includes(queryKey, 0)) {\r\n      var qValue = filter.queryValue;\r\n      if (qValue === undefined || qValue === null) qValue = \"\";\r\n\r\n      if (!qValue.includes(queryValue)) qValue += \" \" + queryValue;\r\n      qValue = qValue.trim();\r\n\r\n      filter.queryValue = qValue;\r\n      queryFilters[index] = filter;\r\n      this.addFilterTag(tagKey, tagValue, filter, qValue)\r\n    } else {\r\n      filter.queryValue = queryValue;\r\n      filter.tagValue = tagValue;\r\n      queryFilters[index] = filter;\r\n      this.addFilterTag(tagKey, tagValue, filter, queryValue)\r\n    }\r\n    this.setState({\r\n      filters: queryFilters,\r\n    });\r\n  };\r\n\r\n  addFilterTag = (key, value, queryKey, queryValue) => {\r\n    let tagArr = this.state.tagArray;\r\n    var tagObj = {};\r\n    var object = tagArr.find((obj) => obj.key === key);\r\n    var objIndex = tagArr.indexOf(object);\r\n\r\n    if (objIndex !== -1) {\r\n      tagObj = {\r\n        key,\r\n        value: value,\r\n        queryKey,\r\n        queryValue: queryValue,\r\n      };\r\n      tagArr[objIndex] = tagObj;\r\n    } else {\r\n      tagArr.push({\r\n        key: key,\r\n        value: value,\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n      });\r\n    }\r\n    this.setState({\r\n      tagArr: tagArr,\r\n    });\r\n  };\r\n\r\n  removeTag = (key, queryKey) => {\r\n    var tagArray = this.state.tagArray;\r\n    let obj = tagArray.find((x) => x.key === key);\r\n    if(obj !== undefined){\r\n      let index = tagArray.indexOf(obj);\r\n      tagArray.splice(index, 1);\r\n      this.setState({ tagArray });\r\n    } \r\n    this.searchAlgorithm(this.state.filters)\r\n  };\r\n\r\n  removeAllFilters = () => {\r\n    var filterObj = this.state.filters;\r\n    var filterArr = [];\r\n\r\n    for(const filter of filterObj) {    // remove all filters except for 'q'\r\n      if(filter.queryKey !== 'q') break;\r\n      filterArr.push(filter)\r\n    }\r\n\r\n    this.setState({\r\n      tagArray: [],\r\n      filters: filterArr,\r\n    });\r\n  };\r\n\r\n  returnQueryString(filters) {\r\n    var queryString = \"\";\r\n    for (const filter of filters) {\r\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\r\n    }\r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n\r\n    return queryString;\r\n  }\r\n\r\n  searchAlgorithm = (filters) => {\r\n    \r\n    let queryString = this.returnQueryString(filters);\r\n    // let query = `/file/getmenuitems?${queryString}`;\r\n    let query2 = '/searchproduct?q=a'\r\n    instanceAxs\r\n      .get(query2)\r\n      .then((response) => {\r\n        console.log(\"Search response\", response.data);\r\n        if (response.status === 200) {\r\n          const productArray = response.data.productArray;\r\n          this.setState({ productArray });\r\n          window.history.pushState(\"page2\", \"seach made\", `/search?${queryString}`);\r\n        } else {\r\n          console.log(response.data.message)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let params = this.getFiltersOnMount();\r\n    this.searchAlgorithm(params)\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <div className=\" \">\r\n          <button  onClick={this.makeSearch}>\r\n            Search\r\n          </button>\r\n            {this.state.productArray.map((item, index) => {\r\n              item.annonce = item\r\n              return (\r\n                <React.Fragment key={item.annonce._id}>\r\n                  <div className=\"\" >\r\n                    <ProductCard                \r\n                      img={item.annonce.annonceImages}\r\n                      price={item.annonce.price}\r\n                      name={item.annonce.title}\r\n                      id={item.annonce._id}\r\n                    />\r\n                  </div>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}