{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/Profile/Profile/Profile.js\";\nimport './Profile.css';\nimport React from 'react';\nimport { instanceAxs } from '../../../config/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadImagesToServer = (formData, cb) => {\n      instanceAxs.post('/newannonce/imageupload', formData).then(result => {\n        if (result.data.message === 'images uploaded') {\n          var imageLocations = result.data.files.map(e => e.location);\n          this.setState({\n            imageLocations\n          });\n          cb(); // run uploadAnnoncesToDb after uploading images\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.getProfileImage = () => {\n      instanceAxs.get('/profile/getprofileimg').then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      profileImgLink: '',\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getProfileImage();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/Pages/Profile/Profile/Profile.js"],"names":["React","instanceAxs","Profile","Component","constructor","props","uploadImagesToServer","formData","cb","post","then","result","data","message","imageLocations","files","map","e","location","setState","catch","err","console","log","getProfileImage","get","response","error","state","profileImgLink","isLoading","componentDidMount","render"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,oBARkB,GAQM,CAACC,QAAD,EAAWC,EAAX,KAAkB;AACtCP,MAAAA,WAAW,CAACQ,IAAZ,CAAiB,yBAAjB,EAA4CF,QAA5C,EAAsDG,IAAtD,CAA2DC,MAAM,IAAI;AAEjE,YAAIA,MAAM,CAACC,IAAP,CAAYC,OAAZ,KAAwB,iBAA5B,EAA+C;AAC7C,cAAIC,cAAc,GAAGH,MAAM,CAACC,IAAP,CAAYG,KAAZ,CAAkBC,GAAlB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,QAA7B,CAArB;AACA,eAAKC,QAAL,CAAc;AAAEL,YAAAA;AAAF,WAAd;AACAN,UAAAA,EAAE,GAH2C,CAGvC;AACP;AACF,OAPH,EAQGY,KARH,CAQUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARjB;AASH,KAlBiB;;AAAA,SAoBlBG,eApBkB,GAoBA,MAAM;AACpBvB,MAAAA,WAAW,CAACwB,GAAZ,CAAgB,wBAAhB,EAA0Cf,IAA1C,CAA+CgB,QAAQ,IAAI;AACvDJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACH,OAFD,EAGCN,KAHD,CAGOO,KAAK,IAAI;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,OALD;AAMH,KA3BiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAuBDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,eAAL;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,CAAC,KAAKJ,KAAL,CAAWE,SAAZ,gBACD;AAAA;AAAA;AAAA;AAAA,cADC,gBAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA5CiC;;AA+CtC,eAAe5B,OAAf","sourcesContent":["import './Profile.css';\r\nimport React from 'react';\r\nimport { instanceAxs } from '../../../config/api.js';\r\n\r\nclass Profile extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            profileImgLink: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    uploadImagesToServer =  (formData, cb) => {\r\n        instanceAxs.post('/newannonce/imageupload', formData).then(result => {\r\n      \r\n            if (result.data.message === 'images uploaded') {\r\n              var imageLocations = result.data.files.map(e => e.location)\r\n              this.setState({ imageLocations })\r\n              cb(); // run uploadAnnoncesToDb after uploading images\r\n            }\r\n          })\r\n          .catch( err => console.log(err) );\r\n    }\r\n\r\n    getProfileImage = () => {\r\n        instanceAxs.get('/profile/getprofileimg').then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProfileImage();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {!this.state.isLoading ? \r\n                <div></div>\r\n                :\r\n                <p>Loading</p>}\r\n            </div>         \r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}