{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Component/Navbar/Navbar.js\";\nimport React from \"react\";\n/* import { Link , withRouter} from \"react-router-dom\";\r\nimport logo from \"../../resources/logo.svg\";\r\nimport { connect } from \"react-redux\"; */\n\nimport \"./Navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkCharacters = async () => {\n      let input = this.state.searchInput.trim();\n      let searchInput = input.replace(/\\s/g, \"+\");\n      this.setState({\n        searchInput\n      });\n    };\n\n    this.makeSearch = async () => {\n      await this.checkCharacters();\n      let query = `/search?q=${this.state.searchInput}`;\n      this.props.history.push(query);\n      window.location.reload(false);\n    };\n\n    this.state = {\n      currentY: 0,\n      isRender: true,\n      searchInput: \"\"\n    };\n    this.scroll = this.scroll.bind(this);\n  }\n\n  scroll() {\n    if (window.scrollY > this.state.currentY) {\n      this.setState({\n        isRender: false\n      });\n    } else {\n      this.setState({\n        isRender: true\n      });\n    }\n\n    this.setState({\n      currentY: window.scrollY\n    });\n  }\n\n  render() {\n    window.addEventListener(\"scroll\", this.scroll);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isRender && /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-expand-sm bg-dark\",\n        id: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"#\",\n              children: \"Finn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'white'\n              },\n              children: \"Ahmet Gokpinar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/* const mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLogged,\r\n    username: state.user.email,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(Navbar)); */\n\n\nexport default Navbar;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/Component/Navbar/Navbar.js"],"names":["React","Navbar","Component","constructor","props","checkCharacters","input","state","searchInput","trim","replace","setState","makeSearch","query","history","push","window","location","reload","currentY","isRender","scroll","bind","scrollY","render","addEventListener","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;;AACA,OAAO,cAAP;;;AAGA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,eAVmB,GAUD,YAAY;AAC1B,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,EAAZ;AACA,UAAID,WAAW,GAAGF,KAAK,CAACI,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAlB;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA;AADU,OAAd;AAGH,KAhBkB;;AAAA,SAkBnBI,UAlBmB,GAkBN,YAAY;AACrB,YAAM,KAAKP,eAAL,EAAN;AACA,UAAIQ,KAAK,GAAI,aAAY,KAAKN,KAAL,CAAWC,WAAY,EAAhD;AACA,WAAKJ,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAyBF,KAAzB;AACAG,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,KAvBkB;;AAEjB,SAAKX,KAAL,GAAa;AACXY,MAAAA,QAAQ,EAAE,CADC;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXZ,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKA,SAAKa,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAiBDD,EAAAA,MAAM,GAAG;AACP,QAAIL,MAAM,CAACO,OAAP,GAAiB,KAAKhB,KAAL,CAAWY,QAAhC,EAA0C;AACxC,WAAKR,QAAL,CAAc;AAAES,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAFD,MAEO;AACL,WAAKT,QAAL,CAAc;AAAES,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;;AACD,SAAKT,QAAL,CAAc;AAAEQ,MAAAA,QAAQ,EAAEH,MAAM,CAACO;AAAnB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,MAAvC;AACA,wBACE;AAAA,gBACG,KAAKd,KAAL,CAAWa,QAAX,iBACC;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAiD,QAAA,EAAE,EAAC,QAApD;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,UAAb;AAAwB,cAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,SAAS,EAAC,UAAd;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAQE;AAAA,mCACE;AAAG,cAAA,KAAK,EAAE;AAACM,gBAAAA,KAAK,EAAE;AAAR,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAzDkC;AA4DrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAezB,MAAf","sourcesContent":["import React from \"react\";\r\n/* import { Link , withRouter} from \"react-router-dom\";\r\nimport logo from \"../../resources/logo.svg\";\r\nimport { connect } from \"react-redux\"; */\r\nimport \"./Navbar.css\";\r\n\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentY: 0,\r\n      isRender: true,\r\n      searchInput: \"\",\r\n    };\r\n    this.scroll = this.scroll.bind(this);\r\n  }\r\n\r\n  checkCharacters = async () => {\r\n      let input = this.state.searchInput.trim();\r\n      let searchInput = input.replace(/\\s/g, \"+\");\r\n      this.setState({\r\n          searchInput\r\n      })\r\n  }\r\n\r\n  makeSearch = async () => {\r\n      await this.checkCharacters();\r\n      let query = `/search?q=${this.state.searchInput}`;\r\n      this.props.history.push( query);    \r\n      window.location.reload(false)        \r\n  }\r\n\r\n  scroll() {\r\n    if (window.scrollY > this.state.currentY) {\r\n      this.setState({ isRender: false });\r\n    } else {\r\n      this.setState({ isRender: true });\r\n    }\r\n    this.setState({ currentY: window.scrollY });\r\n  }\r\n\r\n  render() {\r\n    window.addEventListener(\"scroll\", this.scroll);\r\n    return (\r\n      <div>\r\n        {this.state.isRender &&\r\n          <nav className=\"navbar navbar-expand-sm bg-dark\" id=\"navbar\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">Finn</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <input type=\"text\" placeholder=\"Search...\"></input>\r\n                <button>Search</button>\r\n              </li>\r\n              <li>\r\n                <p style={{color: 'white'}}>Ahmet Gokpinar</p>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* const mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLogged,\r\n    username: state.user.email,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(Navbar)); */\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}